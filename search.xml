<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/01/04/biao-zhun-da-an-hui-zong/"/>
      <url>/2021/01/04/biao-zhun-da-an-hui-zong/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="标准答案（汇总）"><a href="#标准答案（汇总）" class="headerlink" title="标准答案（汇总）"></a>标准答案（汇总）</h1><h2 id="22、给出OSI模型和TCP-IP各层间的对应关系"><a href="#22、给出OSI模型和TCP-IP各层间的对应关系" class="headerlink" title="22、给出OSI模型和TCP/IP各层间的对应关系"></a>22、给出OSI模型和TCP/IP各层间的对应关系</h2><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/49459302b7834b4b95b0230bc6984da1.png" alt="img"></p><h2 id="23、请解释什么是多路复用，什么是多路分解，并给出自己对“路”的理解。"><a href="#23、请解释什么是多路复用，什么是多路分解，并给出自己对“路”的理解。" class="headerlink" title="23、请解释什么是多路复用，什么是多路分解，并给出自己对“路”的理解。"></a>23、请解释什么是多路复用，什么是多路分解，并给出自己对“路”的理解。</h2><blockquote><ul><li>多路复用：从源主机的不同套接字中收集数据块，并为每个数据块封装上首部信息（这将在多路分解时使用）从而生成报文段，然后将报文段传递到网络层的工作称为多路复用。</li><li>多路分解：在接收端，运输层检查这些字段并标识出接收套接字，然后将该报文定向到该套接字。其工作方式可以简单地认为是这样的，主机上的每个套接字被分配一个端口号，当报文到达主机时，运输层检查报文段中的目的端口号，并将其定向到相应的套接字</li><li>路的理解：不同套接字之间的信息传递路径</li></ul></blockquote><h2 id="24、在网络中经常看到point-to-point和end-to-end两个名词，请解释这两个名词之间的区别"><a href="#24、在网络中经常看到point-to-point和end-to-end两个名词，请解释这两个名词之间的区别" class="headerlink" title="24、在网络中经常看到point-to-point和end-to-end两个名词，请解释这两个名词之间的区别"></a>24、在网络中经常看到point-to-point和end-to-end两个名词，请解释这两个名词之间的区别</h2><blockquote><ul><li><p>point-to-point（点到点）</p><ul><li><p>将数据通过一层一层直连的设备从发送端发送到接收端，每次从一个设备传输到其直连设备的这个过程称为点到点</p></li><li><p>点到点是物理拓扑</p></li><li><p>基于数据链路层、网络层</p></li></ul></li></ul><ul><li><p>end-to-end（端到端）</p><ul><li><p>在数据传输前，通过各种交换设备在两端设备之间建立一条链路，忽略中间的设备，这样一条逻辑上的直连路径被称为端到端</p></li><li><p>端到端是应用程序（进程）之间的通信</p></li><li><p>基于传输层、应用层</p></li><li><p>端到端传输实际上由多个点对点传输组成和实现</p></li></ul></li></ul></blockquote><h2 id="25、CSMA-CD中的CD指的是什么，那么CA又指的是什么，描述这两种不同的机制并给出他们的适用场景。"><a href="#25、CSMA-CD中的CD指的是什么，那么CA又指的是什么，描述这两种不同的机制并给出他们的适用场景。" class="headerlink" title="25、CSMA/CD中的CD指的是什么，那么CA又指的是什么，描述这两种不同的机制并给出他们的适用场景。"></a>25、CSMA/CD中的CD指的是什么，那么CA又指的是什么，描述这两种不同的机制并给出他们的适用场景。</h2><blockquote><p>CSMA/CD（<strong>载波帧听，多路访问/冲突检测</strong>）</p><p>CSMA/CA（<strong>载波侦听多路访问／冲突避免</strong>）</p><ul><li><p>CD：冲突检测，广播网络中，主机发送数据前都要检测信道是否空闲，边发送边监听，检测到冲突时，立马停止数据发送。</p><ul><li>适用于：以太网</li></ul></li><li><p>CA：冲突避免，广播网络上，检测到信道空闲时，等待一段时间再发送数据，而且会发送一个很小的信道侦测帧，如果收到接入点返回的CTS，就认为信道空闲，然后再发送数据。</p><ul><li>适用于：无限局域网</li></ul></li></ul></blockquote><h2 id="26、为什么网卡上有硬件地址，我们还要设计IP地址？"><a href="#26、为什么网卡上有硬件地址，我们还要设计IP地址？" class="headerlink" title="26、为什么网卡上有硬件地址，我们还要设计IP地址？"></a>26、为什么网卡上有硬件地址，我们还要设计IP地址？</h2><blockquote><ul><li><p>在internet上每台主机指定的地址称为IP地址，它是在TCP/IP协议中规定的，登录Internet的每个节点，需要统一格式的地址</p></li><li><p>一个IP地址不是用来标识一台特定的计算机，而是指每一个IP地址用来标识一台计算机和一个网络连接</p></li><li><p>如果一台主机只具备网络设备的物理地址而无IP地址，则它无法登录internet</p></li></ul></blockquote><h2 id="27、为什么ARP协议设计时选择询问为广播而回应使用单播，这样设计有什么好处"><a href="#27、为什么ARP协议设计时选择询问为广播而回应使用单播，这样设计有什么好处" class="headerlink" title="27、为什么ARP协议设计时选择询问为广播而回应使用单播，这样设计有什么好处"></a>27、为什么ARP协议设计时选择询问为广播而回应使用单播，这样设计有什么好处</h2><blockquote><ul><li>目标地址未知，所以询问必须采取广播而非单播，因为单播需要目标地址已知</li><li>对于应答方：应答方通过提问报文提取发送方地址，通过单播回应，减少无关主机应答，提高信道利用率</li><li>对于发送请求方：因为单播回应，避免报文筛选工作，提高通信效率</li></ul></blockquote><h2 id="28、TCP-IP协议族中都有哪些协议使用到了缓存机制？缓存给他们带来的好处分别是什么？如果发生缓存溢出，它们分别采用什么方法处理？请举例2个进行说明"><a href="#28、TCP-IP协议族中都有哪些协议使用到了缓存机制？缓存给他们带来的好处分别是什么？如果发生缓存溢出，它们分别采用什么方法处理？请举例2个进行说明" class="headerlink" title="28、TCP/IP协议族中都有哪些协议使用到了缓存机制？缓存给他们带来的好处分别是什么？如果发生缓存溢出，它们分别采用什么方法处理？请举例2个进行说明"></a>28、TCP/IP协议族中都有哪些协议使用到了缓存机制？缓存给他们带来的好处分别是什么？如果发生缓存溢出，它们分别采用什么方法处理？请举例2个进行说明</h2><blockquote><p>地址解析协议ARP</p><p>在本地设置ARP缓存，用以存放最近解析出来的IP/MAC对，这样在每次传递数据报之前都不需要重新使用ARP获取目标的物理地址。</p><p>采用了软状态技术，即在给定的时间段都没有使用某个物理地址，则相应的记录就会被删除，既维持了记录的有效性，又能有效预防缓存溢出问题。</p><p>UDP，操作系统通常会在端口设置缓冲区，这样当数据到来时，操作系统会通知应用处理相应的端口数据，即使它未做好接收数据的准备，数据也不会丢失。</p><p>TCP，建立发送/接收缓存区（发送窗口/接收窗口）</p><p>调节发送速度来匹配双方处理速度，从而提高传输效率。TCP在缓冲区要积累够一个最大报文容量的数据才发送，这样大大提高了网络的吞吐率。</p><p>DNS，在客户端和服务器都会设立高速缓存。</p><p>客户端的高速缓存存放近期解析过的域名以及相应的IP地址的对应关系。服务器缓存中存放最近解析过的名字以及如何获取该名字的记录。</p><p>设立的好处是能够避免在短时间内多次访问同一台主机而需要多次解析，大大缩短了通信时间，提高了通信效率。</p><p>管理员设置一个TTL值，作为缓存中记录的有效时间。</p></blockquote><h2 id="29、基于ARP欺骗的嗅探器及会话劫持的步骤是什么"><a href="#29、基于ARP欺骗的嗅探器及会话劫持的步骤是什么" class="headerlink" title="29、基于ARP欺骗的嗅探器及会话劫持的步骤是什么"></a>29、基于ARP欺骗的嗅探器及会话劫持的步骤是什么</h2><blockquote><p>假设网络中，主机H嗅探A和B之间的通信数据</p><p>1）H首先向A发送一个ARP应答报文，其中包含的映射关系为IPB/MACH</p><p>2） A收到这个应答后，更新自己的缓存，保存映射关系IPB/MACH</p><p>3） H向B发送一个ARP应答报文，其中包含的映射关系为IPA/MACH</p><p>4） B收到这个应答后，更新自己的缓存，保存映射关系IPA/MACH</p><p>这样A和B在通信时虽然目的IP地址都是对方，但是数据报在经过物理层投递时，都会转发到H，以上H要以小于ARP缓存刷新时间间隔的频率发送报文，就能完成上述的ARP欺骗</p></blockquote><h2 id="30、为什么中间路由器不对任何被分片的数据报进行重组？"><a href="#30、为什么中间路由器不对任何被分片的数据报进行重组？" class="headerlink" title="30、为什么中间路由器不对任何被分片的数据报进行重组？"></a>30、为什么中间路由器不对任何被分片的数据报进行重组？</h2><blockquote><ul><li>优点（本题答这部分即可）<ul><li>简化路由软件的操作，从而提高通信效率</li><li>避免重复分片，避免投递设备间MTU不同而多次分片重组</li><li>每个分片独自选路，提高通信灵活性，一定程度上减少传输延时</li></ul></li><li>缺点<ul><li>可能会浪费网络带宽</li><li>增加了数据报丢失的可能性</li></ul></li></ul></blockquote><h2 id="31、差错报告类报文遵循的原则是什么？"><a href="#31、差错报告类报文遵循的原则是什么？" class="headerlink" title="31、差错报告类报文遵循的原则是什么？"></a>31、差错报告类报文遵循的原则是什么？</h2><blockquote><ul><li>ICMP差错报告报文的数据区包括发生差错的IP数据报首部以及数据区的至少前64比特。</li><li>只能向数据报的源端报告差错，不能向中间路由器报告差错</li><li>当携带ICMP差错报文的IP数据报出现差错时，不会再生成ICMP报文</li><li><strong>对于被分片的IP数据报，只能对于第一个分片应用ICMP协议</strong></li></ul></blockquote><h2 id="32、简述半开放连接检测的作用，以及引入保活定时器的作用"><a href="#32、简述半开放连接检测的作用，以及引入保活定时器的作用" class="headerlink" title="32、简述半开放连接检测的作用，以及引入保活定时器的作用"></a>32、简述半开放连接检测的作用，以及引入保活定时器的作用</h2><blockquote><p>半开放连接检测的作用：发现很长时间没有传输数据的TCP连接</p><p>引入保活定时器的作用：检测到只连接不传送数据的“半开放连接”时，并且在某种情况下释放这种连接</p></blockquote><h2 id="33、画出TCP的有限状态机"><a href="#33、画出TCP的有限状态机" class="headerlink" title="33、画出TCP的有限状态机"></a>33、画出TCP的有限状态机</h2><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/2401fb434ac1a66c6ae05ca29b4e57f8.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/01/04/di-si-zhang/"/>
      <url>/2021/01/04/di-si-zhang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><ol><li><p>引入目的</p><p>用IP（Internet Protocol）屏蔽底层物理网络协议差异，实现异构网络互联。</p></li><li><p>特性</p><ol><li><p>提供了一种无连接的投递机制</p></li><li><p>不保证数据报传输的可靠性</p></li><li><p>提供了尽最大努力的投递机制</p></li><li><p>IP协议提供无连接、不保证可靠、<strong>尽最大努力的投递机制</strong>体现在哪里？</p><p>答:使用ICMP协议允许路由器或者主机报告差错情况和提供有关的信息，帮助IP协议去尽最大努力服务。</p></li></ol></li><li><p>数据报格式</p><ol><li>版本:IPV4/6</li><li>首部长度</li><li>服务类型</li><li>总长度</li><li>标识：2字节，用于数据报分片及重组</li><li>标志：3位，MF为1表示后面还有分片，DF为1表示不能分片</li><li>片位移量：13位，起始地址/8</li><li>寿命（TTL）</li></ol></li><li><p>重组和分片</p><ol><li><p>如何标识同一个数据报的各个分片？</p><p>答：数据报各分片使用与原数据报相同的标识值。</p></li><li><p>如何标识同一个数据报各分片的顺序？</p><p>答：使用片偏移量来指示各分片中的数据在原数据报中的起始位置。</p></li><li><p>如何标识同一个数据报分片的结束？</p><p>答：IP数据报首部中包含了3个比特的标志字段。DF表示可以分片，MF表示是最后一个分片</p></li><li><p>为什么使用片偏移量，而序列号不行？</p><p>答：因为不清楚下一个网络的MTU是多大，可能会继续产生分片</p></li><li><p>重组：将若干个分片重新组合还原为原来的数据报，地点在目的主机，中间路由器不进行重组</p><ul><li>优势：简化了路由软件的操作，避免了重复分片，增强了通信的灵活性</li><li>缺陷：可能会浪费网络带宽，增加了数据报丢失的可能性</li></ul></li><li><p>分片迟迟不来怎么处理？</p><p>答：设置定时器防止由于分片丢失造成的重组过程无限延长</p></li><li><p>当目的主机收到一个数据报时，可以根据其片偏移量和MF位来判断它是否是一个分片：</p><ul><li>若MF位是0，并且分片偏移量为0，则表明它是一个完整的数据报；</li><li>如果片偏移量不为0，或者MF标志位为1，则表明它是一个分片，此时目的主机需要进行分片重组；</li></ul></li></ol></li><li><p>选路：选择一条路径，将数据报从源主机传递到目的主机的过程，称为IP数据报的选路。</p><ol><li><p>两种选路的方式</p><ul><li>直接选路：源主机和目的主机连接于同一物理网络，或者路由器待转发数据报的目的地处于该路由器直接相连的一个物理网络时，可将数据报封装成帧，直接向物理网络交付。</li><li>间接选路：源主机和目的主机不在同一物理网络上，或者路由器待转发数据报的目的地不在其直接相连的网络里时，选择另一个路由器并向其转发数据报。</li></ul></li><li><p>选路的基础</p><p>答：路由表</p><ul><li>路由表的构造：&lt;目的地，去往目的地的路径&gt;</li><li>目的地：网络地址而非主机地址</li><li>去往目的地的路径：路径是下一跳，即路径中下一个路由器的IP地址</li></ul></li><li><p>处理传入的数据报</p><ol><li><p>原则：</p><p>主机和路由器都要参与选路</p><p>只有路由器会转发IP数据报，主机不会转发IP数据报</p></li><li><p>主机为什么要参与选路？</p><p>答：<strong>发送数据报的源端主机</strong>在<strong>发送数据</strong>的时候必须要作出决定：目标是不是和自己处于同一个物理网络，如果是的话就直接进行投递，否则就要查询自己的路由表，看看应该将它投递到那个路由器</p></li><li><p>主机不转发数据报</p><p>不是给自己的，直接丢弃！</p><p>是自己的，主机的IP软件提取数据报中封装的数据，并根据首部中的协议字段值，交给所封装的相应协议处理模块。</p></li></ol></li></ol></li><li><p>Ping命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-t             Ping 指定的主机，直到停止。</span><br><span class="line">               若要查看统计信息并继续操作，请键入 Ctrl+Break；</span><br><span class="line">               若要停止，请键入 Ctrl+C。</span><br><span class="line">-a             将地址解析为主机名。</span><br><span class="line">-n count       要发送的回显请求数。</span><br><span class="line">-l size        发送缓冲区大小。</span><br><span class="line">-f             在数据包中设置“不分段”标记(仅适用于 IPv4)。</span><br><span class="line">-i TTL         生存时间。</span><br><span class="line">-v TOS         服务类型(仅适用于 IPv4。该设置已被弃用，</span><br><span class="line">               对 IP 标头中的服务类型字段没有任何</span><br><span class="line">               影响)。</span><br><span class="line">-r count       记录计数跃点的路由(仅适用于 IPv4)。</span><br><span class="line">-s count       计数跃点的时间戳(仅适用于 IPv4)。</span><br><span class="line">-j host-list   与主机列表一起使用的松散源路由(仅适用于 IPv4)。</span><br><span class="line">-k host-list    与主机列表一起使用的严格源路由(仅适用于 IPv4)。</span><br><span class="line">-w timeout     等待每次回复的超时时间(毫秒)。</span><br><span class="line">-R             同样使用路由标头测试反向路由(仅适用于 IPv6)。</span><br><span class="line">               根据 RFC 5095，已弃用此路由标头。</span><br><span class="line">               如果使用此标头，某些系统可能丢弃</span><br><span class="line">               回显请求。</span><br><span class="line">-S srcaddr     要使用的源地址。</span><br><span class="line">-c compartment 路由隔离舱标识符。</span><br><span class="line">-p             Ping Hyper-V 网络虚拟化提供程序地址。</span><br><span class="line">-4             强制使用 IPv4。</span><br><span class="line">-6             强制使用 IPv6。</span><br></pre></td></tr></table></figure></li></ol><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><ul><li>传递控制报文<ul><li>拥塞控制：路由器处理能力达到极限时要告诉源端慢点发；</li><li>选路优化：有更好的路径时应通知源端；</li><li>目的地可达性判断</li><li>时钟同步问题</li></ul></li><li>提供差错报文<ul><li>循环投递问题：可能会耗尽网络资源。TTL可以避免这种后果；</li><li>分片丢失问题：重组超时时钟可防止重组程序无限期等待；</li><li>投递失败问题：选路失败、目的主机关机、目的主机处理数据报失败等情况。</li></ul></li><li>ICMP<ul><li>传递控制信息+提供差错报告=ICMP</li><li>两者都是控制报文</li><li>差错报告和网络控制总是密切相关。</li></ul></li><li>原则：<ul><li>ICMP差错报告报文的数据区包括发生差错的IP数据报首部以及数据区的至少前64比特。</li><li>只能向数据报的源端报告差错，不能向中间路由器报告差错</li><li>当携带ICMP差错报文的IP数据报出现差错时，不会再生成ICMP报文</li><li><strong>对于被分片的IP数据报，只能对于第一个分片应用ICMP协议</strong></li></ul></li><li>提供差错报文分类<ul><li>目的站不可达：当路由器无法转发报文或交付数据时，可使用该报文通知数据报的发送者：</li><li>参数错误报文：当问题严重到必须把数据报丢弃时发送：</li><li>超时报文：TTL=0或者分片重组超时：</li><li>Photuris：用于IPsec</li></ul></li><li>网络控制报文分类<ul><li>回送请求/回送应答报文<ul><li>用于测试网络连通性</li><li>标识+序号：用于匹配请求和应答。</li></ul></li><li>路由器通告/路由器恳求报文<ul><li>用于一个网络中有多个路由器的场合：软状态技术</li><li>路由器会定期向网络中的主机发送路由器通告报文，告诉各主机可使用的路由器；</li><li>如果路由器仍然有效，那么它会定期地发送通告报文；反之若在一段时间内没有收到某路由器的通告，则主机可以放弃这个路由。</li></ul></li><li>时间戳请求/时间戳应答报文<ul><li>用途：分布式系统时钟同步，估算两台主机之间传输数据报的往返时间</li></ul></li><li>单向通知的控制类报文<ul><li>重定向报文：将更为优化的路由通告给主机</li></ul></li></ul></li><li>ICMP应用举例：<ul><li>ping：检测一个目的站是否可达</li><li>taaceroute：弥补记录路由选项的不足</li></ul></li><li>ICMP的一些安全问题<ul><li>基于ICMP的DoS攻击<ul><li>针对带宽的DoS攻击，要求：攻击主机处理能力和带宽大于被攻击主机（或者使用分布式攻击方式）</li><li>针对连接的DoS攻击：通过发送一个伪造的ICMP目的站不可达或者重定向消息来终止合法的网络连接</li></ul></li><li>基于ICMP的重定向路由欺骗：造成通信失败，或者实现数据嗅探窃听</li></ul></li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><ul><li>基于UDP的应用包括DHCP、DNS、SNMP等</li><li>引入传输层的必要性<ul><li>传输层要提供比IP层质量更高的服务</li><li>传输层要提供识别应用层进程的机制</li><li>传输层要针对不同尺寸的应用层数据进行适当的处理</li></ul></li><li>两个传输层协议<ul><li>TCP：传输控制协议，提供高可靠性服务</li><li>UDP：用户数据报协议</li></ul></li><li>应用的标识方法<ul><li>多个应用都可以基于同一传输层协议，所以必须设法指示数据的最终目标是哪个应用。</li><li>是否可以使用进程ID？<ul><li>不可以，进程是动态的，发送者无法了解接受方系统中进程的具体情况</li><li>希望在不通知所有发送者的前提下，改变接收数据的进程</li><li>用户仅需从接收方所实现的功能来识别目的地，而不需要了解实现这个功能的进程</li></ul></li><li>端口号</li><li>&lt;源IP地址，源端口号，协议，目的IP地址，目的端口号&gt;</li></ul></li><li>UDP的细节<ul><li>提供了应用程序之间传输数据报文的基本机制；</li><li>提供不可靠、无连接的数据交付服务</li><li>用于以下情况：<ul><li>某些应用仅需传输少量分组；</li><li>某些应用对效率的要求则远大于可靠性的要求。</li></ul></li><li>校验和与IP首部校验和的区别<ul><li>计算方法类似，UDP需要将伪首部被附加在UDP报文首部和数据区之前；</li><li>IP只检验数据报的首部 ，UDP 将首部和数据部分一起都检验 。</li><li>校验和计算方法： ①把伪首部添加到UDP上；②将检验和字段添零；③所有位划分为16位的字； 把所有16位的字相加， 0和0相加是0，0和1相加是1，1和1相加是0但要产生一个进位1，加到下一列。若最高位相加后产生进位，则最后得到的结果要加1 ；④最后和取反。</li></ul></li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210102132540225.png" alt="image-20210102132540225"></li></ul></li></ul><ul><li>客户端/服务器模型（C/S）<ul><li>服务器：能够在网络上提供服务的任何程序；</li><li>客户端：请求服务器提供服务的程序。<ul><li>一个服务器通常能够同时为多个客户端提供服务；</li><li>服务器要首先启动，并在某个端口上监听服务请求；</li><li>客户端则要主动请求服务器的服务；</li><li>服务器一旦收到服务请求后，会处理该请求。</li></ul></li><li>基于客户端/服务器模型的端口号使用方法<ul><li>服务器端口号必须公开；</li><li>统一指派的称为知名端口。</li></ul></li></ul></li><li>UDP的安全问题<ul><li>UDP Flood 攻击（流量型拒绝服务攻击DoS）</li><li>分布式拒绝服务攻击（DDoS）：攻击者会从多个攻击源同时对目的主机发动UDP Flood攻击，使得网络带宽迅速被消耗、被攻击主机性能下降甚至瘫痪，从而造成其他合法用户无法正常使用服务。</li><li>基于UDP的反射DDoS攻击</li></ul></li><li>端口号的实质：缓存</li></ul><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><ul><li>防止丢失：带重传的肯定确认机制</li><li>TCP确认机制的特点<ul><li>TCP的确认指明的是期望接收的下一个报文段的序号，而不是已经接收到的报文段序号。</li><li>累计确认：TCP的确认信息报告已经积累了多少个字节的数据流</li><li>不足：发送方不能收到所有成功传输的报文段确认信息，而只能知道已收到数据流中的某一个位置信息，因此有时会导致不必要的超时重传。</li><li>捎带确认：接收方通常并不设置专门的报文段反馈确认信息，而是把对上一个报文段的确认信息放到自己发给发送方的数据报文中捎带回去。</li></ul></li><li></li></ul><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><ul><li><p>静态路由配置</p><ul><li>该路径出现问题后，必须重新配置路由。</li></ul></li><li><p>动态路由信息交换</p><ul><li>能够自动适应网络连接的变化，当网络中出现新的路由或某条链路失效时，路由器能够自动学习到变化后的网络拓扑结构，选择最佳路径。</li></ul></li><li><p>路径确定：路由器为数据报决定转发接口的过程</p><ul><li>路径的存在性<ul><li>路由表不包含到所有目的地的路由，路由器用部分信息选路</li><li>路由表中存在默认路由，大部分都是靠默认路由投递。</li></ul></li><li>路径的最优性<ul><li>路由算法在构造和维护路由表时，遵循最优化原则，它们会为每条路径计算度量值（Metric Value）。如果数据报有多条路径到达目的地，则选择度量值最小的路径作为最佳路径，并将相关信息置于路由表中。</li></ul></li><li>路由度量</li></ul></li><li><p>路由算法</p><ul><li>非自适应路由算法</li><li>自适应路由算法</li><li>向量距离算法<ul><li>初始化：路由器启动时每个直连网络1项，跳数为0；</li><li>路由信息交换：每个路由器周期性地向相邻路由器报告自己的整个路由表；</li><li>路由表更新：路由器每收到一个邻站的路由表，即更新自己的路由表。</li></ul></li><li>链路状态算法<ul><li>思想：每个路由器将它的链路状态作为路由信息，定期向其它路由器报告，使得所有路由器都有一张完整和一致的网络拓扑结构图G（V，E），其中V表示由所有路由器构成的顶点集，E表示路由器间的链路集。各路由器利用Dijkstra算法求最短路径，计算到所有目的站的最短路径，并更新自己的路由表。</li><li>链路状态检测：各路由器周期性地向所有直接相邻的路由器发送查询报文，检测它们间的共享链路是否是可达的和活跃的。确定状态时n钟取k。</li><li>路由信息广播：各路由器收集到它所连接的每条链路的状态后，向其它所有参与SPF算法的路由器进行广播。</li><li>路由表更新：每个路由器根据其它路由器传入的链路状态信息，检查相应链路是否发生了变化。如果有任何链路发生变化，则要更新网络拓扑结构图，将相应链路的状态标记为up或down，并使用Dijkstra算法计算到所有目的站的最短路径，更新路由表。</li><li>特点：计算量大，具有良好的收敛性和可扩展性。</li></ul></li></ul></li><li><p>Internet路由体系的发展</p><ul><li><p>ARPANET，采用核心路由体系</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143041663.png" alt="image-20210103143041663"></p></li><li><p>NSFNET与ARPANET互联后，核心路由体系演变为对等主干路由体系</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143057951.png" alt="image-20210103143057951"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143118333.png" alt="image-20210103143118333"></p></li><li><p>随着更多的网络加入Internet，对等主干路由体系已不能满足需要，于是形成了当前的自治系统路由体系。</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143127815.png" alt="image-20210103143127815"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143139987.png" alt="image-20210103143139987"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20210103143300469.png" alt="image-20210103143300469"></p></li></ul></li></ul><h2 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h2><ul><li>RIP是最早被广泛使用的内部网关协议</li><li>RIP使用UDP进行路由信息交换，</li><li>慢收敛问题<ul><li>网络收敛：所有路由器的路由信息达成一致。收敛时间取决于两个最远路由器之间的距离。</li><li>计算到无穷问题：R1检测到网络1已经断开，于是将路径设置为不可达（16），并向R2通告该信息；R2也会向R1通告该信息。存在一个时间差</li><li>对策<ul><li>简单分割范围法：当路由器向一个接口发送路由更新报文时，其中不包含从该接口获取的路径信息。</li><li>带毒性逆转的分割范围法：当路由器向一个接口发送路由更新报文时，如果某个条目是通过该接口获得的，则将该条目的距离设置为无穷大。</li><li>抑制法：所有路由器在收到某个网络不可达的消息后，将相应表项的距离值置为16，并将此信息保留一段时间（坏消息保留时间默认60秒）。</li><li>触发更新法：一旦发现网络连接消失，就将该网络设置为不可达，并立即发送路由更新报文，而不等待正常的路由更新周期时间到。</li></ul></li><li>RIPv1存在额外跳</li><li><strong>RIPv2</strong><ul><li>增加子网掩码字段，支持VLSM、CIDR编址。</li><li>增加下一跳字段，防止额外跳。</li><li>增加路由标记字段，可传送自治系统号、路由起点等。</li><li>增加认证功能，提高安全性。</li><li>采用组播方式传输更新报文，提高更新效率。</li></ul></li></ul></li><li>子网、局域网、AS、多个AS，ISP管理的是？</li><li>EGP、RGP是什么？</li><li>RIP工作原理（理解），使用UDP进行路由信息交换，RIP路由信息的时效性（周期性的路由通告，互相修改记录表）</li><li>报文格式（不考）</li></ul><h2 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h2><ul><li>OSPF思想： 将一个大规模网络划分为多个易于管理的区域，缩小交换链路状态数据的路由器群组规模。</li><li>区域划分<ul><li>区域包括路由器和网络，用一个编号标识</li><li>非骨干区域之间不能直接进行路由信息交互，它们之间的路由信息分发由骨干区域负责<ul><li>这种体系结构不仅使得路由维护高效，而且可以隐藏区域内的网络拓扑结构，有利于提高网络安全性</li></ul></li></ul></li><li>区域分类（骨干和非骨干）</li><li>虚拟链路<ul><li>允许添加新区域，但不直接连接到骨干区域</li><li>表示新区域到骨干区域之间的逻辑连接</li><li>•两个OSPF自治系统合并时，将出现两个骨干区域，此时也可以用虚拟链路实现骨干区域逻辑连接，形成单一骨干。</li><li>使得OSPF区域结构具备很好的可扩展性</li></ul></li><li>路由汇总<ul><li>ABR隐藏到区域内部网络及ASBR所经过的中间路由器</li><li>使用CIDR技术进行路由合并</li></ul></li><li>OSPF报文<ul><li>hello报文（主要用于相邻路由器之间建立邻接关系，因为只有相邻路由器之间才能交互链路状态；）</li></ul></li><li>OSPF特点：<ul><li>不产生路由循环</li><li>收敛速度快</li><li>体系化路由，协议运行开销降低</li><li>提供服务类型路由</li><li>提供负载均衡功能</li><li>提供安全性</li><li>适用于大规模网络，最多可支持数千个路由器</li></ul></li><li>OSPF引入AS域，标定AS域有相对于的编号，主干网的编号是什么，每个AS区域都有一个主干区域</li></ul><h2 id="第十二章"><a href="#第十二章" class="headerlink" title="第十二章"></a>第十二章</h2><ul><li>BGP（不考）：边界网关协议，AS之间进行路由信息交换</li></ul><h2 id="第十三章"><a href="#第十三章" class="headerlink" title="第十三章"></a>第十三章</h2><ul><li>数据报发送一次，被Internet中的一个或者多个接受者（群组成员）收到</li><li>填空题<ul><li>IGMP和ICMP的区别</li><li>Internet的群组管理协议是叫IGMP</li></ul></li></ul><h2 id="第十四章"><a href="#第十四章" class="headerlink" title="第十四章"></a>第十四章</h2><h2 id="第十五章"><a href="#第十五章" class="headerlink" title="第十五章"></a>第十五章</h2><ul><li><p>实验上应用层东西</p></li><li><p>FTP实验</p></li><li>IP分片出大题，</li><li>DHCP客观题重点考察</li><li>DHCP和NAT</li><li>DNS主要考客观题<ul><li>高速缓存</li><li>ARP高速缓存</li></ul></li><li>共同目的：1、空间换时间，提高效率，占用那些空间，换了那些时间？</li></ul><h2 id="第十八章"><a href="#第十八章" class="headerlink" title="第十八章"></a>第十八章</h2><ul><li><p>FTP命令</p></li><li><p>HTTP:超文本传输协议，get post</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/12/29/tuan-dui-shen-qing-biao/"/>
      <url>/2020/12/29/tuan-dui-shen-qing-biao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="团队申请表"><a href="#团队申请表" class="headerlink" title="团队申请表"></a>团队申请表</h1><h2 id="项目成员"><a href="#项目成员" class="headerlink" title="项目成员"></a>项目成员</h2><h3 id="贺强"><a href="#贺强" class="headerlink" title="贺强"></a>贺强</h3><blockquote><p>个人简历：</p><p>贺强同学，18级网络工程二班学习委员。在学业上总绩点专业第一；原ACM队队员，曾获得蓝桥杯国家一等奖、CCSP铜奖、2019CCPC秦皇岛站银奖、2020CCPC威海站银奖、2020ICPC上海银奖、2020ICPC济南银奖等十余项竞赛奖励；曾获国家奖学金、甲等奖学金、IE之星等荣誉奖励；与崔菁菁同学一起开发过作业提交系统、仿照Todo-list实现的简易的事件提醒软件，基于静态框架Hexo搭建过个人博客。</p><p>主要技能点：</p><ul><li>较强的算法实现能力</li><li>对于HTML5、PHP、LNMP框架、服务器的使用、基于kotlin、java语言的Andriod开发有一定的实践经历</li></ul></blockquote><h3 id="崔菁菁"><a href="#崔菁菁" class="headerlink" title="崔菁菁"></a>崔菁菁</h3><blockquote><p>个人简历：</p><p>崔菁菁同学，18软件工程二班心理委员。原CSN实验室成员，曾获得丙等奖学金、优秀心理委员等荣誉奖励，曾获得智算之道编程大赛全国复赛三等奖；开发过叮咚备忘录APP、仿照Todo-list实现的简易的事件提醒软件，基于静态框架Hexo搭建过个人博客，能够使用Adobe XD进行Andriod-UI界面设计。</p><p>主要技能点：</p><ul><li>较强的界面设计能力</li><li>熟悉HTML5、JAVA、Mysql等主流开发工具</li></ul></blockquote><h3 id="符浩"><a href="#符浩" class="headerlink" title="符浩"></a>符浩</h3><blockquote><p>个人简历：</p><p>符浩同学，第一届计网院新媒体中心副部长，原ACM队队员，曾获2019年中国大学生程序设计竞赛全国邀请赛铜奖，智算之道全国复赛一等奖;曾获得丙等奖学金优秀团员优秀学生干部等荣誉，完成过前端静态网页的编写，以及与贺强同学组队完成安卓软件的开发,还做过关于关于图的推荐算法研究，自学能力强，且对智能感知有较为浓厚的兴趣。</p><p>主要技能点：</p><ul><li>较强的实践能力</li><li>对于Andriod开发有一定了解</li><li>较强的算法能力</li></ul></blockquote><h2 id="主要项目简概"><a href="#主要项目简概" class="headerlink" title="主要项目简概"></a>主要项目简概</h2><h3 id="网络工程二班作业提交系统"><a href="#网络工程二班作业提交系统" class="headerlink" title="网络工程二班作业提交系统"></a>网络工程二班作业提交系统</h3><ul><li><p>主要功能概括</p><ul><li>普通用户：作业的上传、下载、个人用户的信息修改</li><li>管理员：作业的新建与删除、作业的批量下载、作业的自动重命名、作业提交情况的查询</li></ul></li><li><p>开发工具</p><ul><li>前端：HTML</li><li>后端：PHP+mysql</li><li>网站管理：小皮面板</li></ul></li><li><p>相关功能截图</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229193902331.png" alt="image-20201229193902331" style="zoom: 80%;" />    <img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229193949077.png" alt="image-20201229193949077" style="zoom:80%;" /></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229194025927.png" alt="image-20201229194025927" style="zoom:80%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229194053147.png" alt="image-20201229194053147"></p></li></ul><h3 id="仿照Todo-list实现的简易的事件提醒软件"><a href="#仿照Todo-list实现的简易的事件提醒软件" class="headerlink" title="仿照Todo-list实现的简易的事件提醒软件"></a>仿照Todo-list实现的简易的事件提醒软件</h3><ul><li><p>主要功能概况</p><ul><li>初始UI界面高仿Todo-list</li><li>实现基本的事件添加、删除；事件的周期提醒</li></ul></li><li><p>开发语言</p><ul><li>JAVA</li></ul></li><li><p>相关功能截图</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/Z1%7DQQH_F$R@RD%5DPQTWA7~RQ.jpg" alt="img" style="zoom:40%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229195911085.png" alt="image-20201229195911085" style="zoom: 50%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229195850040.png" alt="image-20201229195850040"></p></li></ul><h3 id="叮咚备忘录"><a href="#叮咚备忘录" class="headerlink" title="叮咚备忘录"></a>叮咚备忘录</h3><ul><li><p>主要功能概况</p><ul><li>用户的登录</li><li>实现了基本的备忘录添加、删除、查询</li></ul></li><li><p>开发语言及工具</p><ul><li>JAVA</li><li>Andriod Studio</li></ul></li><li><p>主要功能截图</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/77006D16961070E047E0E1FCDF180C9C.jpg" alt="img" style="zoom:33%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/459F994084029916021F70C910718BD7.jpg" alt="img" style="zoom:33%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/AE1D022AB19C035DE26D087A74637D37.jpg" alt="img" style="zoom:33%;" /></p></li></ul><p>  <img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/52C04CD647D9DBF6DE7E0B8A62656E6B.jpg" alt="img" style="zoom:33%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229200536962.png" alt="image-20201229200536962" style="zoom:33%;" /></p><h3 id="仿照知乎界面实现的简易软件"><a href="#仿照知乎界面实现的简易软件" class="headerlink" title="仿照知乎界面实现的简易软件"></a>仿照知乎界面实现的简易软件</h3><ul><li><p>主要功能概括</p><ul><li>界面高仿知乎</li><li>实现了简单的登录注册</li><li>实现了基础的数据库交互，登录保持</li><li>实现了基本的消息添加、展示</li></ul></li><li><p>开发语言及工具</p><ul><li>语言：Kotlin</li><li>工具：Android Studio</li></ul></li><li><p>主要功能截图</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229201649860.png" alt="image-20201229201649860" style="zoom:45%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229201719818.png" alt="image-20201229201719818" style="zoom:45%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229201802125.png" alt="image-20201229201802125" style="zoom:45%;" /><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229201913184.png" alt="image-20201229201913184" style="zoom:45%;" /></p></li></ul><h3 id="一些web开发小demo"><a href="#一些web开发小demo" class="headerlink" title="一些web开发小demo"></a>一些web开发小demo</h3><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202423781.png" alt="image-20201229202423781"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202506985.png" alt="image-20201229202506985"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202544392.png" alt="image-20201229202544392"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202956273.png" alt="image-20201229202956273"></p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202647137.png" alt="image-20201229202647137"><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.ink/image-20201229202828273.png" alt="image-20201229202828273"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件工程复习大纲</title>
      <link href="/2020/12/14/xue-ke-fu-xi/ruan-jian-gong-cheng/"/>
      <url>/2020/12/14/xue-ke-fu-xi/ruan-jian-gong-cheng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="软件危机"><a href="#软件危机" class="headerlink" title="软件危机"></a>软件危机</h3><ul><li>软件危机：软件开发周期长、成本高、质量差、维护困难</li><li>原因：除去本身特点和开发者有关</li></ul><h3 id="软件生存期"><a href="#软件生存期" class="headerlink" title="软件生存期"></a>软件生存期</h3><ul><li>定义<ul><li>问题定义</li><li>可行性研究</li><li>需求分析</li></ul></li><li>开发<ul><li>概要设计</li><li>详细设计</li><li>编码</li><li>测试</li></ul></li><li>维护</li></ul><h3 id="软件工程方法学"><a href="#软件工程方法学" class="headerlink" title="软件工程方法学"></a>软件工程方法学</h3><ul><li>三要素：过程、方法、工具</li><li>根基：质量关注点</li><li>分类<ul><li>传统方法学（结构化方法学）<ul><li>顺序：自顶向下</li><li>要么面向数据，要么面向行为，缺乏两者有机结合的机制</li></ul></li><li>面向对象方法学<ul><li>数据和数据操作紧密结合</li></ul></li><li>形式化方法学</li></ul></li></ul><h3 id="软件工程目标"><a href="#软件工程目标" class="headerlink" title="软件工程目标"></a>软件工程目标</h3><ul><li>运用先进的软件开发技术、管理方法来提高软件的质量、生产率，短周期、低成本开发高质量软件产品，实现软件的工业化生产。</li></ul><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><p>ABACB</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="软件生存期模型"><a href="#软件生存期模型" class="headerlink" title="软件生存期模型"></a>软件生存期模型</h3><h3 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h3><ul><li>阶段间具有顺序性、依赖性</li><li>推迟实现的观点<ul><li>尽可能推迟软件的物理实现</li></ul></li><li>质量保证的观点<ul><li>每个阶段完成规定文档、对完成文档需要评审</li></ul></li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208100545018.png" alt="image-20201208100545018"></p><h4 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h4><ul><li>是软件模型的变体</li><li>V模型右侧的步骤向上推进工作，实际上执行了一系列测试</li><li><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208100743869.png" alt="image-20201208100743869"></li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>规范化方法</li><li>严格规定每个阶段需要提交的文档</li><li>产品必须经过验证</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>只适用于项目开始是需求已经确定</li></ul><h3 id="快速原型模型"><a href="#快速原型模型" class="headerlink" title="快速原型模型"></a>快速原型模型</h3><ul><li>快速建立可以运行的程序、通常是完成功能的一个子集</li></ul><h4 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h4><ul><li>原型的用途是获取和验证用户的真正需求、确定之后可以抛弃</li></ul><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul><li>满足用户真正的需求</li><li>因为已经通过原型验证，规格说明文档能够正确描述用户需求</li><li>线性顺序开发</li><li>因为规格说明文档正确地描述了用户需求，因而不会因为规格说明文档错误而进行较大的返工</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li>时间仓促<ul><li>工具、技术不主流</li><li>产品质量低下</li><li>原型影响开发人员创新</li></ul></li></ul><h3 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h3><ul><li><p>别称：渐增模型</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208111922340.png" alt="image-20201208111922340"></p></li></ul><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ul><li>短交付</li><li>逐步增加，用户、生产都时间充裕</li><li>项目失败风险低</li><li>高优先级，高交付</li></ul><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><h4 id="增量组件开发"><a href="#增量组件开发" class="headerlink" title="增量组件开发"></a>增量组件开发</h4><ul><li>每个组件采用瀑布流模型的方式</li><li><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208112247513.png" alt="image-20201208112247513"></li></ul><h3 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h3><ul><li>结合瀑布模型+快速原型模型+前两者忽略的风险分析</li><li>基本思想：使用原型以及其他方法来降低风险</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208112444863.png" alt="image-20201208112444863"></p><ul><li>每个循环表示一个阶段</li></ul><h3 id="喷泉模型"><a href="#喷泉模型" class="headerlink" title="喷泉模型"></a>喷泉模型</h3><ul><li><p>典型面向对象生命周期模型</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208112749207.png" alt="image-20201208112749207"></p></li></ul><h3 id="统一过程"><a href="#统一过程" class="headerlink" title="统一过程"></a>统一过程</h3><ul><li>初始阶段</li><li>细化阶段</li><li>构造阶段</li><li>移交阶段</li><li>九个核心工作流</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208112922126.png" alt="image-20201208112922126"></p><h3 id="基于组件的开发模型"><a href="#基于组件的开发模型" class="headerlink" title="基于组件的开发模型"></a>基于组件的开发模型</h3><h3 id="敏捷过程"><a href="#敏捷过程" class="headerlink" title="敏捷过程"></a>敏捷过程</h3><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208113132744.png" alt="image-20201208113132744"></p><h3 id="题目：DCACD-BCBAB"><a href="#题目：DCACD-BCBAB" class="headerlink" title="题目：DCACD BCBAB"></a>题目：DCACD BCBAB</h3><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="软件需求"><a href="#软件需求" class="headerlink" title="软件需求"></a>软件需求</h3><ul><li>用户角度：系统应该提供的服务</li><li>软件系统角度：系统功能的详细和正式的定义</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>功能性需求：系统提供的服务或者功能</li><li>非功能性需求：对系统提供的服务或者功能的约束</li></ul><h4 id="需求工程"><a href="#需求工程" class="headerlink" title="需求工程"></a>需求工程</h4><h5 id="三个关键"><a href="#三个关键" class="headerlink" title="三个关键"></a>三个关键</h5><ul><li>获取和分析</li><li>规格说明：需求转换为标准格式</li><li>确认</li></ul><h4 id="业务需求"><a href="#业务需求" class="headerlink" title="业务需求"></a>业务需求</h4><h4 id="可行性研究"><a href="#可行性研究" class="headerlink" title="可行性研究"></a>可行性研究</h4><h4 id="四个步骤"><a href="#四个步骤" class="headerlink" title="四个步骤"></a>四个步骤</h4><ul><li>获取需求</li><li>分析需求</li><li>定义需求</li><li>验证需求</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208114535173.png" alt="image-20201208114535173"></p><h3 id="结构化分析方法"><a href="#结构化分析方法" class="headerlink" title="结构化分析方法"></a>结构化分析方法</h3><ul><li>数据字典</li><li>实体关系图</li><li>数据流图</li><li>状态迁移图</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208191045501.png" alt="image-20201208191045501"></p><h4 id="功能建模"><a href="#功能建模" class="headerlink" title="功能建模"></a>功能建模</h4><ul><li>自顶向下</li><li>环境图</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208191443709.png" alt="image-20201208191443709"></p><h4 id="数据建模"><a href="#数据建模" class="headerlink" title="数据建模"></a>数据建模</h4><ul><li><p>ER图</p><ul><li><p>属性（椭圆、圆角）</p></li><li><p>关系（无向边、两端标识关联的数量）</p><p><img src= "/img/loading.gif" data-lazy-src="file:///C:\Users\14816\AppData\Roaming\Tencent\Users\1481632287\QQ\WinTemp\RichOle\FG5{3WFP`9`GTF4K7@`[_FI.png" alt="img"></p></li></ul></li></ul><h4 id="行为建模"><a href="#行为建模" class="headerlink" title="行为建模"></a>行为建模</h4><ul><li>状态连线由带箭头的线构成，称为状态迁移</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208192454175.png" alt="image-20201208192454175"></p><h4 id="数据字典"><a href="#数据字典" class="headerlink" title="数据字典"></a>数据字典</h4><ul><li>以词条方式定义在数据模型、功能模型和行为模型中</li><li>三种分析模型的粘合剂</li></ul><h4 id="加工规格说明"><a href="#加工规格说明" class="headerlink" title="加工规格说明"></a>加工规格说明</h4><ul><li>数据流图的每一个基本加工，必须有一个加工规格说明</li><li>决策表</li></ul><h3 id="系统需求规格说明"><a href="#系统需求规格说明" class="headerlink" title="系统需求规格说明"></a>系统需求规格说明</h3><h4 id="软件需求规格说明（SRS）"><a href="#软件需求规格说明（SRS）" class="headerlink" title="软件需求规格说明（SRS）"></a>软件需求规格说明（SRS）</h4><h4 id="数据需求说明（DRD）"><a href="#数据需求说明（DRD）" class="headerlink" title="数据需求说明（DRD）"></a>数据需求说明（DRD）</h4><h4 id="SRS和DRD的质量要求"><a href="#SRS和DRD的质量要求" class="headerlink" title="SRS和DRD的质量要求"></a>SRS和DRD的质量要求</h4><ul><li><p>完整性</p></li><li><p>可验证性</p></li><li><p>一致性</p></li><li><p>可理解性</p></li><li><p>可修改性</p></li><li><p>可追踪性</p></li></ul><h3 id="需求评审"><a href="#需求评审" class="headerlink" title="需求评审"></a>需求评审</h3><ul><li>实践中不可能用户和系统需求清晰、无歧义、易于理解、完整和一致</li></ul><h4 id="评审项目"><a href="#评审项目" class="headerlink" title="评审项目"></a>评审项目</h4><ul><li>功能、性能、接口、数据、硬件、软件、通信</li><li>正确性、完整性、可行性、一致性、兼容性、安全性、健壮性、可理解性</li></ul><h3 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h3><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><ul><li>顶层数据流图也就是环境图的作用<ul><li>确定系统在环境中的位置</li><li>通过确定系统的输入输出以及与外部实体的关系确定系统的边界</li></ul></li><li>数据流图进行分解需要注意的问题<ul><li>对数据流图分层细化的时候必须保证信息的连续性，也就是说经过一系列分解之后，分解前和分解后的输入、输出数据流必须相同</li><li>注意分层细化的时候对于编号的处理方法</li></ul></li></ul><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="软件设计原则"><a href="#软件设计原则" class="headerlink" title="软件设计原则"></a>软件设计原则</h3><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208201603411.png" alt="image-20201208201603411"></p><h4 id="耦合"><a href="#耦合" class="headerlink" title="耦合"></a>耦合</h4><ul><li><p>模块间紧密程度的度量</p></li><li><p>非直接耦合：两个模块没有直接关系，通过主控制和调用实现</p></li><li><p>数据耦合：一个模块访问另外一个是通过简单的数据参数而不是控制参数、公共数据结构</p></li><li><p>特征耦合：一组模块通过参数表传递记录信息，记录的是某一数据结构的子结构</p></li><li><p>控制耦合：一个模块通过传送开关、标志、名字等控制信息能够明显控制选择控制另一模块的功能</p></li><li><p>公共耦合：一组模块访问同一个公共的数据环境，例如全局数据结构、共享的通信区</p></li><li><p>内容耦合：</p><ul><li>一个模块直接访问另外一个模块的内部数据</li><li>模块不通过正常入口转到另一模块内部</li><li>两个模块有一部分代码重迭</li><li>一个程序由多个入口</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208202207479.png" alt="image-20201208202207479"></p></li></ul><h4 id="内聚"><a href="#内聚" class="headerlink" title="内聚"></a>内聚</h4><ul><li><p>模块内部功能强度的度量</p></li><li><p>模块内聚</p></li><li><p>偶然内聚</p></li><li><p>逻辑内聚</p></li><li><p>时间内聚</p></li><li><p>过程内聚</p></li><li><p>通信内聚</p></li><li><p>顺序内聚</p></li><li><p>功能内聚</p></li></ul><h4 id="模块独立性"><a href="#模块独立性" class="headerlink" title="模块独立性"></a>模块独立性</h4><ul><li>强的应该是高内聚低耦合</li></ul><h3 id="结构化设计"><a href="#结构化设计" class="headerlink" title="结构化设计"></a>结构化设计</h3><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208203941566.png" alt="image-20201208203941566"></p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208204003163.png" alt="image-20201208204003163"></p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201208204030067.png" alt="image-20201208204030067"></p><h3 id="软件设计"><a href="#软件设计" class="headerlink" title="软件设计"></a>软件设计</h3><h4 id="体系结构设计"><a href="#体系结构设计" class="headerlink" title="体系结构设计"></a>体系结构设计</h4><h5 id="基于数据流方法设计过程"><a href="#基于数据流方法设计过程" class="headerlink" title="基于数据流方法设计过程"></a>基于数据流方法设计过程</h5><h4 id="接口设计"><a href="#接口设计" class="headerlink" title="接口设计"></a>接口设计</h4><h4 id="数据设计"><a href="#数据设计" class="headerlink" title="数据设计"></a>数据设计</h4><h4 id="过程设计"><a href="#过程设计" class="headerlink" title="过程设计"></a>过程设计</h4><h3 id="软件设计规格说明"><a href="#软件设计规格说明" class="headerlink" title="软件设计规格说明"></a>软件设计规格说明</h3><h3 id="软件设计评审"><a href="#软件设计评审" class="headerlink" title="软件设计评审"></a>软件设计评审</h3><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="程序设计语言"><a href="#程序设计语言" class="headerlink" title="程序设计语言"></a>程序设计语言</h3><h3 id="程序设计风格"><a href="#程序设计风格" class="headerlink" title="程序设计风格"></a>程序设计风格</h3><h3 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h3><h3 id="程序效率与性能分析"><a href="#程序效率与性能分析" class="headerlink" title="程序效率与性能分析"></a>程序效率与性能分析</h3><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络工程管理复习大纲</title>
      <link href="/2020/12/14/xue-ke-fu-xi/wang-luo-gong-cheng-yu-guan-li-fu-xi/"/>
      <url>/2020/12/14/xue-ke-fu-xi/wang-luo-gong-cheng-yu-guan-li-fu-xi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网络工程与管理复习"><a href="#网络工程与管理复习" class="headerlink" title="网络工程与管理复习"></a>网络工程与管理复习</h1><h2 id="一、评估测试一"><a href="#一、评估测试一" class="headerlink" title="一、评估测试一"></a>一、评估测试一</h2><ol><li>D<ul><li>错误，选A</li><li>PPP使用NCP协议来表示网络层协议</li></ul></li><li>B<ul><li>正确</li><li>ipv6=16*8</li></ul></li><li>C<ul><li>正确</li><li>802.1d和RSTP之间差别在于丢弃角色</li></ul></li><li>C</li><li>D</li><li>B<ul><li>错误，选C</li><li>LCP这种PPP协议提供动态编址、身份验证、多链路功能</li></ul></li><li>B</li><li>B<ul><li>错误，选A</li><li>191为广播地址</li></ul></li><li>B<ul><li>passive禁止接口向外发送更新，但是可以接收</li></ul></li><li>C</li><li>D</li><li>C</li><li>A<ul><li>错误，选B</li><li>查看所有访问控制列表的内容，使用命令show access-lists</li></ul></li><li>D<ul><li>错误，选C</li><li>VLAN在第二层分割广播域</li></ul></li><li>C<ul><li>错误，选A</li><li>使用erase startup-config 删除存储在NVRAM中的配置</li></ul></li><li>C</li><li>A</li><li>D<ul><li>错误，选B</li><li>默认情况下，每隔两秒就从所有活动的网桥端口向外发送BPDU</li></ul></li><li>D</li><li>C<ul><li>真确</li><li>IEEE 802.11bg 使用频段2.4GHZ</li></ul></li><li>D<ul><li>错误，选A</li><li>默认情况下，交换机每个端口都是一个独立的冲突域，当所有端口都属于一个广播域</li></ul></li><li>A<ul><li>错误，选D</li><li>端口地址转化（PAT）允许一对多的网络地址转换</li></ul></li><li>C<ul><li>错误，选C、D</li><li>交换机上配置中继的协议有802.1Q、ISL</li></ul></li><li>D<ul><li>末节网路应配置默认路由</li></ul></li><li>C<ul><li>错误，选B</li><li>集线器重建电子信号，属于物理层</li></ul></li><li>AC</li><li>C<ul><li>选D</li><li>copy flash tftp 备份闪存中的文件到tftp主机</li></ul></li><li>B</li><li>C</li><li>C</li><li>E</li><li>D<ul><li>选C</li><li>show ip interface 指出接口上是否应用入站或者出站访问列表</li></ul></li><li>C</li><li>A<ul><li>PDU封装方法，在传输层（数据段）、网络层（分组）、数据链路层（成帧）、物理层（数字信号）</li></ul></li></ol><h2 id="二、评估测试二"><a href="#二、评估测试二" class="headerlink" title="二、评估测试二"></a>二、评估测试二</h2><h3 id="题目自测："><a href="#题目自测：" class="headerlink" title="题目自测："></a>题目自测：</h3><ul><li>ABBBC AC</li></ul><h2 id="三、评估测试三"><a href="#三、评估测试三" class="headerlink" title="三、评估测试三"></a>三、评估测试三</h2>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 网络工程管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字图像处理复习大纲</title>
      <link href="/2020/12/14/xue-ke-fu-xi/shu-zi-tu-xiang-chu-li-fu-xi-da-gang/"/>
      <url>/2020/12/14/xue-ke-fu-xi/shu-zi-tu-xiang-chu-li-fu-xi-da-gang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数字图像处理复习大纲"><a href="#数字图像处理复习大纲" class="headerlink" title="数字图像处理复习大纲"></a>数字图像处理复习大纲</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="数字图像的概念（理解）"><a href="#数字图像的概念（理解）" class="headerlink" title="数字图像的概念（理解）"></a>数字图像的概念（理解）</h3><ul><li>存储方式：像素为单位，像素值反应亮度</li><li>灰度值：数字化的亮度值</li><li>空间分辨率：图像的宽M高N，M*N</li></ul><h3 id="数字图像的多样性（理解）"><a href="#数字图像的多样性（理解）" class="headerlink" title="数字图像的多样性（理解）"></a>数字图像的多样性（理解）</h3><ul><li><p>电子成像：几乎可以通过任何一种电磁波辐射转换成电子信号形成数字图像</p></li><li><p>成像方式多样性：</p><ul><li>反射成像</li><li>发光成像</li><li>吸收成像</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213205446231.png" alt="image-20201213205446231"></p></li><li><p>尺度多样性：</p><ul><li>日常观察物体或者场景：$1$ ~$10^{3}$</li><li>天文望远镜：$&gt;10^{30}$</li><li>电子显微镜：$&lt;10^{-10}$</li></ul></li><li><p>数据量多样性：</p><ul><li><p>二值图像（黑白图像）</p><ul><li>每个像素仅占用一位，灰度值为0或者1，0为黑色，1为白色</li></ul></li><li><p>灰度图像</p><ul><li>黑白之间有多级灰色深度，常见的每个灰度像素占用一个字节</li></ul></li><li><p>索引图像</p><ul><li>包含颜色查找表，通过查找映射的方法表示彩色图像的颜色</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213210608279.png" alt="image-20201213210608279"></p></li><li><p>真彩色图像</p><ul><li>每一个彩色像素用一个三维向量比表来表示，由R、G、B颜色分量组成</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213210824963.png" alt="image-20201213210824963"></p></li></ul></li></ul><h3 id="数据图像量（理解）"><a href="#数据图像量（理解）" class="headerlink" title="数据图像量（理解）"></a>数据图像量（理解）</h3><h3 id="图像数字化（掌握）"><a href="#图像数字化（掌握）" class="headerlink" title="图像数字化（掌握）"></a>图像数字化（掌握）</h3><ul><li><p>自然场景的空间位置和辐射度都是连续量，将连续（模拟）信号转变为离散（数字）信号的转换过程</p></li><li><p>两个步骤</p><ul><li><p>采样：空间坐标$（x,y）$的离散化</p><ul><li>正方形点阵结构对水平和垂直方向的空间位置进行光栅化</li><li>假设一副图像采取$M*N$个像素点，满足采样定理，重建图像就不会失真</li><li>正六边形采样网格更加符合人眼的视觉特性</li><li>采样决定空间分辨率<ul><li>反应图像数字化的像素密度，以及图像的有效像素</li></ul></li></ul></li><li><p>量化：亮度值$f(x,y)$的离散化</p><ul><li>图像函数值（灰度值）的离散化</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213215200488.png" alt="image-20201213215200488"></p><ul><li>量化决定灰度级分辨率，指可分辨的最小灰阶变化</li></ul></li><li><p>非均匀采样</p><ul><li>在变化大细节多的区域——较精密采样</li><li>平坦变化缓慢区域——较粗稀采样</li></ul></li><li><p>非均匀量化</p><ul><li>在边界附近（灰度剧烈变化区）——量化级别少</li><li>灰度级变化比较平滑的区域——量化级别多，避免或者减少由于量化的太粗糙，在灰度级变化比较平滑的区域出现假轮廓的现象</li></ul></li><li><p>细节相对丰富的图像</p><ul><li>空间分辨率对于图像的影响大，而灰度级分辨率对于图像质量影响小</li></ul></li><li><p>灰度相对平坦的图像</p><ul><li>灰度级分辨率对于图像的质量影响大，而空间分辨率对于图像的质量影响比较小</li></ul></li></ul></li><li><p>数字图像：空间坐标和亮度上都离散化的图像</p></li></ul><h3 id="数字图像常见失真类型（理解）"><a href="#数字图像常见失真类型（理解）" class="headerlink" title="数字图像常见失真类型（理解）"></a>数字图像常见失真类型（理解）</h3><ul><li><p>混叠效应：因为采样间隔过大时，由于采样频率小于奈奎斯特频率，而引发高频成分发生相互重叠，频谱重叠导致失真。</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213223531167.png" alt="image-20201213223531167" style="zoom: 80%;" /><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213223618045.png" alt="image-20201213223618045"></p></li><li><p>模糊效应</p><ul><li><p>长时间曝光的过程中成像设备和成像场景相对运动而造成运动模糊</p></li><li><p>光学镜头散焦、大气湍流、短时间曝光而造成的散焦模糊</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201213223955486.png" alt="image-20201213223955486"></p></li></ul></li><li><p>快效应</p><ul><li>原因：对图像分块处理而引起的块状失真</li><li>在图像压缩编码中，分块离散余弦变换编码和分块运动补偿是造成块效应的两个主要原因</li></ul></li><li><p>噪声</p><ul><li>感光器件接受光信号并输出过程中产的异常像素</li></ul></li></ul><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><ul><li>若样本量化级别为Q级，Q如何取值？<ul><li>Q总是取2的整数次幂</li><li>灰度级位数越大，量化误差越小</li></ul></li><li>一副好的数字图像，需要多少采样分辨率和灰度级<ul><li>随着采样分辨率和灰度级的提高，主观的质量也会提高</li><li>有着大量细节的图像，质量对于灰度级的需求相应降低</li></ul></li></ul><h2 id="第二章——数字图像处理基础"><a href="#第二章——数字图像处理基础" class="headerlink" title="第二章——数字图像处理基础"></a>第二章——数字图像处理基础</h2><h3 id="数字图像处理的关键阶段（了解）"><a href="#数字图像处理的关键阶段（了解）" class="headerlink" title="数字图像处理的关键阶段（了解）"></a>数字图像处理的关键阶段（了解）</h3><ul><li>图像获取、图像增强、图像恢复、形态学处理、图像分割、表示与描述、目标识别、图像压缩、彩色图像处理</li><li>图像增强<ul><li>锐化、去噪、对比度增强</li></ul></li></ul><h3 id="像素的空间位置（理解）"><a href="#像素的空间位置（理解）" class="headerlink" title="像素的空间位置（理解）"></a>像素的空间位置（理解）</h3><ul><li>4邻域、8邻域、对角邻域</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214100317733.png" alt="image-20201214100317733"><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214100337527.png" alt="image-20201214100337527"><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214100327184.png" alt="image-20201214100327184"></p><ul><li><p>邻接性：像素p、q邻接的两个必要条件</p><ul><li>两个像素位置是否在某种情况下相邻</li><li>两个像素的值是否满足某种相似性</li></ul><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214100744235.png" alt="image-20201214100744235"><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214100755514.png" alt="image-20201214100755514"></p></li><li><p>连通性</p><ul><li>根据邻接性定义不同、可以定义不同的连通性</li><li>4邻接定义的通路为4联通</li><li>8邻接定义的通路为8联通</li></ul></li><li><p>区域与边界</p><ul><li><p>内点：如果像素p的某一个邻域包含在S中</p></li><li><p>开集：S中的像素都是内点</p></li><li><p>区域：联通的开集称为开区域，简称为区域</p></li><li><p>边界像素：如果p的任意邻域内有属于S的也有不属于S的</p></li><li><p>边界：边界像素的全体</p></li><li><p>图像中每一个联通集合被称之为一个区域、区域的边界也称为区域的轮廓</p></li><li><p>区域的内部和边界必须采用不同的连通性来定义，否则会有歧义性</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214101711963.png" alt="image-20201214101711963"></p></li></ul></li><li><p>距离度量</p><ul><li><p>定义：像素在空间的临近程度可以由像素之间的距离来度量</p></li><li><p>度量函数，满足以下三个条件</p><ul><li>正定性（两点距离大于0）</li><li>对称性（距离与方向无关）</li><li>三角不等式（两点之间直线最短）</li></ul></li><li><p>向量范数</p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214102225499.png" alt="image-20201214102225499"></p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214102357257.png" alt="image-20201214102357257"></p><p><img src= "/img/loading.gif" data-lazy-src="C:%5CUsers%5C14816%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214102407220.png" alt="image-20201214102407220"></p></li></ul></li></ul><h3 id="思考题-1"><a href="#思考题-1" class="headerlink" title="思考题"></a>思考题</h3><ul><li>请用图说明，一个四联通区域的边界是八联通的，而一个八联通的区域的边界是四联通的。</li><li></li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大三 </tag>
            
            <tag> 数字图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络复习大纲</title>
      <link href="/2020/09/19/xue-ke-fu-xi/ji-suan-ji-wang-luo/"/>
      <url>/2020/09/19/xue-ke-fu-xi/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机网络复习纲要"><a href="#计算机网络复习纲要" class="headerlink" title="计算机网络复习纲要"></a>计算机网络复习纲要</h1><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><ul><li>国际标准化组织ISO制定的开放系统互连基本参考模型共有 （<strong>7层</strong>）</li><li>计算机网络中广泛使用的交换技术是 （<strong>分组交换</strong>）</li><li>下列交换方式中实时性最好的是（<strong>C</strong>）<ul><li>数据报</li><li>虚电路</li><li><strong>电路交换</strong></li></ul></li><li>所谓“三网合一”中的“三网”是指（<strong>电信网、广播电视网、计算机网</strong>）</li><li>通信子网不包括（<strong>传输层</strong>）</li><li>网络协议的三要素是（<strong>语法、语义、同步</strong>）</li><li>拓扑设计是建设计算机网络的第一步,它对网络的影响主要表现在（<strong>系统可靠性</strong>）</li><li>在OSI参考模型中,以下说法正确的是（<strong>对等层之间的通信通过协议进行</strong>）</li><li>计算机网络中为进行数据交换而建立的规则、标准或约定的集合称为（<strong>网络协议</strong>）</li><li>为什么网络协议族是分层的？<ul><li>各层之间是独立的</li><li>灵活性好</li><li>结构上可以分割开</li><li>易于实现和维护</li><li>能促进标准化工作</li></ul></li><li>为什么TCP/IP能成为事实上的国际标准?<ul><li>因为TCP/IP比OSI实现起来更容易</li></ul></li><li>习题<ul><li>10、11、15、16、17、18、19</li></ul></li></ul><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><ul><li>码元究竟是（<strong>数字信号的波形</strong>）</li><li>对于香农公式错误的是（<strong>实际上信道能够达到的信息传输速率要比香农的极限传输速率差不多</strong>）</li><li>通过改变载波信号的振幅来表示数字0、1的模拟数据编码方法,称作( <strong>ASK</strong>)</li><li>采用T来表示（<strong>1024G</strong>）</li><li>关于光纤的叙述不正确的是（<strong>容易维护和维修</strong>）</li><li>在数据通信系统中，所谓透明性是指（<strong>用户不必了解系统工作的细节</strong>）</li><li>OSI模型的物理层负责下列哪一种功能（<strong>定义连接到介质的特征</strong>）</li><li>双绞线由两条相互绝缘的导线绞合而成，下列关于双绞线的叙述，不正确的是（<strong>不易受外部干扰、误码率低</strong>）</li><li></li><li>习题<ul><li>7、8、9、11、12、16</li></ul></li></ul><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><ul><li>数据链路层进行的流量控制是指（<strong>相邻节点之间</strong>）</li><li>透明传输是数据链路层的基本功能，所谓透明性是指（<strong>传输的数据内容、格式及编码无限</strong>）</li><li>使用字符填充的首位定界符法，为了达到数据的透明性，采用（<strong>转义字符填充法 </strong>）</li><li>局域网数据链路层分为（<strong>MAC子层和LLC子层</strong>）</li><li>逻辑链路控制子层提供了（<strong>无连LLC、面向连接LLC</strong>）</li><li>网络体系结构中数据链路层的数据处理单元是（<strong>帧</strong>）</li><li>数据帧的基本格式是（<strong>首部+数据+尾部</strong>）</li><li>不再支持半双工数据传输，所有传输都以全双工进行的以太网技术是（<strong>万兆以太网</strong>）</li><li>若HDLC帧的数据段中出现比特串“010111110101”，为解决透明传输，则比特填充后的输出为（01011111<strong>0</strong>0101）</li><li>CSMA/CD 以太网中，发生冲突后，重发前的退避时间最大是（<strong>1023个时间片</strong>）</li><li>不属于光纤用户网的特点是（<strong>抗干扰能力差</strong>）</li><li>习题<ul><li>06、33</li></ul></li></ul><h3 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h3><ul><li>不属于IP层实现的功能（<strong>D</strong>）<ul><li>尽力而为的不可靠传输服务</li><li>数据报的路由选择和转发</li><li>数据报的分段与重组</li><li><strong>确定主机进程间的接口</strong></li></ul></li><li>下列说法错误的是（<strong>D</strong>）<ul><li>利用多个以太网交换机组成的局域网不能出现环</li><li>以太网交换机中端口的速率可能不同</li><li>在交换式以太网中可以划分VLAN</li><li>以太网交换机可以对通过的信息负载进行过滤</li></ul></li><li>二层交换机中的端口/MAC地址映射表是（<strong>交换机在数据转发过程中通过学习动态建立的</strong>）</li><li>路由器中的路由表包含（<strong>目的网络的下一跳路由信息</strong>）</li><li>IPV6的编址长度是（<strong>16字节</strong>）</li><li>IP地址的合法性</li><li>标准分类IP地址202.140.36.88的主机号（<strong>88</strong>）</li><li>以太网数据帧的最小载荷是（<strong>46字节</strong>）</li><li>对地址转换协议（ARP）描述正确的是（<strong>B</strong>）<ul><li>能隔离冲突域</li><li>只工作在数据链路层</li><li>通过VLAN设置能隔离广播域</li><li>VLAN之间通信需要经过三层路由</li></ul></li><li>若某主机的IP地址及网络前缀为192.168.5.121/29，则该主机所在子网的子网地址为（ <strong>192.168.5.120</strong>）</li><li>下面IP地址中不合法的是 （ <strong>172.21.10.256</strong>）</li><li>下列IP地址中，属于C类的是(<strong>202.113.16.8</strong>)</li><li>标准分类IP地址205.140.36.88的主机号是（<strong>88</strong> ）</li><li>访问因特网的每台主机都需要分配IP地址（假定采用缺省子网掩码），把下列哪个IP地址分配给主机是正确的(<em>**</em>)</li><li>下列对于IP分组的分片和重组的描述正确的是（<strong>IP分组可以被路径中的路由器分片，并在目的主机进行重组</strong>）</li><li>C类地址的最高三个比特位，依次是（<strong>110</strong>）</li><li>下列属于B类IP地址（<strong>128.2.2.10</strong>）</li><li>现在要构建一个可连接14个主机的网络，如果采用划分子网的方法，则子网掩码为（<strong>255.255.255.240</strong>）</li><li>以下那组网络地址和子网掩码正确标识了172.16.128.0—-172.16.159.255地址块（<strong>172.16.128.0 255.255.224.0</strong>）</li><li>IP地址为192.168.200.2，子网掩码为255.255.255.192，则网络标识为（<strong>191.168.200.0</strong>）</li><li>一个B类网络172.16.0.0，使用子网掩码255.255.255.192来划分子网，则理论上可以利用的网络和每个网络中的主机数分别为（<strong>1024,62</strong>）</li><li>工作在网络层的互连设备是（<strong>路由器</strong>）</li></ul><h3 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h3><ul><li>传输层中的传输实体存在的软硬件环境不包括（<strong>网络数据库</strong>）</li><li>在多个数据字符组成的数据块之前以一个或多个同步字符SYN作为开始，帧尾用ETX作为结束，这种传输方案称为(<strong>面向字符的同步传输</strong> )</li><li>关于 TCP 和UDP 端口,下列说法正确的是( <strong>TCP和UDP分别拥有自己的端口号，他们互不干扰，可以存在与一台主机</strong>)</li><li>为了保证连接的可靠建立，TCP通常采用（<strong>三次握手</strong>）</li><li>数据链路层差错控制机制采用采用拉回方式，发送方已经发送了编号为0-7的帧，当计时器超时，若发送方只收到0、2、3号帧的确认，则发送方需要重传的帧数是（ <strong>4</strong>）</li><li>主机甲和主机乙之间建立了TCP 连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300 字节和500 字节的有效载荷，第一个段的序列号为200，主机乙正确收到两个段后，发送给主机甲的确认序列号是（<strong>1000</strong> ）</li><li>在TCP协议中，发送方的窗口大小是由哪些因素决定的？ ( <strong>接收方允许的窗口和拥塞窗口</strong>)</li></ul><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><ul><li>标准的URL由（<strong>协议类型、主机名、路径、文件名构成</strong>）</li><li>下列属于顶级域名（<strong>net</strong>）</li><li>下列关于域名的叙述中错误的是(  <strong>同一子域的主机拥有不同的网络域名</strong> )</li><li>以下内容中，符合TCP/IP域名系统格式要求的是（ <strong>www.zqu.edu.cn</strong>）</li><li>下列用于接收电子邮件的网络协议是( <strong>IMAP</strong>)</li><li>为了使WAP能访问因特网，其采用的传输层协议是(   <strong>WDP</strong>)</li><li>WWW服务中的Web页面应符合（<strong>HTML</strong> ）规范</li><li>HTTP协议的服务端进程的TCP端口号为（ <strong>80</strong>）</li><li>点击浏览器上的网页地址，从Web服务器下传的是( <strong>HTML文本文件</strong>)</li><li>FTP文件传输协议对应于OSI的(   <strong>第四层</strong>)</li><li>WWW上的每一个网页包括主页都有一个独立的地址，这些地址由32位二进制表示则称为(   <strong>IP地址</strong>)</li><li>FTP 服务方的TCP 协议固定端口号为( <strong>21</strong>)</li><li>不使用面向连接传输服务的应用层协议是( <strong>SMTP</strong>)</li><li>对各种实终端的功能进行一般化、标准化，将实终端的特性变换成标准化通用终端的特性，与此相对应的OSI应用层协议称为( <strong>FTP</strong>)</li><li>简单邮件传送协议SMTP使用的端口号为(  <strong>25</strong> )</li><li>Internet中，将域名转换成IP地址的协议称为（<strong>DNS</strong> ）协议</li></ul><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="第一章-1"><a href="#第一章-1" class="headerlink" title="第一章"></a>第一章</h3><ul><li><p>互联网的两个基本特点（<strong>连通性和共享</strong>）</p></li><li><p>三网融合（<strong>电信网络、有线电视网、计算机网络</strong>）</p></li><li><p>互联网、互连网的区别</p><ul><li>互连网就是指多个网络连接在一起</li><li>互联网是指当前世界上最大、开放的、由众多网络连接而成的特定互联网</li></ul></li><li><p>ISP（<strong>互联网服务提供者</strong>）、IXP（<strong>互联网交换点</strong>）</p><ul><li>IXP作用就是允许两个网络直接相连交换分组，不需要通过第三个网络来转发分组</li></ul></li><li><p>互联网发展三个阶段</p><ul><li>单个网络APANET向互联网发展的过程</li><li>建成了三级结构的互联网</li><li>逐渐形成了多层次ISP结构的互联网</li></ul></li><li><p>互联网</p><ul><li>边缘部分<ul><li>连在互联网上的所有主机，也是端系统</li><li>两种通信方式<ul><li>客户-服务器方式（C/S）</li><li>对等方式(P2P)</li></ul></li></ul></li><li>核心部分<ul><li>在网络核心部分起特殊作用的是<strong>路由器</strong>，是实现<strong>分组交换</strong>的关键部件，任务是<strong>转发收到的分组</strong></li><li>电路交换<ul><li>从通信的角度，交换就是按照某种方式动态地分配传输线路的资源</li><li>步骤<ul><li>建立连接</li><li>通话</li><li>释放连接</li></ul></li><li>重要特点：在全部的通话时间内，两个用户始终占用端到端的通信资源</li><li><strong>传输效率往往很低</strong>，因为数据是突发式传输，大部分时间线路是空闲的</li></ul></li><li>报文交换<ul><li>是整段传输</li></ul></li><li>分组交换<ul><li>分组交换从用<strong>存储转发</strong>的技术</li><li>路由器通过运行的<strong>路由选择协议</strong>能自动的找到转发分组最合适的路径</li><li>新的问题 <ul><li>路由转发排队带来新的时延</li></ul></li></ul></li><li>比较<ul><li>如果要传输大量的数据，传输时间远大于建立连接的时间，那么电路交换的传输效率较快</li><li>报文交换和分组交换不需要预先分配传输带宽，在传送突发数据时可以提高整个网络的信道利用率</li><li>因为一个分组的长度往往远小于整个报文的长度，因此分组交换比报文交换时延小</li></ul></li></ul></li></ul></li><li><p>网络分类</p><ul><li>作用范围<ul><li>广域网WAN（<strong>几十–几千公里</strong>）</li><li>城域网MAN（<strong>5–50km</strong>）</li><li>局域网LAN（<strong>1km</strong>）</li><li>个人区域网PAN（<strong>10m</strong>）</li></ul></li><li>使用者<ul><li>公用网</li><li>专用网</li></ul></li><li>接入网不属于互联网核心部分也不属于边缘部分</li></ul></li><li><p>计算机性能指标</p><ul><li>速率</li><li>带宽<ul><li>单位时间内某信道所能通过的（<strong>最高数据率</strong>），单位（<strong>bit/s</strong>）</li></ul></li><li>吞吐量</li><li>时延</li><li>时延带宽积</li><li>往返时间RTT</li><li>利用率<ul><li>利用率不是越大越好，利用率越大，产生的时延也迅速增加</li></ul></li><li></li></ul></li><li><p>计算机非性能指标</p><ul><li>费用</li><li>质量</li><li>标准化</li><li>可靠性</li><li>可扩展性和可升级性</li><li>易于管理和维护</li></ul></li><li><p>网络协议三要素</p><ul><li>语法</li><li>语义</li><li>同步</li></ul></li></ul><h3 id="第二章-1"><a href="#第二章-1" class="headerlink" title="第二章"></a>第二章</h3><ul><li><p>数据在通信线路上一般还是采取串行传输</p></li><li><p>一个数据通信系统可以化为三部分（<strong>源系统、传输系统、目标系统</strong>）</p></li><li><p>信号</p><ul><li>模拟信号（<strong>连续信号</strong>）</li><li>数字信号（<strong>离散信号</strong>）</li></ul></li><li><p>通信方式</p><ul><li>单向通信</li><li>半双工通信</li><li>全双工通信</li></ul></li><li><p>基带信号的<strong>调制</strong></p><ul><li><p>基带调制</p><ul><li><p>编码</p></li><li><p>仅仅对基带进行波形的转换</p></li><li><p>方式</p><ul><li><p>不归零</p></li><li><p>归零</p></li><li><p>曼彻斯特</p></li><li><p>差分曼彻斯特</p></li></ul></li></ul></li></ul></li></ul><ul><li><p>带通调制</p><ul><li>使用载波进行调制</li><li>将基带信号的频率范围搬移到较高的频段</li><li>方式<ul><li>调幅（<strong>AM</strong>）</li><li>调频（<strong>FM</strong>）</li><li>调相（<strong>PM</strong>）6</li></ul></li></ul></li></ul><ul><li><p>奈式准则</p><ul><li>在任何信道中，码元传输的速率是有上限的，传输速率超过此上限，就会出现严重的<strong>码间串扰</strong>的问题，使接收端对于码元的判决成为不可能</li></ul></li><li>信噪比=10log10（S/N）(dB)</li><li>香农公式<ul><li>C=Wlog2(1+S/N)(bit/s)</li><li>C是信道的极限传输速率</li><li>当频带宽度确定、信噪比确定的线路，提高信息的传输速率，可以让每一个码元携带更多比特的信息</li></ul></li><li>信道复用<ul><li>时分复用</li><li>波分复用</li><li>频分复用</li></ul></li></ul><h3 id="第三章-1"><a href="#第三章-1" class="headerlink" title="第三章"></a>第三章</h3><ul><li>数据链路层的三个基本问题<ul><li>封装成帧<ul><li>首部和尾部的重要作用就是帧定界</li><li>规定了数据部分长度上限（最大传输单元MTU）</li></ul></li><li>透明传输<ul><li>实际存在的事物看起来却好像不存在一样</li><li>字节填充或者字符填充</li></ul></li><li>差错检测<ul><li>比特差错：比特在传输过程中可能由0变成1，也有可能从1变成0<ul><li>帧丢失</li><li>帧重复</li><li>帧失序</li></ul></li><li>误码率：传送出错比特总数/比特总数<ul><li>信噪比增大，误码率下降</li></ul></li><li>循环冗余检验CRC<ul><li>帧检验序列FCS</li></ul></li><li>无差错接受<ul><li>凡事接收端数据链路层接受的数据，我们都能以非常接近1的概率认为这些帧在传输过程中没有产生差错</li><li>但这个并不是可靠传输</li><li>当通信质量差的时候，数据链路层使用可靠协议是一种好办法</li></ul></li></ul></li></ul></li><li>PPP<ul><li><strong>协议特点</strong><ul><li>简单</li><li>只检测差错，不纠正差错</li><li>不使用序号</li><li>不进行流量控制</li><li>同时支持多种网络层协议</li></ul></li><li>字节填充</li><li>零比特填充<ul><li>每5个1，插进去一个0</li></ul></li></ul></li><li>使用广播信道的数据链路层<ul><li>局域网按照拓扑分类<ul><li>星形网</li><li>环形网</li><li>总线网</li></ul></li></ul></li><li>共享信道<ul><li>静态划分信道</li><li>动态媒体接入控制<ul><li>随机接入</li><li>受控接入</li></ul></li></ul></li><li>数据链路层拆分<ul><li>逻辑链路控制LLC</li><li>媒体接入控制MAC</li></ul></li><li>适配器<ul><li></li></ul></li></ul><h3 id="第四章-1"><a href="#第四章-1" class="headerlink" title="第四章"></a>第四章</h3><ul><li><p><strong>网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务</strong></p></li><li><p>互连网可以通过多种异构网络互连组成</p><ul><li>物理层：转发器</li><li>数据链路层：网桥或者桥接器</li><li>网络层：路由器</li><li>网桥和路由器混合：桥路器</li><li>网络层以上：网关</li><li><strong>网络互连都是指用路由器进行网络互连和路由选择</strong></li></ul></li><li><p>IP地址分类</p></li><li><p>网络号+主机号</p></li><li><p>什么是网络？</p></li><li><p>路由选择协议</p><ul><li><p>理想的路由选择算法</p><ul><li>算法正确和完整</li><li>算法计算简单</li><li>算法能适应通信量和网络拓扑变化</li><li>算法稳定</li><li>算法公平</li><li>算法是最佳的</li></ul></li><li><p>静态路由选择策略（<strong>非自适应</strong>）</p></li><li><p>动态路由选择策略（<strong>自适应</strong>）</p></li><li><p>互连网采用（<strong>分层次、自适应的路由选择协议</strong>）</p></li><li><p><strong>尽管一个</strong> <strong>AS</strong> <strong>使用了多种内部路由选择协议和度量，但</strong>重要的是一个 <strong>AS</strong> <strong>对其他</strong> <strong>AS</strong> <strong>表现出的是一个单一的和一致的路由选择策略。</strong></p></li><li><p>内部网关协议IGP</p><ul><li><p>RIP、OSPF</p></li><li><p>OSPF</p><ul><li>三个特点<ul><li>和本自治系统所有路由器发送信息，这里使用的是洪泛法</li><li>发送的新信息就是本路由器和相邻所有路由器的状态</li><li>只有链路状态发生变化，路由器才使用洪泛法向所有路由器发送消息</li></ul></li><li><strong>OSPF</strong> <strong>不用</strong> <strong>UDP</strong> <strong>而是直接用</strong> <strong>IP</strong> <strong>数据报传送。</strong></li><li><strong>OSPF</strong> <strong>使用</strong>层次结构的区域划分。<strong>在上层的区域叫做主干区域</strong> <strong>(</strong>backbone area)。</li><li>优点<ul><li><strong>OSPF的更新过程收敛得快</strong></li></ul></li></ul></li><li><p>RIP</p><ul><li><p>RIP是一种分布式的基于距离向量的路由选择协议</p></li><li><p>距离也称跳数，RIP只允许一条路径最多15个路由器，因此只适用于小型互联网</p></li><li><p><strong>RIP</strong> <strong>不能在两个网络之间同时使用多条路由。</strong>RIP选择一个具有最少路由器的路由（即最短路由），哪怕还存在另一条高速( <strong>低时延</strong> )但路由器较多的路由。</p></li><li><p>三个特点</p><ul><li>只和相邻的路由器交换信息</li><li>交换的信息是当前路由器所知道的全部信息，即路由表</li><li>按照固定的时间间隔交换路由信息</li></ul></li><li><p><strong>好消息传播的快，坏消息传播的慢</strong></p><ul><li>当网络出现故障的时候，需要经过较长的时间才能，将此信息传送到所有的路由器</li></ul></li><li><p>优点</p><ul><li>实现简单，开销小</li></ul></li><li><p>缺点</p><ul><li><p>RIP限制网络规模</p></li><li><p>路由器交换的路由信息是路由器中的完整路由表，因而随着网络的扩大，开销也扩大</p></li><li><p>坏消息传播的慢，使更新过程的收敛时间过长</p></li></ul></li></ul></li></ul></li></ul></li></ul><ul><li><p>外部网关协议EGP</p><ul><li>BGP</li></ul></li><li><p><strong>自治系统之间的路由选择也叫做域间路由选择</strong> <strong>(interdomain</strong> <strong>routing)</strong>，在自治系统内部的路由选择叫做域内路由选择(intradomainrouting) <strong>。</strong></p></li><li><p>路由器</p><ul><li>路由选择部分</li><li>分组转发部分</li></ul></li><li><p>IPV4和IPV6</p><ul><li>IPV4<ul><li>采用点分十进制记法</li></ul></li><li>IPV6<ul><li>有40字节的固定首部</li><li>采用冒号十六进制记法</li><li>IPV6把IPV4首部中选项的功能都放在拓展首部，数据报中途经过这些路由器<strong>都不处理这些扩展首部</strong>，<strong>这样就大大提高了路由器的处理效率</strong></li><li>目的地址<ul><li>单播</li><li>多播</li><li>任播<ul><li><strong>这</strong>是 <strong>IPv6</strong> <strong>增加的一种类型</strong></li></ul></li></ul></li><li></li></ul></li><li></li></ul></li></ul><h3 id="第五章-1"><a href="#第五章-1" class="headerlink" title="第五章"></a>第五章</h3><ul><li>运输层提供应用进程间的逻辑通信<ul><li>网络层提供主机之间的逻辑通信</li></ul></li><li>运输层要对收到的报文进行差错检测</li><li>运输层向高层屏蔽了下面网络的核心，它使应用进程看见的就好像在两个运输层实体之间有一条端到端的逻辑通讯电路</li><li>面向连接的TCP（<strong>传输控制协议</strong>）<ul><li>尽管下面的网络是不可靠的，这种逻辑信道就相当于一条全双工的可靠信道</li><li>特点<ul><li>面向连接</li><li>每一条TCP连接只有两个端点（<strong>点对点</strong>）</li><li>TCP提供可靠交付</li><li>提供全双工</li><li>面向字节流</li></ul></li><li>TCP连接<ul><li>套接字（IP：端口）</li></ul></li><li>可靠传输的工作原理<ul><li>停止等待协议（<strong>自动重传请求ARQ</strong>）<ul><li>无差错<ul><li>A发送后等待B的确认，收到B的确认才进行下一步</li></ul></li><li>出现差错<ul><li>如果在一段时间内没有收到B的确认就会<strong>超时重传</strong></li><li>注意<ul><li>保留已发送分组副本</li><li>分组和确认分组都要编号，才能一一对应起来</li><li>超时重传时间要比数据的分组往返时间要长一些</li></ul></li></ul></li><li>确认丢失和确认迟到<ul><li>A如果收到重复确认直接丢弃</li><li>B如果收到重复信息，则丢弃信息，重新传送确认分组</li></ul></li></ul></li><li>信道利用率等于TD/(TD+RTT+TA),TD是发送分组时间，TA是发送确认分组时间，RTT是往返时间</li></ul></li></ul></li><li>无连接的UDP（<strong>用户数据报协议</strong>）<ul><li>这种逻辑信道任然是一条不可靠信道</li><li>特点<ul><li>无连接</li><li>尽最大努力交付</li><li>面向报文</li><li>没有拥塞控制</li><li>支持一对一、一对多、多对一、多对多的交互通信</li><li>UDP首部开销小</li></ul></li></ul></li><li>复用<ul><li>应用层的所有应用都可以通过运输层传送到IP层</li></ul></li><li>分用<ul><li>运输层从IP层收到发送给各应用进程的数据后，分别交付指明的各应用进程</li></ul></li><li><p>端口</p><ul><li>硬件端口<ul><li>不同硬件设备进行交互的接口</li></ul></li><li>软件端口<ul><li>是应用层的各种协议进程与运输实体进行层间交互的一种地址</li><li>16位端口号来标记一个端口，端口只具有本地意义，在互联网不同的计算机中，相同</li></ul></li></ul></li><li><p>TCP拥塞控制</p><ul><li>慢开始、拥塞避免、快重传、快恢复</li></ul></li></ul><h3 id="第六章-1"><a href="#第六章-1" class="headerlink" title="第六章"></a>第六章</h3>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大二下册 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式复习大纲</title>
      <link href="/2020/09/15/xue-ke-fu-xi/qian-ru-shi-fu-xi/"/>
      <url>/2020/09/15/xue-ke-fu-xi/qian-ru-shi-fu-xi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="嵌入式系统概述"><a href="#嵌入式系统概述" class="headerlink" title="嵌入式系统概述"></a>嵌入式系统概述</h3><ul><li>嵌入式系统的定义：嵌入到对象体系中的专用计算机应用系统</li><li>嵌入式系统的特点：<ul><li>嵌入性</li><li>内含计算机</li><li>专用性</li></ul></li><li>嵌入式系统的相关产品</li></ul><h3 id="嵌入式操作系统相关概念"><a href="#嵌入式操作系统相关概念" class="headerlink" title="嵌入式操作系统相关概念"></a>嵌入式操作系统相关概念</h3><ul><li>RTOS：实时操作系统（RTSO）是一段在嵌入式系统启动后首先执行的背景程序，用户的应用程序是运行在RTOS之上的各个任务，RTOS根据各个任务的要求，进行资源管理、消息管理、任务调度以及任务处理等工作</li><li>调度：调度是内核的主要职责之一，调度是用来决定轮到那个任务运行的</li><li>非占先式内核和占先式内核<ul><li>非占先式内核要求每个任务自我放弃CPU的所有权</li><li>占先式内核是最高级任务一旦就绪，总能获得CPU的所有权</li></ul></li><li>常见的嵌入式实时操作系统<ul><li>μClinux<ul><li>开源、实时</li></ul></li><li>Windows CE<ul><li>开源、实时</li></ul></li><li>VxWorks<ul><li>不开源、实时</li></ul></li><li>μC/Os-Ⅱ<ul><li>开源、实时</li></ul></li></ul></li></ul><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="ARM简介"><a href="#ARM简介" class="headerlink" title="ARM简介"></a>ARM简介</h3><ul><li>ARM公司是一家知识产权供应商，不制造芯片且不向终端用户出售芯片</li><li>精简指令集RISC和复杂指令集CISC<ul><li>ARM内核采用精简指令集RISC</li><li>RISC的指令集和相关译码机制比CISC要简单的多</li><li>其目标就是设计一套能在高时钟频率下单周期执行，简单而有效的指令集</li><li>RISC的设计重点在于降低处理器中指令执行部件的硬件复杂度</li></ul></li></ul><h3 id="ARM7TDMI"><a href="#ARM7TDMI" class="headerlink" title="ARM7TDMI"></a>ARM7TDMI</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>M：64位乘法指令</p><p>D：支持片上调试</p><p>T：高密度16位Thumb指令集拓展</p><p>I：Embedded ICE 硬件仿真功能模块</p><p>ARM使用冯.诺依曼结构，指令和数据公用一条32位总线，因此只有装载和存储和交换指令可以对存储器中的数据进行访问</p><ul><li>冯.诺依曼结构<ul><li>把代码作为一种特殊的数据来操作，指令总线和数据总线及其存储区域是统一的</li></ul></li><li>哈佛结构<ul><li>指令总线和数据总线及其存储区是分开、独立的</li></ul></li></ul><h4 id="ARM处理器支持"><a href="#ARM处理器支持" class="headerlink" title="ARM处理器支持"></a>ARM处理器支持</h4><ul><li>8位字节</li><li>16位半字</li><li>32位字</li><li>一个字等于四个字节，一个半字等于两个字节</li><li>ARM指令长度是一个字，Thumb指令是一个半字</li><li>字存储–字对齐；半字存储–半字对齐</li></ul><h4 id="三级流水线"><a href="#三级流水线" class="headerlink" title="三级流水线"></a>三级流水线</h4><ul><li>三个阶段<ul><li>取指</li><li>译码</li><li>执行</li></ul></li><li>单片机上，PC总是指向正在执行的指令</li><li>ARM处理器，PC总是指向正在取指的位置也就是第三条指令，或者说当前执行的指令地址再加两条指令的地址<ul><li>ARM状态<ul><li>PC=当前指令执行位置+8字节</li></ul></li><li>Thumb状态<ul><li>PC=当前指令执行位置+4字节</li></ul></li></ul></li><li>尽量少的使用跳转指令可以提高程序的执行效率</li></ul><h4 id="ARM处理器的状态"><a href="#ARM处理器的状态" class="headerlink" title="ARM处理器的状态"></a>ARM处理器的状态</h4><ul><li>ARM指令集<ul><li>32位字长，拥有最完整的功能</li></ul></li><li>Thumb指令集<ul><li>16位半字，能实现ARM指令集的大部分功能</li></ul></li><li>ARM状态采用ARM指令集，Thumb状态采用Thumb指令集<ul><li>系统通电默认ARM状态</li><li>无论处理器处于任何一种状态，都不能混用两种指令集</li><li>BX指令是在程序跳转的时候同时进行状态切换</li></ul></li></ul><h4 id="ARM处理器的模式"><a href="#ARM处理器的模式" class="headerlink" title="ARM处理器的模式"></a>ARM处理器的模式</h4><ul><li><p>七种处理模式</p></li><li><p>| 处理器模式    | 说明                            | 备注                                               |<br>| ——————- | ———————————————- | ————————————————————————— |<br>| 用户    (usr) | 正常程序工作模式                | 不能直接切换到其它模式                             |<br>| 系统    (sys) | 用于支持操作系统的特权任务等    | 与用户模式类似，但具有可以直接切换到其它模式等特权 |<br>| 快中断  (fiq) | 支持高速数据传输及通道处理      | FIQ异常响应时进入此模式                            |<br>| 中断    (irq) | 用于通用中断处理                | IRQ异常响应时进入此模式                            |<br>| 管理    (svc) | 操作系统保护代码                | 系统复位和软件中断响应时进入此模式                 |<br>| 中止    (abt) | 用于支持虚拟内存和/或存储器保护 | 在ARM7TDMI没有大用处                               |<br>| 未定义  (und) | 支持硬件协处理器的软件仿真      | 未定义指令异常响应时进入此模式                     |</p></li><li><p>特权模式</p><ul><li>系统模式</li><li>异常模式<ul><li>中断</li><li>快中断</li><li>管理<ul><li>处理器复位、软件中断响应后进入，操作系统通常处于管理模式</li></ul></li><li>中止</li><li>未定义</li></ul></li></ul></li><li><p>只有在特权模式才能对当前程序状态寄存器CPSR的所有控制位直接进行读写访问，而非特权模式只允许对CPSR的控制位进行间接的访问</p></li><li><p>每一种异常模式都有对应的寄存器，供相应的异常处理程序使用，从而可保证处理器在进入异常模式时，用户模式下的寄存器不会被破坏</p></li><li><p>用户模式和系统模式不能通过异常进入，也就是说想进入系统模式，必须通过修改CPSR才能实现</p></li></ul><h4 id="ARM内部寄存器"><a href="#ARM内部寄存器" class="headerlink" title="ARM内部寄存器"></a>ARM内部寄存器</h4><ul><li>ARM内部有37个用户可以访问的32位寄存器，其中有6个32位宽的状态寄存器目前只使用了其中12位<ul><li>31个通用寄存器</li><li>6个状态寄存器</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915133738.png" alt="shit"></li></ul></li><li>堆栈指针R13（SP）<ul><li>堆栈操作通常发生在子程序调用、异常发生或者程序运行过程中寄存器数量不够的时候。前两者是把用到的寄存器临时存储后面再重装，而后者是需要的时候弹出来操作</li><li>保存堆栈的出入口处地址</li><li>4中堆栈方式<ul><li>满递增</li><li>空递增</li><li>满递减</li><li>空递减</li></ul></li></ul></li><li>链接寄存器R14（LR）<ul><li>每种异常模式都有专门的R14寄存器用于保护子程序的返回地址</li><li>异常处理程序的完成的返回是通过将LR的值写出PC，同时从SPSR寄存器中恢复CPSR来实现的</li></ul></li><li>程序计数器R15（PC）<ul><li>总是指向正在取指的指令</li></ul></li><li>程序状态寄存器（CPSR）<ul><li>所有模式共享一个CPSR</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143342.png" alt="image-20200915143342407"></li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143528.png" alt=""></li></ul></li><li>程序状态保存寄存器（SPSR）<ul><li>用户模式和系统模式不是一场中断，所以他们没有SPSR</li><li>通过程序直接改写CPSR，CPSR是不会被保存到SPSR中去的，因此只有发生异常或者中断的时候才会备份到SPSR中去</li></ul></li></ul><h4 id="Thumb状态下的寄存器"><a href="#Thumb状态下的寄存器" class="headerlink" title="Thumb状态下的寄存器"></a>Thumb状态下的寄存器</h4><ul><li><p>由于Thumb指令集不包含MSR和MRS指令，如果用户要修改CPSR中的任何标志位都需要回到ARM模式。通过BX和BLX指令来改变指令集模式，而且当完成复位或者进入异常模式将会自动切换到ARM模式</p></li><li><p>所有异常处理都是在ARM状态下执行的</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143134.png" alt="image-20200915143133981"></p></li></ul><h4 id="ARM体系的异常、中断及其向量表"><a href="#ARM体系的异常、中断及其向量表" class="headerlink" title="ARM体系的异常、中断及其向量表"></a>ARM体系的异常、中断及其向量表</h4><ul><li><p>异常向量表</p><ul><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915144333.png" alt="img"></li></ul></li><li><p>异常优先级</p><ul><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915144257.png" alt="image-20200915144257014"></li></ul></li></ul><h4 id="ARM体系的存储结构"><a href="#ARM体系的存储结构" class="headerlink" title="ARM体系的存储结构"></a>ARM体系的存储结构</h4><ul><li>小端格式</li><li>大端格式</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915151602.png" alt="image-20200915151601925"></li><li>注意除了考虑单个字，还要考虑多个字的情况，详情见书P49页</li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="ARM处理器的寻址方式"><a href="#ARM处理器的寻址方式" class="headerlink" title="ARM处理器的寻址方式"></a>ARM处理器的寻址方式</h3><ul><li><p>寄存器寻址</p><ul><li><p>操作数的值存储在寄存器中，指令的地址码指出的是寄存器的编号，指令执行时可以直接取出寄存器的值来操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV R1,R2;<span class="comment">//R2存储到R1中</span></span><br><span class="line">SUB R0,R1,R2;<span class="comment">//将R1-R2的值存储在R0中</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>立即寻址</p><ul><li><p>操作码字段后面的地址码部分即是操作数本身，也就是说数据包含在指令当中，取出指令后可以直接使用，这样的数也被称为立即数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SUBS R0,R0,#<span class="number">1</span>;<span class="comment">//R0-1,并且存储在R0中，并且影响标志位</span></span><br><span class="line">MOV R0,#<span class="number">0xFF000</span>;<span class="comment">//将立即数0xFF00 装入R0</span></span><br></pre></td></tr></table></figure><p>前缀<strong>#</strong>表示立即数</p></li></ul></li></ul><ul><li><p>寄存器移位寻址</p><ul><li><p>ARM指令集特有的寻址方式</p></li><li><p>当第二个操作数是寄存器移位方式时，第二个寄存器操作数在于第一个操作数结合之前，选择进行移位操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV R0,R2,LSL # <span class="number">3</span>;<span class="comment">// R0=R2*8</span></span><br><span class="line">ANDS R1,R1,R2,LSL R3;<span class="comment">//R1=R1 AND (R2*2^&#123;R3&#125;) </span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>寄存器间接寻址</p><ul><li><p>寻址指令中的地址码给出的是一个通用寄存器的编号，所需的操作数保存在寄存器指定地址的存储单元中，即寄存器为操作数的地址指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LDR R1,[R2]; <span class="comment">//将R2指向的存储单元的数据读出，保存在R2中</span></span><br><span class="line">SWP R1,R1,[R2]; <span class="comment">//将寄存器R1的值和R2指定的存储单元进行</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>基址寻址</p><ul><li><p>将基址寄存器的内容与指令中给出的偏移量相加，形成操作数的有效地址，基址寻址用于访问基址附近的存储单元，常用于查表、数组操作、功能部件寄存器访问等</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LDR R2,[R3,#<span class="number">0x0C</span>]; <span class="comment">// R2=R3+#0x0C</span></span><br><span class="line">STR R1,[R0,#<span class="number">-4</span>]!; <span class="comment">// R0-4=R1</span></span><br><span class="line">LDR R1,[R0,R3,LSL,#<span class="number">1</span>]; <span class="comment">// R1=R0+R3*2</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>多寄存器寻址</p><ul><li><p>一次可以传输过个寄存器，允许一条指令传送16个寄存器的任何子集或者所有寄存器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LDMIA R1!,&#123;R2-R7,R12&#125;;<span class="comment">//将R1的数据读到R2-R7,R12中</span></span><br><span class="line">STMIA R0!,&#123;R2-R7,R12&#125;;<span class="comment">//将R2-R7，R12的数据自动保存到R0当中，R0自动加一</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>堆栈寻址</p></li><li><p>相对寻址</p></li></ul><h3 id="ARM指令集"><a href="#ARM指令集" class="headerlink" title="ARM指令集"></a>ARM指令集</h3><ul><li>ASR #n 算术右移n位</li><li>LSL  #n 逻辑左移n位</li><li>LSR #n 逻辑右移n位</li><li>ROR #n 循环右移n位</li><li>RRX 带扩展的循环右移1位</li></ul><h3 id="ARM存储器访问指令"><a href="#ARM存储器访问指令" class="headerlink" title="ARM存储器访问指令"></a>ARM存储器访问指令</h3><ul><li>LDR  {cond} {T} Rd，&lt;地址&gt; 加载指定地址上的数据放到Rd中</li><li>STR  {cond} {T} Rd，&lt;地址&gt;存储数据到指定地址，数据在Rd中</li><li>LDR {cond} B{T} Rd，&lt;地址&gt;加载字节数据，放入Rd中，即Rd最低字节有效</li><li>STR {cond} B{T} Rd，&lt;地址&gt;存储字节数据，数据在Rd中，最低字节有效</li></ul><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="存储器重映射"><a href="#存储器重映射" class="headerlink" title="存储器重映射"></a>存储器重映射</h3><ul><li>存储器映射：为物理存储器分配地址的过程</li><li>存储器重映射：将已经映射的存储器再次映射的过程<ul><li>多个地址指向同一个存储单元</li></ul></li><li>包括<ul><li>Boot Block</li><li>异常向量表的少量存储单元</li></ul></li><li>（引导块）Boot Block<ul><li>系统固化的代码，用户无法删除和修改</li><li>功能<ul><li>判断运行哪个存储器上的程序</li><li>检查用户代码是否加密</li><li>判断芯片是否加密</li><li>芯片的在应用编程（IAP）以及系统编程功能（ISP）</li></ul></li><li>芯片复位后首先运行</li><li>和启动代码区分开来<ul><li>启动代码是用户添加的，Boot Block是系统固化的 系统复位后先运行引导快，再运行启动代码</li></ul></li></ul></li></ul><h3 id="系统启动代码"><a href="#系统启动代码" class="headerlink" title="系统启动代码"></a>系统启动代码</h3><ul><li>主要和Boot Block 区分开来</li></ul><h3 id="系统控制模块"><a href="#系统控制模块" class="headerlink" title="系统控制模块"></a>系统控制模块</h3><ul><li>部分独立工作不会对其他部件产生影响的功能部件：<ul><li>$UART$接口</li><li>$I^{2}C$接口</li></ul></li></ul><h4 id="系统时钟"><a href="#系统时钟" class="headerlink" title="系统时钟"></a>系统时钟</h4><ul><li><p>晶体振荡器</p><ul><li>为系统提供基本的时钟信号，频率为$F_{OSC}$</li><li>从属模式<ul><li>外部时钟源</li></ul></li><li>振荡模式<ul><li>外部晶体和片内振荡电路</li></ul></li></ul></li><li><p>唤醒定时器</p><ul><li>当复位或者系统从掉电模式被唤醒的时候，唤醒定时器需要对于输入的时钟信号做计数延迟，使系统有时间初始化</li></ul></li><li><p>锁相环（PLL）</p><ul><li>提高$F<em>{OSC}$信号到$F</em>{CCLK}$ (符合用户工作需要的时钟频率)</li></ul></li><li><p>VPB分频器</p><ul><li>降低$F_{CCLK}$信号到满足外设部件使用</li></ul></li><li><p>工作频率</p><ul><li>LPC2000系列基于ARM7内核，该内核的工作频率在100MHZ以下，大部分支持最高60MHZ的内核时钟，少部分支持70MHZ的内核时钟</li></ul></li><li><p>功率控制</p><ul><li>空闲模式<ul><li>处理器停止执行指令，但是系统时钟仍然有效，外设可以继续工作</li></ul></li><li>掉电模式<ul><li>振荡器关闭，系统内部没有任何内部时钟</li></ul></li></ul></li></ul><h4 id="复位"><a href="#复位" class="headerlink" title="复位"></a>复位</h4><ul><li>外部复位<ul><li>改变引脚RESET为低电平</li></ul></li><li>看门狗复位<ul><li>ARM内嵌看门狗部件</li></ul></li><li>任何复位都会唤醒定时器，计数定时后处理器开始执行指令</li></ul><h3 id="外部存储器控制器（EMC）"><a href="#外部存储器控制器（EMC）" class="headerlink" title="外部存储器控制器（EMC）"></a>外部存储器控制器（EMC）</h3><ul><li>外部静态存储器控制器是AMBA AHB总线上的一个从模块，它为AHB系统总线和外部存储器提供一个接口</li><li>外部存储器控制器包含4个配置寄存器。每个配置寄存器控制一个外部存储器接口的总线空闲时间、读访问长度、写访问长度、存储器组是否写保护、存储器组的总线宽度的设置等</li></ul><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/12/fuck.png" alt="fuck"></p><ul><li><p>并行串行区分</p><ul><li>并行：$EMC$</li><li>串行：$I^{2}C;SPI;UART$</li></ul></li><li><p>程序题目</p><ul><li><p>向PSRAM中写入16位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uint16 *point16;</span><br><span class="line">uint16 data16=<span class="number">0x00</span>;</span><br><span class="line">point16=(uint1 <span class="number">16</span>*)<span class="number">0x80001020</span>;<span class="comment">//初始地址</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *point16=data16++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>向PSRAM中低地址写入8位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uint8 *point8;</span><br><span class="line">uint8 data8=<span class="number">0x00</span>;</span><br><span class="line">point8=(uint8 *)<span class="number">0x80001020</span>;<span class="comment">//初始地址</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *point8=data8++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>向PSRAM中高地址写入8位数据</p><ul><li>类比同上</li><li>8位写操作，两者在控制的时候是通过BLS0、BLS1的交替生效而成功的</li><li>16位BLS0、BLS1同时生效</li></ul></li><li><p>向PSRAM中读取8位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">uint8 RcvData8;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">uint8 *point8;</span><br><span class="line">point8 = (uint *) <span class="number">0x80001010</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//循环读取0x80001010--0x80001013</span></span><br><span class="line">&#123;</span><br><span class="line">RcvData8 = *point8++;<span class="comment">// 读取0x80001010</span></span><br><span class="line">RcvData8 = *point8++;<span class="comment">// 读取0x80001011</span></span><br><span class="line">RcvData8 = *point8++;<span class="comment">// 读取0x80001012</span></span><br><span class="line">RcvData8 = *point8--;<span class="comment">// 读取0x80001013</span></span><br><span class="line">*point8--;</span><br><span class="line">*point8--;</span><br><span class="line">*point8--;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="引脚连接模块"><a href="#引脚连接模块" class="headerlink" title="引脚连接模块"></a>引脚连接模块</h3><h4 id="GPIO"><a href="#GPIO" class="headerlink" title="GPIO"></a>GPIO</h4><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/12/image-20200912215329354.png" alt="image-20200912215329354"></p><ul><li>IOxDIR 控制方向（In or Out）</li><li>IOxSET 控制高电平输出</li><li>IOxCLR 控制低电平输出</li><li>IOxPIN 反应引脚当前电平状态</li></ul><h4 id="GPIO应用示例"><a href="#GPIO应用示例" class="headerlink" title="GPIO应用示例"></a>GPIO应用示例</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PINSEL0 &amp;= <span class="number">0xFFFFFFFC</span>; <span class="comment">// 设置引脚连接模块，将P0.0设置为GPIO功能</span></span><br><span class="line">IOxDIR  |= <span class="number">0x00000001</span>; <span class="comment">// 设置P0.0为输出</span></span><br><span class="line">IOxSET = <span class="number">0x00000001</span>;   <span class="comment">// 设置P0.0为高电平</span></span><br></pre></td></tr></table></figure><ul><li>在PINSEL0中每两位二进制对应一个P0.x</li><li>而对于其他的，例如IOxDIR、IOxSET 每一位二进制对于一个P0.x;</li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h3><ul><li>在实时多任务系统中，信号量被广泛用于任务间对共享资源的互斥、任务和中断服务程序的同步以及任务的同步。</li></ul><h3 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h3><ul><li>消息是任务之间的一种通信手段，当同步过程需要传输具体内容的时候就不能使用信号量，这个时候可以选择消息邮箱，即通过内核服务可以给任务发送消息。</li></ul><h3 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h3><ul><li>邮箱用来在任务之间或者中断与任务之间传递一个指针，以便任务可以通过指针发送和接收任意类型的数据。</li></ul><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><ul><li>消息队列就像一个类似于缓冲区的对象，通过消息队列和ISR发送和接收消息，实现数据的通信和同步。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大二下册 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeforcesRound#664(Div.1)</title>
      <link href="/2020/08/12/codeforces/codeforcesround-664-div1/"/>
      <url>/2020/08/12/codeforces/codeforcesround-664-div1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2>]]></content>
      
      
      <categories>
          
          <category> codeforces </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/08/07/zhi-shi-dian-xue-xi/shu-lun/shu-lun/"/>
      <url>/2020/08/07/zhi-shi-dian-xue-xi/shu-lun/shu-lun/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数论知识点"><a href="#数论知识点" class="headerlink" title="数论知识点"></a>数论知识点</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些用到的数论知识和相关总结</p><h2 id="gcd"><a href="#gcd" class="headerlink" title="gcd"></a>gcd</h2><p>$gcd(a,b)=gcd(a-b,b)=gcd(a\%b,b)=gcd(b,a\%b)$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="exgcd"><a href="#exgcd" class="headerlink" title="exgcd"></a>exgcd</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>; y=<span class="number">0</span>; <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> gcd =exgcd(b,a%b,y,x);</span><br><span class="line">    y-=(a/b)*x;</span><br><span class="line">    <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll x,ll k,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) res=res*x%p; x=x*x%p; k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bsgs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> s=y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        M[s]=i; <span class="comment">// 为了求得最小值，这里能更新则更新</span></span><br><span class="line">        mul(s,x,p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> xm=ksm(x,m,p); s=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="number">1ll</span>*s*xm%p;  <span class="comment">// 注意1ll</span></span><br><span class="line">        <span class="keyword">if</span> (M.count(s))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (i*m-M[s]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="广义二项式定理"><a href="#广义二项式定理" class="headerlink" title="广义二项式定理"></a>广义二项式定理</h2><script type="math/tex; mode=display">G^{n}(x)=\sum_{i=0}^\infty C_{n+k-1}^k x^k</script><h2 id="积性函数"><a href="#积性函数" class="headerlink" title="积性函数"></a>积性函数</h2><ul><li>普通积性函数，对于两个互质的数$n,m,$有$f(n<em>m)=f(n)</em>f(m)$</li><li>完全积性函数，任意两个数$n,m,$有$f(n<em>m)=f(n)</em>f(m)$</li></ul><h2 id="狄利克雷卷积"><a href="#狄利克雷卷积" class="headerlink" title="狄利克雷卷积"></a>狄利克雷卷积</h2><ul><li>$(f<em>g)(x)=\sum_{d|x}f(d)</em>g(x/d)$</li><li>满足交换律和结合律</li><li>两个积性函数的狄利克雷卷积还是积性函数</li></ul><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><h2 id="莫比乌斯函数"><a href="#莫比乌斯函数" class="headerlink" title="莫比乌斯函数"></a>莫比乌斯函数</h2><h3 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h3><ul><li>对于一个函数和1做狄利克雷卷积</li><li>$g=f*1; g(x)=\sum_{d|x}f(d)$</li></ul><h3 id="反演"><a href="#反演" class="headerlink" title="反演"></a>反演</h3><ul><li>$f(x)=g(x)-\sum_{d|x,x\not=d}f(d)$</li><li>利用容斥$f=g<em>\mu$ 也就是$f(x)=\sum_{d|x}g(d)</em>\mu(x/d)$</li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo实操记录</title>
      <link href="/2020/08/07/hexo-bo-ke-xiang-guan/hexo-bo-ke-shi-ji-cao-zuo-ji-lu/"/>
      <url>/2020/08/07/hexo-bo-ke-xiang-guan/hexo-bo-ke-shi-ji-cao-zuo-ji-lu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><ul><li>问题：使用typora编辑时候使用代码高亮标注c++，使得页面&lt;号被错误识别<ul><li>解决：使用c，注意是小写c</li></ul></li></ul><h2 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h2><ul><li><p>问题：不能使用 ” “ 作为markdown文件的文件名，Front-matter也不支持</p><ul><li>解决：不使用</li></ul></li><li><p>问题：存在hexo渲染不能生成index.html文件</p><ul><li>解决：多传了几次似乎就解决了</li></ul></li><li><p>问题：$ /c/Users/14816/AppData/Roaming/npm/hexo: line 12: node: command not found</p><ul><li>因为是我在装其他软件时导致系统路径发生变化</li><li>解决：添加路径<ul><li>C:\Users\zhong\AppData\Roaming\npm</li><li>D:\software\NODEJS</li><li>C:\Users\zhong\AppData\Roaming\npm\node_modules\hexo\bin</li></ul></li></ul></li></ul><h2 id="文章界面"><a href="#文章界面" class="headerlink" title="文章界面"></a>文章界面</h2><ul><li><p>问题：存在文章链接部分过长，超出范围</p><ul><li><p>解决方案：我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@echo</span> <span class="string">off</span></span><br><span class="line"><span class="attr">E:</span></span><br><span class="line"><span class="string">cd</span> <span class="string">E:blog</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">clean&amp;&amp;hexo</span> <span class="string">g&amp;&amp;hexo</span> <span class="string">d</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><ul><li>参见大佬：<a href="https://cloud.tencent.com/developer/article/1577027">https://cloud.tencent.com/developer/article/1577027</a></li></ul><h3 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h3><ul><li><p>首先你得设置SSH密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>入后一直回车，然后在<code>C:/Users/[username]</code>目录下找到名为<code>.ssh</code>的文件夹， 文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本编辑器打开<code>id_rsa.pub</code></p></li><li><p>将其复制到阿里云的服务器的密钥管理中，重启阿里云</p></li><li><p>测试连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T root@你的IP地址</span><br></pre></td></tr></table></figure></li><li><p>其余操作参见博客</p><ul><li><a href="https://yq.aliyun.com/articles/640997?spm=a2c4e.11155472.0.0.30aa2da5Pg73VS">https://yq.aliyun.com/articles/640997?spm=a2c4e.11155472.0.0.30aa2da5Pg73VS</a></li></ul></li></ul><h3 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h3><ul><li>首先通过阿里云控制台申请二级域名</li><li>然后利用小皮面板部署网页</li><li>参考<a href="https://blog.csdn.net/weixin_45682081/article/details/105992591">https://blog.csdn.net/weixin_45682081/article/details/105992591</a></li></ul><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li><p>问题：出现公式部分显示的情况</p><ul><li><p><a href="https://www.cnblogs.com/Ai-heng/p/7282110.html">https://www.cnblogs.com/Ai-heng/p/7282110.html</a></p></li><li><p>因为hexo自带渲染冲突</p></li><li><pre><code>npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save</code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020牛客暑期多校训练营（第七场）</title>
      <link href="/2020/08/07/acm-7-8-yue-xun-lian/2020-niu-ke-duo-xiao/niu-ke-di-qi-chang-ti-jie/"/>
      <url>/2020/08/07/acm-7-8-yue-xun-lian/2020-niu-ke-duo-xiao/niu-ke-di-qi-chang-ti-jie/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h2><h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><script type="math/tex; mode=display">\sum_{i=1}^{n-1} \sum_{j=i+1}^{n}d(i,j)^2=\sum_{i=1}^{n-1} \sum_{j=i+1}^{n}(x_{i}-x_{j})^{2}+(y_{i}-y_{j})^2=\sum_{i=1}^{n} \sum_{j=1}^{n}(x_{i}^2+y_{j}^2)-(x_{i}*x_{j}+y_{i}*y_{j})=n*\sum_{i=1}^{n}(x_{i}^{2}+y_{i}^{2})-(\sum_{i=1}^{n}x_{i})^{2}-(\sum_{i=1}^{n}y_{i})^{2}</script><p>然后DP即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MP make_pair</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span> ,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;&gt; ve;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">9</span>][<span class="number">610</span>][<span class="number">610</span>],ans[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">-33</span>; i&lt;=<span class="number">33</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">-33</span>; j&lt;=<span class="number">33</span>; j++)</span><br><span class="line">            ve.pb(MP(i*i+j*j,MP(i,j)));</span><br><span class="line">    sort(ve.begin(), ve.end());</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">300</span>][<span class="number">300</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">1</span>;r&lt;=<span class="number">30</span>;++r)&#123;</span><br><span class="line">        <span class="keyword">while</span>(ve[s].fi&lt;=r*r)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;++i)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">300</span>-r*i;j&lt;=<span class="number">300</span>+r*i;++j)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">300</span>-r*i;k&lt;=<span class="number">300</span>+r*i;++k)</span><br><span class="line">                        dp[i][j][k]=max(dp[i][j][k],dp[i<span class="number">-1</span>][j-ve[s].se.fi][k-ve[s].se.se]+ve[s].fi);</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">1</span>;n&lt;=<span class="number">8</span>;++n)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">0</span>;h&lt;<span class="number">2</span>*<span class="number">300</span>;++h)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;<span class="number">2</span>*<span class="number">300</span>;++l)</span><br><span class="line">                    <span class="keyword">if</span>(dp[n][h][l]&gt;<span class="number">0</span>)</span><br><span class="line">                        ans[n][r]=max(ans[n][r],n*dp[n][h][l]-((h<span class="number">-300</span>)*(h<span class="number">-300</span>)+(l<span class="number">-300</span>)*(l<span class="number">-300</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    prepare();</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,r;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans[n][r]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="I题"><a href="#I题" class="headerlink" title="I题"></a>I题</h2><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><ul><li>prufer序列</li><li>组合数</li></ul><blockquote><p>prufer序列的性质：</p><ul><li>序列与无根树一一对应</li><li>度数为x的节点会在序列中出现x-1次</li><li>一个n个节点的完全图的生成树的个数为$n^{n-2}$</li></ul><p>更多性质参考：<a href="https://www.cnblogs.com/chenxiaoran666/p/prufer.html">https://www.cnblogs.com/chenxiaoran666/p/prufer.html</a></p></blockquote><h3 id="具体推导"><a href="#具体推导" class="headerlink" title="具体推导"></a>具体推导</h3><ul><li><p>$dp[i]$ 代表森林中有$i$个节点的方案数</p></li><li><p>$f[i]$代表有$i$个节点的无根树的度数平方和</p></li><li><p>$ans[i]$代表有$i$个节点的无根树森林的度数平方和</p></li><li><script type="math/tex; mode=display">dp[i]=\sum_{j=1}^{i}dp[i-j]*j^{j-2}*C_{i-1}^{j-1}</script></li><li><script type="math/tex; mode=display">f[i]=i*\sum_{j=1}^{i-1}j^{2}*C_{i-2}^{j-1}*(i-1)^{i-2-(j-1)}</script></li><li><script type="math/tex; mode=display">ans[i]=\sum_{j=1}^{i}(ans[i-j]*j^{j-2}+f[j]*dp[i-j])*C_{i-1}^{j-1}</script></li></ul><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define N 5000</span></span><br><span class="line">using namespace std;</span><br><span class="line">int mod;</span><br><span class="line">long long ans[N+5],f[N+5],dp[N+5],c[N+5][N+5],vis[N+5][N+5];</span><br><span class="line">ll ksm(ll x,ll k,ll p)</span><br><span class="line">&#123;</span><br><span class="line">    //cout&lt;&lt;<span class="string">&quot;       &quot;</span>&lt;&lt;<span class="string">x&lt;&lt; &quot; &quot;&lt;&lt;k&lt;&lt;&quot; &quot;&lt;&lt;vis[x</span>][k]&lt;&lt;<span class="string">endl;</span></span><br><span class="line"><span class="string">    if (k&lt;=0) return 1;</span></span><br><span class="line"><span class="string">    if (vis[x][k]) return vis[x][k];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ll res=1;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;&quot;                   &quot;&lt;&lt;res&lt;&lt;endl</span>;</span><br><span class="line">    int tmpx=x,tmpk=k;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;1) res=res*x%p; x=x*x%p; k&gt;&gt;=1;</span><br><span class="line">       // cout&lt;&lt;<span class="string">&quot; AAA &quot;</span>&lt;&lt;<span class="string">k&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    vis[tmpx][tmpk]=res;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;&quot;                  &quot;&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    return res;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">int main()</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    int T;</span></span><br><span class="line"><span class="string">    cin&gt;&gt;T&gt;&gt;mod;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for (int i=0; i&lt;=N; i++)</span></span><br><span class="line"><span class="string">        c[i][0]=c[i][i]=1;</span></span><br><span class="line"><span class="string">    for (int i=2; i&lt;=N; i++)</span></span><br><span class="line"><span class="string">        for (int j=1; j&lt;i; j++)</span></span><br><span class="line"><span class="string">            c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;</span></span><br><span class="line"><span class="string">   // cout&lt;&lt;&quot;A&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    dp[0]=1;</span></span><br><span class="line"><span class="string">    for (int i=1; i&lt;=N; i++)</span></span><br><span class="line"><span class="string">        for (int j=1; j&lt;=i; j++)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            //cout&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;endl;</span></span><br><span class="line"><span class="string">            dp[i]=(dp[i]+dp[i-j]*ksm(j,j-2,mod)%mod*c[i-1][j-1]%mod)%mod;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">   // cout&lt;&lt;&quot;B&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    for (int i=1; i&lt;=N; i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        for (int j=1; j&lt;=i-1; j++)</span></span><br><span class="line"><span class="string">            f[i]=(f[i]+j*j%mod*c[i-2][j-1]%mod*ksm(i-1,i-j-1,mod)%mod)%mod;</span></span><br><span class="line"><span class="string">        f[i]=f[i]*i%mod;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">   // cout&lt;&lt;&quot;C&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string">    for (int i=1; i&lt;=N; i++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        for (int j=1; j&lt;=i; j++)</span></span><br><span class="line"><span class="string">            ans[i]=(ans[i]+(ans[i-j]*ksm(j,j-2,mod)%mod+f[j]*dp[i-j]%mod)%mod*c[i-1][j-1]%mod)%mod;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    //cout&lt;&lt;&quot;D&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    while  (T--)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        int n;</span></span><br><span class="line"><span class="string">        scanf(&quot;%d&quot;,&amp;n);</span></span><br><span class="line"><span class="string">        printf(&quot;%lld\n&quot;,ans[n]);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="J题"><a href="#J题" class="headerlink" title="J题"></a>J题</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>英语阅读题，理解题目意思后模拟即可</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">300</span>][<span class="number">30</span>],b[<span class="number">300</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">30</span>][<span class="number">30</span>],cnt[<span class="number">30</span>][<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> l,<span class="keyword">char</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l&lt;=x &amp;&amp; x&lt;=r) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s = %s&quot;</span>,a[i]+<span class="number">1</span>,b[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;a[i]+1&lt;&lt;&quot; &quot;&lt;&lt;b[i]+1&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cirtime=n;</span><br><span class="line">    <span class="keyword">while</span> (cirtime--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> lena=<span class="built_in">strlen</span>(a[i]+<span class="number">1</span>),lenb=<span class="built_in">strlen</span>(b[i]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> A,B,f;</span><br><span class="line">            <span class="keyword">if</span> (lena==lenb  &amp;&amp; lena==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (check(b[i][<span class="number">1</span>],<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;z&#x27;</span>)) <span class="comment">// A=x</span></span><br><span class="line">                &#123;</span><br><span class="line">                    A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                    ans[A][B]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">// A=B</span></span><br><span class="line">                &#123;</span><br><span class="line">                    A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ans[A][j]|=ans[B][j];</span><br><span class="line">                           <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;A&lt;&lt;&quot; &quot;&lt;&lt;B&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;&#x27;o&#x27;-&#x27;a&#x27;&lt;&lt;&quot; &quot;&lt;&lt;ans[A][j]&lt;&lt;endl;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (lena==<span class="number">3</span>) <span class="comment">// A.f=B</span></span><br><span class="line">            &#123;</span><br><span class="line">                A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); f=get(a[i][<span class="number">3</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (ans[A][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">26</span>; k++)</span><br><span class="line">                            cnt[j][f][k]|=ans[B][k];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (lenb==<span class="number">3</span>) <span class="comment">// A=B.f</span></span><br><span class="line">            &#123;</span><br><span class="line">                 A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); f=get(b[i][<span class="number">3</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (ans[B][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">26</span>; k++)</span><br><span class="line">                            ans[A][k]|=cnt[j][f][k];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;cnt[&#x27;o&#x27;-&#x27;a&#x27;][&#x27;f&#x27;-&#x27;a&#x27;][&#x27;o&#x27;-&#x27;a&#x27;]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c: &quot;</span>,i+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++) <span class="keyword">if</span> (ans[i][j]) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j+<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020牛客多校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 套题题解 </tag>
            
            <tag> prufer定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Multi-University Training Contest 6</title>
      <link href="/2020/08/07/acm-7-8-yue-xun-lian/2020-hang-dian-duo-xiao/2020-multi-university-training-contest-6/"/>
      <url>/2020/08/07/acm-7-8-yue-xun-lian/2020-hang-dian-duo-xiao/2020-multi-university-training-contest-6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1006"><a href="#1006" class="headerlink" title="1006"></a>1006</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给你一个点数为$n$,边数为$m$的无向联通图，其中第$i$条边的权值为$2^{i}$,每个点有个点权为$0$或者$1$,求所有$01$点对的最短路径和</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>考虑$2^{i}=2^{i-1}+2^{i-2}+……+2^{0}$ 那么意味着如果前面的边已经使得两点联通，再添加一条边这条边的边权不可能去更新最短路径</p><p>于是考虑先并查集建立出一颗最短路径树，之后在书上树形DP记录答案即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,sum0,sum1,ans;</span><br><span class="line"><span class="keyword">int</span> fa[N],a[N],sum[N][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> tot,pre[N*<span class="number">2</span>],now[N],v[N*<span class="number">2</span>],val[N*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ++tot; pre[tot]=now[x]; now[x]=tot; v[tot]=y; val[tot]=w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==fa[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span> fa[x]=fd(fa[x]);</span><br><span class="line">    <span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> father)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum[x][a[x]]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p=now[x]; p; p=pre[p])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> son=v[p];</span><br><span class="line">        <span class="keyword">if</span> (son==father) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(son,x);</span><br><span class="line">        sum[x][<span class="number">0</span>]+=sum[son][<span class="number">0</span>];</span><br><span class="line">        sum[x][<span class="number">1</span>]+=sum[son][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        ans=(ans+<span class="number">1ll</span>*(sum0-sum[son][<span class="number">0</span>])*sum[son][<span class="number">1</span>]%mod*val[p]%mod)%mod;</span><br><span class="line">        ans=(ans+<span class="number">1ll</span>*(sum1-sum[son][<span class="number">1</span>])*sum[son][<span class="number">0</span>]%mod*val[p]%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fa[i]=i; now[i]=<span class="number">0</span>; sum[i][<span class="number">0</span>]=sum[i][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tot=<span class="number">0</span>; sum0=sum1=<span class="number">0</span>; ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span> (a[i]==<span class="number">0</span>) sum0++;</span><br><span class="line">            <span class="keyword">else</span> sum1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> val=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            val=<span class="number">1ll</span>*val*<span class="number">2</span>%mod;</span><br><span class="line">            <span class="keyword">int</span> x,y,fx,fy;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            fx=fd(x); fy=fd(y);</span><br><span class="line">            <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fa[fx]=fy;</span><br><span class="line">                ins(x,y,val);</span><br><span class="line">                ins(y,x,val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1010"><a href="#1010" class="headerlink" title="1010"></a>1010</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>给你一个有边权无向图，其中一个生成树的权值为所有边权的与操作，求期望的生成树权值是多少</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><ul><li>生成树计数，通过<strong>Matrix-Tree 定理</strong>可以知道生成树的个数</li><li>可以参考<a href="https://blog.csdn.net/u011815404/article/details/99679527">https://blog.csdn.net/u011815404/article/details/99679527</a></li><li>因为我们是要求与操作的边权和，于是我们可以按位操作，根据每一位做一次生成树计数</li></ul><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 105</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">LL K[N][N],ans[N];</span><br><span class="line"><span class="keyword">int</span> bin[<span class="number">40</span>],A[N][N][N];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function">LL <span class="title">gauss</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//求矩阵K的n-1阶顺序主子式</span></span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;<span class="comment">//枚举主对角线上第i个元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n<span class="number">-1</span>;j++)&#123;<span class="comment">//枚举剩下的行</span></span><br><span class="line">            <span class="keyword">while</span>(K[j][i])&#123;<span class="comment">//辗转相除</span></span><br><span class="line">                <span class="keyword">int</span> t=K[i][i]/K[j][i];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=n<span class="number">-1</span>;k++)<span class="comment">//转为倒三角</span></span><br><span class="line">                    K[i][k]=(K[i][k]-t*K[j][k]+MOD)%MOD;</span><br><span class="line">                swap(K[i],K[j]);<span class="comment">//交换i、j两行</span></span><br><span class="line">                res=-res;<span class="comment">//取负</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res=(res*K[i][i])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (res+MOD)%MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll x,ll k,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) res=res*x%p; x=x*x%p; k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    bin[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">30</span>; i++) bin[i]=bin[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;bin[30]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)  A[i][j][k]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x,y,val;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;val);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">29</span>; j++) <span class="keyword">if</span> ((val&amp;bin[j])==bin[j])</span><br><span class="line">            &#123;</span><br><span class="line">                A[j][x][x]++;</span><br><span class="line">                A[j][y][y]++;</span><br><span class="line">                A[j][x][y]--;</span><br><span class="line">                A[j][y][x]--;</span><br><span class="line">            &#125;</span><br><span class="line">            A[<span class="number">30</span>][x][x]++;</span><br><span class="line">            A[<span class="number">30</span>][y][y]++;</span><br><span class="line">            A[<span class="number">30</span>][x][y]--;</span><br><span class="line">            A[<span class="number">30</span>][y][x]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++) K[j][k]=A[i][j][k];</span><br><span class="line">            ans[i]=gauss(n);c</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;            &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;ans[i]&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ll res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">29</span>; i++)</span><br><span class="line">            res=(res+<span class="number">1ll</span>*bin[i]*ans[i]%MOD)%MOD;</span><br><span class="line">        res=res*ksm(ans[<span class="number">30</span>],MOD<span class="number">-2</span>,MOD)%MOD;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020杭电多校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 套题题解 </tag>
            
            <tag> 并查集 </tag>
            
            <tag> 生成树计数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round#638(Div. 2)</title>
      <link href="/2020/08/07/acm-5-yue-xun-lian/codeforces-round-638-div.2/"/>
      <url>/2020/08/07/acm-5-yue-xun-lian/codeforces-round-638-div.2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>有一个很好的特性就是:</p><script type="math/tex; mode=display">2^n=2^{n-1}+2^{n-2}+...+2^{0}+2^{0}</script><p>于是我们给一组分配一个最大的+几个最小的即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        ll a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k=n/<span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">        ll sum=<span class="number">0</span>,tmp=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">1ll</span>&lt;&lt;i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;k; i++)</span><br><span class="line">            tmp+=<span class="number">1ll</span>&lt;&lt;i;</span><br><span class="line">        tmp+=<span class="number">1ll</span>&lt;&lt;n;</span><br><span class="line">        sum=sum-tmp;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">abs</span>(tmp-sum)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>因为不限制长度，于是我们统计一下出现过的数字，然后重复长度n次输出即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],ans[N*<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>,las;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span> (!vis[a[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                tot++;</span><br><span class="line">                ans[++cnt]=a[i]; las=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tot&gt;k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=cnt+<span class="number">1</span>; i&lt;=k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[++cnt]=las;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;n*k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=k; j++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>这道题目我觉得出的很好，很容易发现没有显然的贪心策略。</p><p>所以我刚开始的时候想的是F(i,j,k)代表前i个剩下j个red和k个blue没匹配，然后发现时间复杂度是n^4</p><p>于是我们考虑一下优化，我们想想red和blue的关系</p><p>我们会发现：</p><ul><li>假设我们知道有x个red没有在任何一种篮子里面，我们也就可以推出有多少blue没在任何一种篮子里面，即有（sumred-x+sumblue）%k个blue没在任何一种篮子里面。于是我们用一个二维的即可</li><li>假设我们知道有x个red是杂匹配的，我们也可以推出有多少个blue也是杂匹配的，于是也可以将三维优化为二维的</li></ul><p>方法一：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> dp[N][N];<span class="comment">// 剩下红色浆果的数量</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> suma,sumb;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]),suma+=a[i],sumb+=b[i];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[i<span class="number">-1</span>][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i][(j+a[i]%k)%k]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">0</span>; l&lt;=min(k<span class="number">-1</span>,a[i]); l++)</span><br><span class="line">            <span class="keyword">if</span> (((a[i]-l)%k+b[i])&gt;=k)</span><br><span class="line">                dp[i][(l+j)%k]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">        <span class="keyword">if</span> (dp[n][i]) ans=max(ans,(suma+sumb-i)/k);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> dp[N][N];<span class="comment">// 前i个里面有j个红果子是异构篮子里面的</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> suma,sumb;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]),suma+=a[i],sumb+=b[i];</span><br><span class="line">        <span class="comment">//if (n==125 &amp;&amp; i&gt;=73) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;&lt;&lt;b[i]&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[i<span class="number">-1</span>][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">// (0&lt;=x&lt;=a[i]   0&lt;=k-x&lt;=b[i]  == k&gt;=x&gt;=k-b[i])</span></span><br><span class="line">            <span class="comment">// (</span></span><br><span class="line">          <span class="comment">//  cout&lt;&lt;&quot; &quot;&lt;&lt;max((k-b[i])%k,0)&lt;&lt;&quot; &quot;&lt;&lt;min(a[i],k)&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x=max(k-b[i],<span class="number">0</span>); x&lt;=min(a[i],k); x++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                dp[i][(j+x)%k]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    <span class="keyword">if</span> (dp[n][i])</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot;          &quot;&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        ans=max(ans,min(i,<span class="number">1</span>)+(suma-i)/k+(sumb-(k-i)%k)/k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020湖南多校线上第三场 CERC2014</title>
      <link href="/2020/08/07/acm-5-yue-xun-lian/cerc14/"/>
      <url>/2020/08/07/acm-5-yue-xun-lian/cerc14/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>比赛平台：codeforces</p><p>Rank：57</p><p>现场AC：5</p><p>补题：2    </p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>队友AC</p><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>队友AC</p><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>待补题</p><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>DP</p><p>f[i] [j] [k]代表前i个状态为j,k的方案数</p><p>j=1 代表s[1]=s[2]  j=0 代表 s[1]&lt;s[2]</p><p>k=1代表s[2]=s[3] k=0 代表 s[2]&lt;s[3]</p><p>起初我在统计转移方法的时候是利用if判断，后面想到可以刚开始枚举所有情况预处理一下</p><p>具体转移方程见代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">4</span>][N];</span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>],mn,mn12,mn23;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  f[N][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  g[<span class="number">10</span>][<span class="number">30</span>][<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">2</span>]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">3</span>]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    n[<span class="number">1</span>]=<span class="built_in">strlen</span>(s[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">    n[<span class="number">2</span>]=<span class="built_in">strlen</span>(s[<span class="number">2</span>]+<span class="number">1</span>);</span><br><span class="line">    n[<span class="number">3</span>]=<span class="built_in">strlen</span>(s[<span class="number">3</span>]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    n[<span class="number">0</span>]=max(n[<span class="number">1</span>],max(n[<span class="number">2</span>],n[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n[<span class="number">0</span>]; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">1</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">1</span>; k++)</span><br><span class="line">            f[i][j][k]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// if (i==1 &amp;&amp; j==2 &amp;&amp; k==3) cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (i==j &amp;&amp; j==k &amp;&amp; i==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    g[x][i][j][k]++;</span><br><span class="line">   <span class="comment">// if (x== 9 &amp;&amp; j==2 &amp;&amp; k==3) cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;k&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span>) g[x][<span class="number">27</span>][j][k]++;</span><br><span class="line">    <span class="keyword">if</span> (j!=<span class="number">0</span>) g[x][i][<span class="number">27</span>][k]++;</span><br><span class="line">    <span class="keyword">if</span> (k!=<span class="number">0</span>) g[x][i][j][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span>) g[x][<span class="number">27</span>][<span class="number">27</span>][k]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][<span class="number">27</span>][j][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (j!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][i][<span class="number">27</span>][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][<span class="number">27</span>][<span class="number">27</span>][<span class="number">27</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">26</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">26</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">26</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i==j &amp;&amp; j==k)  <span class="comment">// i==j==k</span></span><br><span class="line">                &#123;</span><br><span class="line">                    up(<span class="number">1</span>,i,j,k);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i&lt;j &amp;&amp; j==k) <span class="comment">//i&lt;j==k</span></span><br><span class="line">                &#123;</span><br><span class="line">                    up(<span class="number">2</span>,i,j,k);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (j==k) up(<span class="number">3</span>,i,j,k); <span class="comment">// j==k</span></span><br><span class="line">                <span class="keyword">if</span> (i==j &amp;&amp; j&lt;k) up(<span class="number">4</span>,i,j,k); <span class="comment">// i==j&lt;k</span></span><br><span class="line">                <span class="keyword">if</span> (i==j) up(<span class="number">5</span>,i,j,k); <span class="comment">// i==j</span></span><br><span class="line">                <span class="keyword">if</span> (j&lt;k) up(<span class="number">6</span>,i,j,k); <span class="comment">// j&lt;k</span></span><br><span class="line">                <span class="keyword">if</span> (i&lt;j) up(<span class="number">7</span>,i,j,k); <span class="comment">// i&lt;j</span></span><br><span class="line">                up(<span class="number">8</span>,i,j,k); <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (i&lt;j &amp;&amp; j&lt;k) up(<span class="number">9</span>,i,j,k); <span class="comment">// i&lt;j&lt;k</span></span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;n[x]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[x][i]==<span class="string">&#x27;?&#x27;</span>) <span class="keyword">return</span> <span class="number">27</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (s[x][i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    prepare();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n[<span class="number">0</span>]; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b,c;</span><br><span class="line"></span><br><span class="line">            a=get(<span class="number">1</span>,i);</span><br><span class="line">            b=get(<span class="number">2</span>,i);</span><br><span class="line">            c=get(<span class="number">3</span>,i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">1</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">1</span>][a][b][c]%mod; <span class="comment">// a==b==c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">1</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">2</span>][a][b][c]%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">1</span>]=(f[i][<span class="number">0</span>][<span class="number">1</span>]+f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]*g[<span class="number">3</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">4</span>][a][b][c]%mod; <span class="comment">// a==b</span></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">0</span>]=(f[i][<span class="number">1</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>]*g[<span class="number">5</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]*g[<span class="number">6</span>][a][b][c]%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>]*g[<span class="number">7</span>][a][b][c]%mod)%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">0</span>]*g[<span class="number">8</span>][a][b][c]%mod)%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">9</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;g[9][a][b][c]&lt;&lt;&quot; &quot;&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;&quot; &quot;&lt;&lt;c&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[n[<span class="number">0</span>]][<span class="number">0</span>][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">?heoret?cal</span></span><br><span class="line"><span class="comment">c?mputer</span></span><br><span class="line"><span class="comment">?cience</span></span><br><span class="line"><span class="comment">jagiellonian</span></span><br><span class="line"><span class="comment">?niversity</span></span><br><span class="line"><span class="comment">kra?ow</span></span><br><span class="line"><span class="comment">?</span></span><br><span class="line"><span class="comment">b</span></span><br><span class="line"><span class="comment">c</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>直接暴力出所有的情况</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> sum,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sum&gt;<span class="number">400</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="comment">//if (vis[sum]) return ;</span></span><br><span class="line">    <span class="comment">//if (sum==30 ) cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (d&gt;<span class="number">6</span>) <span class="keyword">return</span> ;</span><br><span class="line">    vis[sum]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[x+<span class="number">1</span>][y]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dfs(x+<span class="number">1</span>,y,sum*<span class="number">10</span>+a[x+<span class="number">1</span>][y],d+<span class="number">1</span>);</span><br><span class="line">        dfs(x+<span class="number">1</span>,y,sum,d+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[x][y+<span class="number">1</span>]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dfs(x,y+<span class="number">1</span>,sum*<span class="number">10</span>+a[x][y+<span class="number">1</span>],d+<span class="number">1</span>);</span><br><span class="line">        dfs(x,y+<span class="number">1</span>,sum,d+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(x,y,sum*<span class="number">10</span>+a[x][y],d+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">3</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">4</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">5</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">6</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">7</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">8</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">9</span>;</span><br><span class="line">    a[<span class="number">4</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k,x=<span class="number">-1</span>,y=<span class="number">-1</span>,ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) &#123;x=i; <span class="keyword">break</span>;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k; i&lt;=k+<span class="number">1000</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) &#123;y=i; <span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span> (x!=<span class="number">-1</span>) ans=x;</span><br><span class="line">        <span class="keyword">if</span> (y!=<span class="number">-1</span> &amp;&amp; (<span class="built_in">abs</span>(ans-k)&gt;<span class="built_in">abs</span>(y-k) || x==<span class="number">-1</span>))</span><br><span class="line">            ans=y;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>队友AC</p><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>补题</p><p>博弈DP</p><p>首先我们设f[i] [j] 代表前i个商品，还剩j次魔法的最大收益</p><p>根据博弈的性质我们可以列出这个方程</p><script type="math/tex; mode=display">f[i][j]=max(f[i-1][j],min(a[i].x-a[i].y,f[i-1][j-1]-a[i].y));</script><p>我需要对利益从大到小排序，但是我到目前为止，还是不能非常理解，只能说懂个大概？到时候理解了补上吧</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span>  f[<span class="number">150005</span>][<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;a[<span class="number">150005</span>];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a,Node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">        sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][<span class="number">0</span>]=max(f[i<span class="number">-1</span>][<span class="number">0</span>],a[i].x-a[i].y);</span><br><span class="line">            <span class="comment">//cout&lt;&lt;f[i][0]&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=k; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=max(f[i<span class="number">-1</span>][j],min(a[i].x-a[i].y,f[i<span class="number">-1</span>][j<span class="number">-1</span>]-a[i].y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[n][k]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>赛中AC</p><p>我们考虑对于每个时间段进行离散化，然后进行区间DP即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 605</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],c[N],d[N],posa[N],posb[N];</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a[i],&amp;b[i],&amp;d[i]);</span><br><span class="line">            c[++t]=a[i];</span><br><span class="line">            c[++t]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;A&quot;&lt;&lt;endl;</span></span><br><span class="line">        sort(c+<span class="number">1</span>,c+t+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> m=unique(c+<span class="number">1</span>,c+t+<span class="number">1</span>)-(c+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">        <span class="comment">//cout&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">//for (int i=1; i&lt;=m; i++) cout&lt;&lt;c[i]&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            posa[i]=lower_bound(c+<span class="number">1</span>,c+m+<span class="number">1</span>,a[i])-c;</span><br><span class="line">            posb[i]=lower_bound(c+<span class="number">1</span>,c+m+<span class="number">1</span>,b[i])-c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> len=<span class="number">1</span>; len&lt;=m; len++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i+len<span class="number">-1</span>&lt;=m; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i&lt;=posa[k] &amp;&amp; posb[k]&lt;=j &amp;&amp; d[k]&gt;d[pos]) pos=k;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (pos==<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[i][j]=<span class="number">0</span>; <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=posa[pos]; k&lt;=posb[pos]; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[i][j]=min(f[i][j],f[i][k<span class="number">-1</span>]+f[k+<span class="number">1</span>][j]+d[pos]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[<span class="number">1</span>][m]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科大讯飞杯第18届上海大学程序设计联赛春季赛暨高校网络友谊赛</title>
      <link href="/2020/08/07/acm-4-yue-xun-lian/ke-da-xun-fei-bei-shang-hai-da-xue-18th/"/>
      <url>/2020/08/07/acm-4-yue-xun-lian/ke-da-xun-fei-bei-shang-hai-da-xue-18th/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>比赛平台：牛客</p><p>Rank：29</p><p>现场AC：8</p><p>补题：0    </p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>水题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=a[<span class="number">1</span>]+a[i];</span><br><span class="line">        <span class="keyword">int</span> y=sum-x;</span><br><span class="line">        ans=min(ans,<span class="built_in">abs</span>(x-y));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>结构体自定义排序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 105</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">double</span> z;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">friend</span> <span class="keyword">operator</span> &lt; (Node a,Node b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a.x==b.x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a.z==b.z)</span><br><span class="line">                <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> a.z&gt;b.z;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="keyword">double</span> z;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        <span class="keyword">if</span> (z&gt;=<span class="number">38</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ++tot; a[tot].x=x; a[tot].y=y;</span><br><span class="line">            a[tot].z=z;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+tot+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;tot&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=tot; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %.1f\n&quot;</span>,a[i].x,a[i].y,a[i].z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>发现只有完全相等才是-1，否则就是最长得那个字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">strlen</span>(b+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (n==m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> bo=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="keyword">if</span> (a[i]!=b[i]) bo=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (bo) <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;max(n,m)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>构造题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;11\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=t; j++) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">            t++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>每一个都会被吃，于是直接计算答案即可，不存在什么最优策略，结果都一样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span>  x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line">        ans=ans+x;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans<span class="number">-1ll</span>*(n)*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>模拟一下，用java写应该会更加快，太久没写java了，下次可以补一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="comment">//2000.5.1 周一</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> y,m,d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;y,&amp;m,&amp;d);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2001</span>;i&lt;=y;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; i%<span class="number">100</span>!=<span class="number">0</span>) || (i%<span class="number">400</span>==<span class="number">0</span>))sum=(sum+<span class="number">366</span>)%<span class="number">7</span>;</span><br><span class="line">            <span class="keyword">else</span> sum=(sum+<span class="number">365</span>)%<span class="number">7</span>;</span><br><span class="line">            <span class="comment">//printf(&quot;%d\n&quot;,sum);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">if</span>(!sum)tmp=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-sum+<span class="number">1</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">5</span> || (m==<span class="number">5</span> &amp;&amp; d&lt;tmp))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Mother&#x27;s Day: May %d&quot;</span>,tmp);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp=(sum+<span class="number">31</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(!tmp)tmp=<span class="number">15</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-tmp+<span class="number">1</span>+<span class="number">14</span>;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">6</span> || (m==<span class="number">6</span> &amp;&amp; d&lt;tmp))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Father&#x27;s Day: June %d&quot;</span>,tmp);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        y++;</span><br><span class="line">        <span class="keyword">if</span>((y%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; y%<span class="number">100</span>!=<span class="number">0</span>) || (y%<span class="number">400</span>==<span class="number">0</span>))sum=(sum+<span class="number">366</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">else</span> sum=(sum+<span class="number">365</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(!sum)tmp=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-sum+<span class="number">1</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Mother&#x27;s Day: May %d&quot;</span>,tmp);</span><br><span class="line">        <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>补题</p><ul><li>tag ：虚树+DP</li><li>考虑不同deep不会影响，于是直接DP即可</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,root;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,nxt;</span><br><span class="line">&#125;E[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot,head[N];</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">dfn_t</span>,dfn[N],max_deep,deep[N];</span><br><span class="line"><span class="keyword">int</span> f[N][<span class="number">22</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[N],top;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[N];</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dfn[x]&lt;dfn[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ++tot; E[tot]=(Edge)&#123;u,v,head[u]&#125;; head[u]=tot;</span><br><span class="line">    ++tot; E[tot]=(Edge)&#123;v,u,head[v]&#125;; head[v]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">    v[x].push_back(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    deep[x]=deep[fa]+<span class="number">1</span>;</span><br><span class="line">    max_deep=max(max_deep,deep[x]);</span><br><span class="line">    dfn[x]=<span class="keyword">dfn_t</span>++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; (<span class="number">1</span>&lt;&lt;i)&lt;=deep[x]; i++)</span><br><span class="line">        f[x][i]=f[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p=head[x]; p; p=E[p].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> son=E[p].v;</span><br><span class="line">        <span class="keyword">if</span> (son==fa) <span class="keyword">continue</span>;</span><br><span class="line">        f[son][<span class="number">0</span>]=x;</span><br><span class="line"></span><br><span class="line">        dfs(son,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (deep[x]&lt;deep[y]) swap(x,y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (deep[f[x][i]]&gt;=deep[y]) x=f[x][i];</span><br><span class="line">    <span class="keyword">if</span> (x==y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&gt;<span class="number">1</span>) <span class="keyword">return</span> x<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span>  <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (v[x].size()==<span class="number">0</span>) <span class="keyword">return</span> a[x];</span><br><span class="line">    <span class="keyword">int</span> sz=v[x].size();</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> y=v[x][i];</span><br><span class="line">        ll d=deep[y]-deep[x];</span><br><span class="line">        ll tmp=dp(y);</span><br><span class="line">        <span class="keyword">if</span> (tmp&gt;<span class="number">1</span>) res=res+max(<span class="number">1ll</span>,tmp-d);</span><br><span class="line">        <span class="keyword">else</span> res=res+tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    v[x].clear();</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot;              &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (top==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[++top]=x; <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> lca=LCA(s[top],x);</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; insert &quot;&lt;&lt;lca&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span> &amp;&amp; dfn[s[top<span class="number">-1</span>]]&gt;dfn[lca])</span><br><span class="line">    &#123;</span><br><span class="line">        ins2(s[top<span class="number">-1</span>],s[top]); top--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dfn[lca]&lt;dfn[s[top]]) ins2(lca,s[top--]);</span><br><span class="line">    <span class="keyword">if</span> (!top || s[top]!=lca) s[++top]=lca;</span><br><span class="line">    s[++top]=x;</span><br><span class="line">    <span class="comment">/*if (top==1) &#123;s[++top]=x; return ;&#125;</span></span><br><span class="line"><span class="comment">    int lca=LCA(x,s[top]);</span></span><br><span class="line"><span class="comment">    if (lca==s[top]) return ;</span></span><br><span class="line"><span class="comment">    while (top&gt;1 &amp;&amp; dfn[s[top-1]]&gt;dfn[lca])</span></span><br><span class="line"><span class="comment">        ins2(s[top-1],s[top]),top--;</span></span><br><span class="line"><span class="comment">    if (dfn[lca]&lt;dfn[s[top]]) ins2(lca,s[top--]);</span></span><br><span class="line"><span class="comment">    if (!top || (s[top]!=lca)) s[++top]=lca;</span></span><br><span class="line"><span class="comment">    s[++top]=x;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        ins(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dfn_t</span>=<span class="number">0</span>;</span><br><span class="line">    dfs(root,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[deep[i]].push_back(i);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;&quot;   &quot;&lt;&lt;deep[i]&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=max_deep; i++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;dsds&quot;&lt;&lt;endl;</span></span><br><span class="line">         sort(b[i].begin(),b[i].end(),cmp);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">int</span> sz=b[i].size();</span><br><span class="line"></span><br><span class="line">         s[top=<span class="number">1</span>]=root;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;                 &quot;&lt;&lt;sz&lt;&lt;endl;</span></span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;sz; j++)</span><br><span class="line">         &#123;</span><br><span class="line">             insert(b[i][j]);</span><br><span class="line">             <span class="comment">//cout&lt;&lt;&quot;          &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;b[i][j]&lt;&lt;endl;</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span> (top&gt;<span class="number">1</span>) ins2(s[top<span class="number">-1</span>],s[top]),top--;</span><br><span class="line">         ll tt=dp(root);</span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;                                    &quot;&lt;&lt;tt&lt;&lt;endl;</span></span><br><span class="line">         <span class="keyword">if</span> (tt) sum+=max(<span class="number">1ll</span>,tt<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;a[root]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (a[root]) sum+=max(<span class="number">1</span>,a[root]<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><ul><li>考虑贪心，枚举每一位，从大到小选择</li><li>如果当前位选择X，之前得余数为pre，目前相加余数为y，仍然有余数为0a张，余数为1的b张，余数为2的c张。</li><li>我们先从a，b，c中挑选最小组合和y匹配到余数为0，假设当前还剩余x位需要匹配，余数为0a张，余数为1b张，余数为2c张</li><li>我们用一个pb函数验证一下，我们可以枚举余数为1和余数为2的组合，不难发现最优解肯定在min（b，c）的一个范围内。于是时间复杂度不会很大。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> A,<span class="keyword">int</span> B,<span class="keyword">int</span> C)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot;                &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;A&lt;&lt;&quot; &quot;&lt;&lt;B&lt;&lt;&quot; &quot;&lt;&lt;C&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (x&lt;<span class="number">0</span> || A&lt;<span class="number">0</span> || B&lt;<span class="number">0</span> || C&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp=min(x/<span class="number">2</span>,min(B,C));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=tmp; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> xx=x<span class="number">-2</span>*i;</span><br><span class="line">        <span class="keyword">int</span> BB=B-i,CC=C-i;</span><br><span class="line">        BB=BB/<span class="number">3</span>; CC=CC/<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t1=xx/<span class="number">3</span>,t2=xx%<span class="number">3</span>;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;tmp&lt;&lt;&quot; &quot;&lt;&lt;t1&lt;&lt;&quot; &quot;&lt;&lt;t2&lt;&lt;endl;</span></span><br><span class="line">        t1=(t1-min(t1,BB+CC))*<span class="number">3</span>+t2;</span><br><span class="line">        <span class="keyword">if</span> (t1&lt;=A) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) a[i]=b[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">        n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            a[x]++;</span><br><span class="line">            b[x%<span class="number">3</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">9</span>;</span><br><span class="line">        <span class="keyword">bool</span> bo=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[i]=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (ans[i]==<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x&gt;=<span class="number">0</span> &amp;&amp; a[x]&lt;=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x--; <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (x==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">int</span> tmp=(sum+x)%<span class="number">3</span>;</span><br><span class="line">                <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">                b[x%<span class="number">3</span>]--;</span><br><span class="line">               <span class="comment">// cout&lt;&lt;tmp&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span> (tmp==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (tmp==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;&quot; fuck &quot;&lt;&lt;endl;</span></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-1</span>,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>]<span class="number">-1</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-2</span>,b[<span class="number">0</span>],b[<span class="number">1</span>]<span class="number">-2</span>,b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (tmp==<span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;&quot;        fuck  &quot;&lt;&lt;endl;</span></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-1</span>,b[<span class="number">0</span>],b[<span class="number">1</span>]<span class="number">-1</span>,b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-2</span>,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>]<span class="number">-2</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                b[x%<span class="number">3</span>]++;</span><br><span class="line">               <span class="comment">// cout&lt;&lt;&quot; flag == &quot;&lt;&lt;flag&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans[i]=x; a[x]--; b[x%<span class="number">3</span>]--;</span><br><span class="line">                    sum=(sum+x)%<span class="number">3</span>;</span><br><span class="line">                   <span class="comment">// cout&lt;&lt;&quot;             &quot;&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>  x--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ans[i]==<span class="number">-1</span> || (i&gt;=<span class="number">2</span> &amp;&amp; ans[<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; ans[<span class="number">2</span>]==<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                bo=<span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!bo) <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans[i]);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">9695863108 9</span></span><br><span class="line"><span class="comment">998866530</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3317358949 9</span></span><br><span class="line"><span class="comment">3264898906 1</span></span><br><span class="line"><span class="comment">3909403429 6</span></span><br><span class="line"><span class="comment">9874469304 2</span></span><br><span class="line"><span class="comment">5780072001 9</span></span><br><span class="line"><span class="comment">9695863108 9</span></span><br><span class="line"><span class="comment">5105937054 1</span></span><br><span class="line"><span class="comment">8306007864 3</span></span><br><span class="line"><span class="comment">0600837437 2</span></span><br><span class="line"><span class="comment">3598543576 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>待补</p><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>待补</p><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>待补</p><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>二分加网络流即可</p><ul><li>考虑二分答案</li><li>于是我们可以知道对于每一天可以完成多少事件</li><li>于是我们如下建图<ul><li>源点向每个事件连容量为c[i]的边</li><li>每个事件向对应的天数连容量为INF的边</li><li>每天向源点连容量为  每天可以完成多少事件的容量</li></ul></li><li>跑最大流验证即可</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll sum;</span><br><span class="line"><span class="keyword">int</span> n,e;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1005</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ll tol,head[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll to,next,w;</span><br><span class="line">&#125;a[maxn*<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">tol=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(ll u,ll v,ll w)</span></span>&#123;</span><br><span class="line">    a[++tol]=(edge)&#123;v,head[u],w&#125;;head[u]=tol;</span><br><span class="line">    a[++tol]=(edge)&#123;u,head[v],<span class="number">0</span>&#125;;head[v]=tol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll dep[<span class="number">10010</span>],cur[<span class="number">10010</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;ll&gt;q;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">bfs</span><span class="params">(ll s,ll t)</span></span>&#123;</span><br><span class="line">    ll i,u,v;</span><br><span class="line">    <span class="keyword">for</span>(i=s;i&lt;=t;i++) dep[i]=<span class="number">-1</span>,cur[i]=head[i];</span><br><span class="line">    q.push(s);dep[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u=q.front();q.pop();</span><br><span class="line">        <span class="keyword">for</span>(i=head[u];~i;i=a[i].next)&#123;</span><br><span class="line">            v=a[i].to;<span class="keyword">if</span>(~dep[v]||!a[i].w) <span class="keyword">continue</span>;</span><br><span class="line">            dep[v]=dep[u]+<span class="number">1</span>;q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~dep[t];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u,ll t,ll lim)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(u==t||!lim) <span class="keyword">return</span> lim;</span><br><span class="line">    ll i,v,f,flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=cur[u];~i;i=a[i].next)&#123;</span><br><span class="line">        v=a[i].to;cur[u]=i;</span><br><span class="line">        <span class="keyword">if</span>((dep[v]==dep[u]+<span class="number">1</span>)&amp;&amp;(f=dfs(v,t,min(lim,a[i].w))))&#123;</span><br><span class="line">            a[i].w-=f;a[i^<span class="number">1</span>].w+=f;</span><br><span class="line">            flow+=f;lim-=f;</span><br><span class="line">            <span class="keyword">if</span>(!lim) <span class="keyword">return</span> flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">dinic</span><span class="params">(ll s,ll t)</span></span>&#123;</span><br><span class="line">    ll re=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs(s,t)) re+=dfs(s,t,INF);</span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>,t=n+<span class="number">7</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(s,i,c[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m[i][<span class="number">0</span>]; j++)</span><br><span class="line">            add(i,m[i][j]+n,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll tmp=x/<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;=x%<span class="number">7</span>) tmp++;</span><br><span class="line">        tmp=tmp*e;</span><br><span class="line">        add(n+i,t,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dinic(s,t)==sum) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;e);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i]); sum+=c[i];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m[i][<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m[i][<span class="number">0</span>]; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (pd(mid)) ans=mid,r=mid<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020湖南多校round1-NWERC2014</title>
      <link href="/2020/08/07/acm-4-yue-xun-lian/2020-hu-nan-duo-xiao-round1-nwerc2014/"/>
      <url>/2020/08/07/acm-4-yue-xun-lian/2020-hu-nan-duo-xiao-round1-nwerc2014/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>虚拟测试：rank8</p><p>AC：7</p><p>补题：1</p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>简单DP</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1ll&lt;&lt;32</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line">ll sum[N];</span><br><span class="line">ll f[N][<span class="number">22</span>];</span><br><span class="line"><span class="function">ll <span class="title">get</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll tmp=sum[j]-sum[i];</span><br><span class="line">    ll ans=tmp/<span class="number">10</span>*<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (tmp%<span class="number">10</span>&gt;=<span class="number">5</span>) ans+=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+(<span class="keyword">long</span> <span class="keyword">long</span> )a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=m+<span class="number">1</span>; j++)</span><br><span class="line">        f[i][j]=inf;</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m+<span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;i; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=min(f[i][j],f[k][j<span class="number">-1</span>]+get(k,i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;f[n][m+<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>队友YZ补题AC</p><p>拓扑排序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> state[maxn];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> du[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">char</span> op;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> ( op==<span class="string">&#x27;R&#x27;</span> ) state[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( op==<span class="string">&#x27;L&#x27;</span> ) state[i] = <span class="number">1</span>;</span><br><span class="line">        G[i].push_back(l);</span><br><span class="line">        G[i].push_back(r);</span><br><span class="line">        du[l]++; du[r]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">    num[<span class="number">1</span>] = m;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) <span class="keyword">if</span> ( du[i]==<span class="number">0</span> ) Q.push(i);</span><br><span class="line">    <span class="keyword">while</span> ( !Q.empty() ) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">int</span> t = num[x]/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> ( num[x]%<span class="number">2</span>==<span class="number">1</span> ) t ++;</span><br><span class="line">        <span class="keyword">int</span> d = num[x]/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> ( state[x]==<span class="number">0</span> ) &#123;</span><br><span class="line">            num[ G[x][<span class="number">0</span>] ] += d;</span><br><span class="line">            num[ G[x][<span class="number">1</span>] ] += t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( state[x]==<span class="number">1</span> ) &#123;</span><br><span class="line">            num[ G[x][<span class="number">0</span>] ] += t;</span><br><span class="line">            num[ G[x][<span class="number">1</span>] ] += d;</span><br><span class="line">        &#125;</span><br><span class="line">        du[ G[x][<span class="number">0</span>] ] --;</span><br><span class="line">        <span class="keyword">if</span> ( G[x][<span class="number">0</span>]!=<span class="number">0</span> &amp;&amp; du[ G[x][<span class="number">0</span>] ]==<span class="number">0</span> ) Q.push( G[x][<span class="number">0</span>] );</span><br><span class="line">        du[ G[x][<span class="number">1</span>] ] --;</span><br><span class="line">        <span class="keyword">if</span> ( G[x][<span class="number">1</span>]!=<span class="number">0</span> &amp;&amp; du[ G[x][<span class="number">1</span>] ]==<span class="number">0</span> ) Q.push( G[x][<span class="number">1</span>] );</span><br><span class="line">        state[x] = ( state[x] + num[x]%<span class="number">2</span> )%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( state[i]==<span class="number">0</span> ) <span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;R&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;L&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>英语阅读题+三分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> n,p,s,v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-7</span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n*<span class="built_in">pow</span>(log2(n),c*<span class="built_in">sqrt</span>(<span class="number">2.0</span>))/(p*<span class="number">1e9</span>)+(<span class="number">1</span>+<span class="number">1.0</span>/c)*s/v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>,&amp;n,&amp;p,&amp;s,&amp;v);</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">while</span> (r-l&gt;eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> lmid=(r+l)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">double</span> rmid=(lmid+r)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">if</span> (calc(lmid)&lt;=calc(rmid)) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;l&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.9f %.9f\n&quot;</span>,calc(l),l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll ;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> abs(x)  (((x)&gt;0)?(x):-(x))</span></span><br><span class="line"><span class="keyword">const</span> ll INF = <span class="number">1e18</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    ll x, y;</span><br><span class="line">    Point(ll x=<span class="number">0</span>, ll y=<span class="number">0</span>):x(x),y(y) &#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function">mt19937 <span class="title">mrand</span><span class="params">(time(<span class="number">0</span>))</span></span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;Point&gt; Polygon;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>+ (Vector A, Vector B) &#123; <span class="keyword">return</span> Vector(A.x + B.x, A.y + B.y); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>- (Point A, Point B) &#123; <span class="keyword">return</span> Vector(A.x - B.x, A.y - B.y); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>* (Vector A, ll p) &#123; <span class="keyword">return</span> Vector(A.x * p, A.y * p); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>/ (Vector A, ll p) &#123; <span class="keyword">return</span> Vector(A.x / p, A.y / p); &#125;</span><br><span class="line"><span class="function">ll <span class="title">Cross3</span><span class="params">(Point p0,Point p1,Point p2)</span>  </span>&#123;<span class="keyword">return</span> (p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);&#125;</span><br><span class="line"><span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    ll n,p,tim=<span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;p);</span><br><span class="line">    p=ceill(n*p*<span class="number">1.0</span>/<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i].read();</span><br><span class="line">    <span class="keyword">while</span>(!fg&amp;&amp;tim--) &#123;</span><br><span class="line">        <span class="keyword">int</span> x=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> y=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(x==y) y=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(Cross3(a[i],a[x],a[y])==<span class="number">0</span>) tot++;</span><br><span class="line">        <span class="keyword">if</span>(tot&gt;=p) fg=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fg) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>补题</p><ul><li>tag： 曼哈顿距离转切比雪夫距离之后三分套三分</li><li>注意事项<ul><li>整数三分的时候需要注意边界问题</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1ll&lt;&lt;60</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line">ll x[N],y[N];</span><br><span class="line">ll sumx[N],sumy[N];</span><br><span class="line">ll up,down,lef,rig;</span><br><span class="line">ll ans=inf;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将一个点(x,y)的坐标变为(x+y,x−y)后,原坐标系中的曼哈顿距离 = 新坐标系中的切比雪夫距离</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">将一个点(x,y)的坐标变为(x+y)/2,(x−y)/2) 后,原坐标系中的切比雪夫距离 = 新坐标系中的曼哈顿距离</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">ll <span class="title">getans2</span><span class="params">(ll X,ll Y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//  cout&lt;&lt;&quot;       &quot;&lt;&lt;X&lt;&lt;&quot; &quot;&lt;&lt;Y&lt;&lt;endl;</span></span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    ll pos;</span><br><span class="line">    pos=lower_bound(x+<span class="number">1</span>,x+n+<span class="number">1</span>,X)-x<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    res+=X*pos-sumx[pos];</span><br><span class="line">    res+=sumx[n]-sumx[pos]-X*(n-pos);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;X&lt;&lt;&quot; &quot;&lt;&lt;pos&lt;&lt;endl;</span></span><br><span class="line">    pos=lower_bound(y+<span class="number">1</span>,y+n+<span class="number">1</span>,Y)-y<span class="number">-1</span>;</span><br><span class="line">    res+=Y*pos-sumy[pos];</span><br><span class="line">    res+=sumy[n]-sumy[pos]-Y*(n-pos);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// ll ress=0;</span></span><br><span class="line">    <span class="comment">//for (int i=1; i&lt;=n; i++) ress=ress+abs(X-x[i])+abs(Y-y[i]);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;ress&lt;&lt;&quot; &quot;&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getans</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ll r=min(x-down,rig-x),l=max(x-up,lef-x);</span><br><span class="line"></span><br><span class="line">    ll res=inf;</span><br><span class="line">    <span class="keyword">while</span> (l+<span class="number">2</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        ll lmid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        ll rmid=(lmid+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;               &quot;&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;&quot; &quot;&lt;&lt;lmid&lt;&lt;&quot; &quot;&lt;&lt;rmid&lt;&lt;endl;</span></span><br><span class="line">        ll anslmid=getans2(x,lmid);</span><br><span class="line">        ll ansrmid=getans2(x,rmid);</span><br><span class="line">        res=min(res,min(anslmid,ansrmid));</span><br><span class="line">        <span class="keyword">if</span> (anslmid&lt;ansrmid) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=l; i&lt;=r; i++) res=min(res,getans2(x,i));</span><br><span class="line">    ans=min(ans,res);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;m);</span><br><span class="line">    up=rig=inf;</span><br><span class="line">    down=lef=-inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        up=min(up,x[i]-y[i]+m);</span><br><span class="line">        down=max(down,x[i]-y[i]-m);</span><br><span class="line"></span><br><span class="line">        rig=min(rig,x[i]+y[i]+m);</span><br><span class="line">        lef=max(lef,x[i]+y[i]-m);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(x+<span class="number">1</span>,x+n+<span class="number">1</span>);</span><br><span class="line">    sort(y+<span class="number">1</span>,y+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sumx[i]=sumx[i<span class="number">-1</span>]+x[i],sumy[i]=sumy[i<span class="number">-1</span>]+y[i];</span><br><span class="line">    <span class="keyword">if</span> (down&gt;up || lef&gt;rig)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll l=(lef+down)/<span class="number">2</span>,r=(rig+up)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (l+<span class="number">2</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl;</span></span><br><span class="line">        ll lmid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        ll rmid=(lmid+r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getans(lmid)&lt;getans(rmid)) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=l; i&lt;=r; i++) getans(i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Property %d: This property will begin eroding in year %d.\n&quot;</span>, i, cy(X,Y));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,l=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> to[N&lt;&lt;<span class="number">1</span>],h[N&lt;&lt;<span class="number">1</span>],s[N],a[N],b[N],d[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hah</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    to[++l]=y,h[l]=s[x],s[x]=l;</span><br><span class="line">    to[++l]=x,h[l]=s[y],s[y]=l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> Fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!Fa)&#123;</span><br><span class="line">        a[x]=++tot;</span><br><span class="line">        b[x]=++tot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> b[x]=++tot;</span><br><span class="line">    <span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=s[x];i;i=h[i])&#123;</span><br><span class="line">        <span class="keyword">if</span>(to[i]!=Fa)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!Fa &amp;&amp; !fg)&#123;</span><br><span class="line">                a[to[i]]=a[x];</span><br><span class="line">                fg=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> a[to[i]]=b[x];</span><br><span class="line">            dfs(to[i],x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1 2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1 2\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        hah(x,y);</span><br><span class="line">        d[x]++,d[y]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            dfs(i,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,a[i],b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>折半搜索</p><p>时间复杂度C(N,2)*(N/2)!</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line">ll a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> bin[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">3</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> ,<span class="keyword">int</span> &gt;f[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">bool</span> bo;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x&amp;bin[i]) res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (res==n/<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> nowsta,ll tot,<span class="keyword">int</span> type,<span class="keyword">int</span> res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bo) <span class="keyword">return</span> ;</span><br><span class="line">    nowsta|=bin[x];</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;                    &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;nowsta&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;&quot; &quot;&lt;&lt;type&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (res==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;nowsta&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;&quot; &quot;&lt;&lt;type&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (type==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((s[type]&amp;bin[i])) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (f[i][m-tot-a[x][i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    bo=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            f[x][tot]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nowsta&amp;bin[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(s[type]&amp;bin[i])) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(i,nowsta,tot+a[x][i],type,res<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bo=<span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i][j]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>][<span class="number">1</span>]*<span class="number">2</span>==m) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;dsds&quot;&lt;&lt;endl;</span></span><br><span class="line">    bin[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bin[i]=bin[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sta=(bin[n]<span class="number">-1</span><span class="number">-1</span>);<span class="comment">// cout&lt;&lt;sta&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=sta<span class="number">-1</span>; i; i=((i<span class="number">-1</span>)&amp;sta))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//  cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (pd(i)) <span class="keyword">continue</span>;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot;         &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;((i-1)&amp;sta)&lt;&lt;endl;</span></span><br><span class="line">        s[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        s[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (bin[j]&amp;i) s[<span class="number">1</span>]|=bin[j];</span><br><span class="line">            <span class="keyword">else</span> s[<span class="number">2</span>]|=bin[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;         &quot;&lt;&lt;s[1]&lt;&lt;&quot; &quot;&lt;&lt;s[2]&lt;&lt;endl;</span></span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,n/<span class="number">2</span>);</span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,n<span class="number">-1</span>-n/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (bo) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) f[j].clear();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (bo) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="built_in">string</span> b[N],a[N];</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="built_in">string</span>&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m,t,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i],s.insert(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">if</span>(s.find(b[i])!=s.end()) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            s.erase(s.lower_bound(b[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2010</span>;</span><br><span class="line">ll a[N];ll n,s,t;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;vis;</span><br><span class="line"><span class="built_in">multiset</span>&lt;ll&gt;st;</span><br><span class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll x)</span> </span>&#123;</span><br><span class="line">    ll cost=<span class="number">0</span>;</span><br><span class="line">    st.clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) st.insert(a[i]);</span><br><span class="line">    <span class="keyword">while</span>(!st.empty()) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st.lower_bound(x)==st.end()) &#123;</span><br><span class="line">            cost+=s-x;x=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">auto</span> p=st.lower_bound(x);</span><br><span class="line">            cost+=((*p)-x);</span><br><span class="line">            cost+=t;</span><br><span class="line">            x=((*p)+t)%s;</span><br><span class="line">            st.erase(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf(&quot;x:%d cost:%d take%d\n&quot;,x,cost,take);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll mn=<span class="number">4e18</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//枚举起点</span></span><br><span class="line">        mn=min(mn,cal(a[i]));</span><br><span class="line">    <span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll mx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//枚举起点</span></span><br><span class="line">        mx=max(mx,cal((a[i]+<span class="number">1</span>)%s));</span><br><span class="line">    <span class="keyword">return</span> mx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    a[n+<span class="number">1</span>]=a[<span class="number">1</span>]+s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n+<span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        ll pre=cal(a[i]);</span><br><span class="line">        sum+=pre*(a[i]-a[i<span class="number">-1</span>])+<span class="number">1ll</span>*(a[i]-a[i<span class="number">-1</span>])*(a[i]-a[i<span class="number">-1</span>]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=__gcd(sum,s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n%lld\n%lld/%lld\n&quot;</span>,mn(),mx(),sum/gcd,s/gcd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
