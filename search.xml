<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络复习大纲</title>
      <link href="/2020/09/19/xue-ke-fu-xi/ji-suan-ji-wang-luo/"/>
      <url>/2020/09/19/xue-ke-fu-xi/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机网络复习纲要"><a href="#计算机网络复习纲要" class="headerlink" title="计算机网络复习纲要"></a>计算机网络复习纲要</h1><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><ul><li>国际标准化组织ISO制定的开放系统互连基本参考模型共有 （<strong>7层</strong>）</li><li>计算机网络中广泛使用的交换技术是 （<strong>分组交换</strong>）</li><li>下列交换方式中实时性最好的是（<strong>C</strong>）<ul><li>数据报</li><li>虚电路</li><li><strong>电路交换</strong></li></ul></li><li>所谓“三网合一”中的“三网”是指（<strong>电信网、广播电视网、计算机网</strong>）</li><li>通信子网不包括（<strong>传输层</strong>）</li><li>网络协议的三要素是（<strong>语法、语义、同步</strong>）</li><li>拓扑设计是建设计算机网络的第一步,它对网络的影响主要表现在（<strong>系统可靠性</strong>）</li><li>在OSI参考模型中,以下说法正确的是（<strong>对等层之间的通信通过协议进行</strong>）</li><li>计算机网络中为进行数据交换而建立的规则、标准或约定的集合称为（<strong>网络协议</strong>）</li><li>为什么网络协议族是分层的？<ul><li>各层之间是独立的</li><li>灵活性好</li><li>结构上可以分割开</li><li>易于实现和维护</li><li>能促进标准化工作</li></ul></li><li>为什么TCP/IP能成为事实上的国际标准?<ul><li>因为TCP/IP比OSI实现起来更容易</li></ul></li><li>习题<ul><li>10、11、15、16、17、18、19</li></ul></li></ul><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><ul><li>码元究竟是（<strong>数字信号的波形</strong>）</li><li>对于香农公式错误的是（<strong>实际上信道能够达到的信息传输速率要比香农的极限传输速率差不多</strong>）</li><li>通过改变载波信号的振幅来表示数字0、1的模拟数据编码方法,称作( <strong>ASK</strong>)</li><li>采用T来表示（<strong>1024G</strong>）</li><li>关于光纤的叙述不正确的是（<strong>容易维护和维修</strong>）</li><li>在数据通信系统中，所谓透明性是指（<strong>用户不必了解系统工作的细节</strong>）</li><li>OSI模型的物理层负责下列哪一种功能（<strong>定义连接到介质的特征</strong>）</li><li>双绞线由两条相互绝缘的导线绞合而成，下列关于双绞线的叙述，不正确的是（<strong>不易受外部干扰、误码率低</strong>）</li><li></li><li>习题<ul><li>7、8、9、11、12、16</li></ul></li></ul><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><ul><li>数据链路层进行的流量控制是指（<strong>相邻节点之间</strong>）</li><li>透明传输是数据链路层的基本功能，所谓透明性是指（<strong>传输的数据内容、格式及编码无限</strong>）</li><li>使用字符填充的首位定界符法，为了达到数据的透明性，采用（<strong>转义字符填充法 </strong>）</li><li>局域网数据链路层分为（<strong>MAC子层和LLC子层</strong>）</li><li>逻辑链路控制子层提供了（<strong>无连LLC、面向连接LLC</strong>）</li><li>网络体系结构中数据链路层的数据处理单元是（<strong>帧</strong>）</li><li>数据帧的基本格式是（<strong>首部+数据+尾部</strong>）</li><li>不再支持半双工数据传输，所有传输都以全双工进行的以太网技术是（<strong>万兆以太网</strong>）</li><li>若HDLC帧的数据段中出现比特串“010111110101”，为解决透明传输，则比特填充后的输出为（01011111<strong>0</strong>0101）</li><li>CSMA/CD 以太网中，发生冲突后，重发前的退避时间最大是（<strong>1023个时间片</strong>）</li><li>不属于光纤用户网的特点是（<strong>抗干扰能力差</strong>）</li><li>习题<ul><li>06、33</li></ul></li></ul><h3 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h3><ul><li>不属于IP层实现的功能（<strong>D</strong>）<ul><li>尽力而为的不可靠传输服务</li><li>数据报的路由选择和转发</li><li>数据报的分段与重组</li><li><strong>确定主机进程间的接口</strong></li></ul></li><li>下列说法错误的是（<strong>D</strong>）<ul><li>利用多个以太网交换机组成的局域网不能出现环</li><li>以太网交换机中端口的速率可能不同</li><li>在交换式以太网中可以划分VLAN</li><li>以太网交换机可以对通过的信息负载进行过滤</li></ul></li><li>二层交换机中的端口/MAC地址映射表是（<strong>交换机在数据转发过程中通过学习动态建立的</strong>）</li><li>路由器中的路由表包含（<strong>目的网络的下一跳路由信息</strong>）</li><li>IPV6的编址长度是（<strong>16字节</strong>）</li><li>IP地址的合法性</li><li>标准分类IP地址202.140.36.88的主机号（<strong>88</strong>）</li><li>以太网数据帧的最小载荷是（<strong>46字节</strong>）</li><li>对地址转换协议（ARP）描述正确的是（<strong>B</strong>）<ul><li>能隔离冲突域</li><li>只工作在数据链路层</li><li>通过VLAN设置能隔离广播域</li><li>VLAN之间通信需要经过三层路由</li></ul></li><li>若某主机的IP地址及网络前缀为192.168.5.121/29，则该主机所在子网的子网地址为（ <strong>192.168.5.120</strong>）</li><li>下面IP地址中不合法的是 （ <strong>172.21.10.256</strong>）</li><li>下列IP地址中，属于C类的是(<strong>202.113.16.8</strong>)</li><li>标准分类IP地址205.140.36.88的主机号是（<strong>88</strong> ）</li><li>访问因特网的每台主机都需要分配IP地址（假定采用缺省子网掩码），把下列哪个IP地址分配给主机是正确的(<em>**</em>)</li><li>下列对于IP分组的分片和重组的描述正确的是（<strong>IP分组可以被路径中的路由器分片，并在目的主机进行重组</strong>）</li><li>C类地址的最高三个比特位，依次是（<strong>110</strong>）</li><li>下列属于B类IP地址（<strong>128.2.2.10</strong>）</li><li>现在要构建一个可连接14个主机的网络，如果采用划分子网的方法，则子网掩码为（<strong>255.255.255.240</strong>）</li><li>以下那组网络地址和子网掩码正确标识了172.16.128.0—-172.16.159.255地址块（<strong>172.16.128.0 255.255.224.0</strong>）</li><li>IP地址为192.168.200.2，子网掩码为255.255.255.192，则网络标识为（<strong>191.168.200.0</strong>）</li><li>一个B类网络172.16.0.0，使用子网掩码255.255.255.192来划分子网，则理论上可以利用的网络和每个网络中的主机数分别为（<strong>1024,62</strong>）</li><li>工作在网络层的互连设备是（<strong>路由器</strong>）</li></ul><h3 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h3><ul><li>传输层中的传输实体存在的软硬件环境不包括（<strong>网络数据库</strong>）</li><li>在多个数据字符组成的数据块之前以一个或多个同步字符SYN作为开始，帧尾用ETX作为结束，这种传输方案称为(<strong>面向字符的同步传输</strong> )</li><li>关于 TCP 和UDP 端口,下列说法正确的是( <strong>TCP和UDP分别拥有自己的端口号，他们互不干扰，可以存在与一台主机</strong>)</li><li>为了保证连接的可靠建立，TCP通常采用（<strong>三次握手</strong>）</li><li>数据链路层差错控制机制采用采用拉回方式，发送方已经发送了编号为0-7的帧，当计时器超时，若发送方只收到0、2、3号帧的确认，则发送方需要重传的帧数是（ <strong>4</strong>）</li><li>主机甲和主机乙之间建立了TCP 连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300 字节和500 字节的有效载荷，第一个段的序列号为200，主机乙正确收到两个段后，发送给主机甲的确认序列号是（<strong>1000</strong> ）</li><li>在TCP协议中，发送方的窗口大小是由哪些因素决定的？ ( <strong>接收方允许的窗口和拥塞窗口</strong>)</li></ul><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><ul><li>标准的URL由（<strong>协议类型、主机名、路径、文件名构成</strong>）</li><li>下列属于顶级域名（<strong>net</strong>）</li><li>下列关于域名的叙述中错误的是(  <strong>同一子域的主机拥有不同的网络域名</strong> )</li><li>以下内容中，符合TCP/IP域名系统格式要求的是（ <strong>www.zqu.edu.cn</strong>）</li><li>下列用于接收电子邮件的网络协议是( <strong>IMAP</strong>)</li><li>为了使WAP能访问因特网，其采用的传输层协议是(   <strong>WDP</strong>)</li><li>WWW服务中的Web页面应符合（<strong>HTML</strong> ）规范</li><li>HTTP协议的服务端进程的TCP端口号为（ <strong>80</strong>）</li><li>点击浏览器上的网页地址，从Web服务器下传的是( <strong>HTML文本文件</strong>)</li><li>FTP文件传输协议对应于OSI的(   <strong>第四层</strong>)</li><li>WWW上的每一个网页包括主页都有一个独立的地址，这些地址由32位二进制表示则称为(   <strong>IP地址</strong>)</li><li>FTP 服务方的TCP 协议固定端口号为( <strong>21</strong>)</li><li>不使用面向连接传输服务的应用层协议是( <strong>SMTP</strong>)</li><li>对各种实终端的功能进行一般化、标准化，将实终端的特性变换成标准化通用终端的特性，与此相对应的OSI应用层协议称为( <strong>FTP</strong>)</li><li>简单邮件传送协议SMTP使用的端口号为(  <strong>25</strong> )</li><li>Internet中，将域名转换成IP地址的协议称为（<strong>DNS</strong> ）协议</li></ul><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="第一章-1"><a href="#第一章-1" class="headerlink" title="第一章"></a>第一章</h3><ul><li><p>互联网的两个基本特点（<strong>连通性和共享</strong>）</p></li><li><p>三网融合（<strong>电信网络、有线电视网、计算机网络</strong>）</p></li><li><p>互联网、互连网的区别</p><ul><li>互连网就是指多个网络连接在一起</li><li>互联网是指当前世界上最大、开放的、由众多网络连接而成的特定互联网</li></ul></li><li><p>ISP（<strong>互联网服务提供者</strong>）、IXP（<strong>互联网交换点</strong>）</p><ul><li>IXP作用就是允许两个网络直接相连交换分组，不需要通过第三个网络来转发分组</li></ul></li><li><p>互联网发展三个阶段</p><ul><li>单个网络APANET向互联网发展的过程</li><li>建成了三级结构的互联网</li><li>逐渐形成了多层次ISP结构的互联网</li></ul></li><li><p>互联网</p><ul><li>边缘部分<ul><li>连在互联网上的所有主机，也是端系统</li><li>两种通信方式<ul><li>客户-服务器方式（C/S）</li><li>对等方式(P2P)</li></ul></li></ul></li><li>核心部分<ul><li>在网络核心部分起特殊作用的是<strong>路由器</strong>，是实现<strong>分组交换</strong>的关键部件，任务是<strong>转发收到的分组</strong></li><li>电路交换<ul><li>从通信的角度，交换就是按照某种方式动态地分配传输线路的资源</li><li>步骤<ul><li>建立连接</li><li>通话</li><li>释放连接</li></ul></li><li>重要特点：在全部的通话时间内，两个用户始终占用端到端的通信资源</li><li><strong>传输效率往往很低</strong>，因为数据是突发式传输，大部分时间线路是空闲的</li></ul></li><li>报文交换<ul><li>是整段传输</li></ul></li><li>分组交换<ul><li>分组交换从用<strong>存储转发</strong>的技术</li><li>路由器通过运行的<strong>路由选择协议</strong>能自动的找到转发分组最合适的路径</li><li>新的问题 <ul><li>路由转发排队带来新的时延</li></ul></li></ul></li><li>比较<ul><li>如果要传输大量的数据，传输时间远大于建立连接的时间，那么电路交换的传输效率较快</li><li>报文交换和分组交换不需要预先分配传输带宽，在传送突发数据时可以提高整个网络的信道利用率</li><li>因为一个分组的长度往往远小于整个报文的长度，因此分组交换比报文交换时延小</li></ul></li></ul></li></ul></li><li><p>网络分类</p><ul><li>作用范围<ul><li>广域网WAN（<strong>几十–几千公里</strong>）</li><li>城域网MAN（<strong>5–50km</strong>）</li><li>局域网LAN（<strong>1km</strong>）</li><li>个人区域网PAN（<strong>10m</strong>）</li></ul></li><li>使用者<ul><li>公用网</li><li>专用网</li></ul></li><li>接入网不属于互联网核心部分也不属于边缘部分</li></ul></li><li><p>计算机性能指标</p><ul><li>速率</li><li>带宽<ul><li>单位时间内某信道所能通过的（<strong>最高数据率</strong>），单位（<strong>bit/s</strong>）</li></ul></li><li>吞吐量</li><li>时延</li><li>时延带宽积</li><li>往返时间RTT</li><li>利用率<ul><li>利用率不是越大越好，利用率越大，产生的时延也迅速增加</li></ul></li><li></li></ul></li><li><p>计算机非性能指标</p><ul><li>费用</li><li>质量</li><li>标准化</li><li>可靠性</li><li>可扩展性和可升级性</li><li>易于管理和维护</li></ul></li><li><p>网络协议三要素</p><ul><li>语法</li><li>语义</li><li>同步</li></ul></li></ul><h3 id="第二章-1"><a href="#第二章-1" class="headerlink" title="第二章"></a>第二章</h3><ul><li>香农公式</li></ul><h3 id="第三章-1"><a href="#第三章-1" class="headerlink" title="第三章"></a>第三章</h3><ul><li>时分复用</li></ul><h3 id="第四章-1"><a href="#第四章-1" class="headerlink" title="第四章"></a>第四章</h3><ul><li>什么是网络？</li><li>RIP</li></ul><h3 id="第五章-1"><a href="#第五章-1" class="headerlink" title="第五章"></a>第五章</h3><ul><li><h3 id="第六章-1"><a href="#第六章-1" class="headerlink" title="第六章"></a>第六章</h3></li></ul><h4 id=""><a href="#" class="headerlink" title=" "></a> </h4>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大二下册 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式复习大纲</title>
      <link href="/2020/09/15/xue-ke-fu-xi/qian-ru-shi-fu-xi/"/>
      <url>/2020/09/15/xue-ke-fu-xi/qian-ru-shi-fu-xi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="嵌入式系统概述"><a href="#嵌入式系统概述" class="headerlink" title="嵌入式系统概述"></a>嵌入式系统概述</h3><ul><li>嵌入式系统的定义：嵌入到对象体系中的专用计算机应用系统</li><li>嵌入式系统的特点：<ul><li>嵌入性</li><li>内含计算机</li><li>专用性</li></ul></li><li>嵌入式系统的相关产品</li></ul><h3 id="嵌入式操作系统相关概念"><a href="#嵌入式操作系统相关概念" class="headerlink" title="嵌入式操作系统相关概念"></a>嵌入式操作系统相关概念</h3><ul><li>RTOS：实时操作系统（RTSO）是一段在嵌入式系统启动后首先执行的背景程序，用户的应用程序是运行在RTOS之上的各个任务，RTOS根据各个任务的要求，进行资源管理、消息管理、任务调度以及任务处理等工作</li><li>调度：调度是内核的主要职责之一，调度是用来决定轮到那个任务运行的</li><li>非占先式内核和占先式内核<ul><li>非占先式内核要求每个任务自我放弃CPU的所有权</li><li>占先式内核是最高级任务一旦就绪，总能获得CPU的所有权</li></ul></li><li>常见的嵌入式实时操作系统<ul><li>μClinux<ul><li>开源、实时</li></ul></li><li>Windows CE<ul><li>开源、实时</li></ul></li><li>VxWorks<ul><li>不开源、实时</li></ul></li><li>μC/Os-Ⅱ<ul><li>开源、实时</li></ul></li></ul></li></ul><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="ARM简介"><a href="#ARM简介" class="headerlink" title="ARM简介"></a>ARM简介</h3><ul><li>ARM公司是一家知识产权供应商，不制造芯片且不向终端用户出售芯片</li><li>精简指令集RISC和复杂指令集CISC<ul><li>ARM内核采用精简指令集RISC</li><li>RISC的指令集和相关译码机制比CISC要简单的多</li><li>其目标就是设计一套能在高时钟频率下单周期执行，简单而有效的指令集</li><li>RISC的设计重点在于降低处理器中指令执行部件的硬件复杂度</li></ul></li></ul><h3 id="ARM7TDMI"><a href="#ARM7TDMI" class="headerlink" title="ARM7TDMI"></a>ARM7TDMI</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>M：64位乘法指令</p><p>D：支持片上调试</p><p>T：高密度16位Thumb指令集拓展</p><p>I：Embedded ICE 硬件仿真功能模块</p><p>ARM使用冯.诺依曼结构，指令和数据公用一条32位总线，因此只有装载和存储和交换指令可以对存储器中的数据进行访问</p><ul><li>冯.诺依曼结构<ul><li>把代码作为一种特殊的数据来操作，指令总线和数据总线及其存储区域是统一的</li></ul></li><li>哈佛结构<ul><li>指令总线和数据总线及其存储区是分开、独立的</li></ul></li></ul><h4 id="ARM处理器支持"><a href="#ARM处理器支持" class="headerlink" title="ARM处理器支持"></a>ARM处理器支持</h4><ul><li>8位字节</li><li>16位半字</li><li>32位字</li><li>一个字等于四个字节，一个半字等于两个字节</li><li>ARM指令长度是一个字，Thumb指令是一个半字</li><li>字存储–字对齐；半字存储–半字对齐</li></ul><h4 id="三级流水线"><a href="#三级流水线" class="headerlink" title="三级流水线"></a>三级流水线</h4><ul><li>三个阶段<ul><li>取指</li><li>译码</li><li>执行</li></ul></li><li>单片机上，PC总是指向正在执行的指令</li><li>ARM处理器，PC总是指向正在取指的位置也就是第三条指令，或者说当前执行的指令地址再加两条指令的地址<ul><li>ARM状态<ul><li>PC=当前指令执行位置+8字节</li></ul></li><li>Thumb状态<ul><li>PC=当前指令执行位置+4字节</li></ul></li></ul></li><li>尽量少的使用跳转指令可以提高程序的执行效率</li></ul><h4 id="ARM处理器的状态"><a href="#ARM处理器的状态" class="headerlink" title="ARM处理器的状态"></a>ARM处理器的状态</h4><ul><li>ARM指令集<ul><li>32位字长，拥有最完整的功能</li></ul></li><li>Thumb指令集<ul><li>16位半字，能实现ARM指令集的大部分功能</li></ul></li><li>ARM状态采用ARM指令集，Thumb状态采用Thumb指令集<ul><li>系统通电默认ARM状态</li><li>无论处理器处于任何一种状态，都不能混用两种指令集</li><li>BX指令是在程序跳转的时候同时进行状态切换</li></ul></li></ul><h4 id="ARM处理器的模式"><a href="#ARM处理器的模式" class="headerlink" title="ARM处理器的模式"></a>ARM处理器的模式</h4><ul><li><p>七种处理模式</p></li><li><p>| 处理器模式    | 说明                            | 备注                                               |<br>| ——————- | ———————————————- | ————————————————————————— |<br>| 用户    (usr) | 正常程序工作模式                | 不能直接切换到其它模式                             |<br>| 系统    (sys) | 用于支持操作系统的特权任务等    | 与用户模式类似，但具有可以直接切换到其它模式等特权 |<br>| 快中断  (fiq) | 支持高速数据传输及通道处理      | FIQ异常响应时进入此模式                            |<br>| 中断    (irq) | 用于通用中断处理                | IRQ异常响应时进入此模式                            |<br>| 管理    (svc) | 操作系统保护代码                | 系统复位和软件中断响应时进入此模式                 |<br>| 中止    (abt) | 用于支持虚拟内存和/或存储器保护 | 在ARM7TDMI没有大用处                               |<br>| 未定义  (und) | 支持硬件协处理器的软件仿真      | 未定义指令异常响应时进入此模式                     |</p></li><li><p>特权模式</p><ul><li>系统模式</li><li>异常模式<ul><li>中断</li><li>快中断</li><li>管理<ul><li>处理器复位、软件中断响应后进入，操作系统通常处于管理模式</li></ul></li><li>中止</li><li>未定义</li></ul></li></ul></li><li><p>只有在特权模式才能对当前程序状态寄存器CPSR的所有控制位直接进行读写访问，而非特权模式只允许对CPSR的控制位进行间接的访问</p></li><li><p>每一种异常模式都有对应的寄存器，供相应的异常处理程序使用，从而可保证处理器在进入异常模式时，用户模式下的寄存器不会被破坏</p></li><li><p>用户模式和系统模式不能通过异常进入，也就是说想进入系统模式，必须通过修改CPSR才能实现</p></li></ul><h4 id="ARM内部寄存器"><a href="#ARM内部寄存器" class="headerlink" title="ARM内部寄存器"></a>ARM内部寄存器</h4><ul><li>ARM内部有37个用户可以访问的32位寄存器，其中有6个32位宽的状态寄存器目前只使用了其中12位<ul><li>31个通用寄存器</li><li>6个状态寄存器</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915133738.png" alt="shit"></li></ul></li><li>堆栈指针R13（SP）<ul><li>堆栈操作通常发生在子程序调用、异常发生或者程序运行过程中寄存器数量不够的时候。前两者是把用到的寄存器临时存储后面再重装，而后者是需要的时候弹出来操作</li><li>保存堆栈的出入口处地址</li><li>4中堆栈方式<ul><li>满递增</li><li>空递增</li><li>满递减</li><li>空递减</li></ul></li></ul></li><li>链接寄存器R14（LR）<ul><li>每种异常模式都有专门的R14寄存器用于保护子程序的返回地址</li><li>异常处理程序的完成的返回是通过将LR的值写出PC，同时从SPSR寄存器中恢复CPSR来实现的</li></ul></li><li>程序计数器R15（PC）<ul><li>总是指向正在取指的指令</li></ul></li><li>程序状态寄存器（CPSR）<ul><li>所有模式共享一个CPSR</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143342.png" alt="image-20200915143342407"></li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143528.png" alt=""></li></ul></li><li>程序状态保存寄存器（SPSR）<ul><li>用户模式和系统模式不是一场中断，所以他们没有SPSR</li><li>通过程序直接改写CPSR，CPSR是不会被保存到SPSR中去的，因此只有发生异常或者中断的时候才会备份到SPSR中去</li></ul></li></ul><h4 id="Thumb状态下的寄存器"><a href="#Thumb状态下的寄存器" class="headerlink" title="Thumb状态下的寄存器"></a>Thumb状态下的寄存器</h4><ul><li><p>由于Thumb指令集不包含MSR和MRS指令，如果用户要修改CPSR中的任何标志位都需要回到ARM模式。通过BX和BLX指令来改变指令集模式，而且当完成复位或者进入异常模式将会自动切换到ARM模式</p></li><li><p>所有异常处理都是在ARM状态下执行的</p><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915143134.png" alt="image-20200915143133981"></p></li></ul><h4 id="ARM体系的异常、中断及其向量表"><a href="#ARM体系的异常、中断及其向量表" class="headerlink" title="ARM体系的异常、中断及其向量表"></a>ARM体系的异常、中断及其向量表</h4><ul><li><p>异常向量表</p><ul><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915144333.png" alt="img"></li></ul></li><li><p>异常优先级</p><ul><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915144257.png" alt="image-20200915144257014"></li></ul></li></ul><h4 id="ARM体系的存储结构"><a href="#ARM体系的存储结构" class="headerlink" title="ARM体系的存储结构"></a>ARM体系的存储结构</h4><ul><li>小端格式</li><li>大端格式</li><li><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/15/20200915151602.png" alt="image-20200915151601925"></li><li>注意除了考虑单个字，还要考虑多个字的情况，详情见书P49页</li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="ARM处理器的寻址方式"><a href="#ARM处理器的寻址方式" class="headerlink" title="ARM处理器的寻址方式"></a>ARM处理器的寻址方式</h3><ul><li><p>寄存器寻址</p><ul><li><p>操作数的值存储在寄存器中，指令的地址码指出的是寄存器的编号，指令执行时可以直接取出寄存器的值来操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV R1,R2;<span class="comment">//R2存储到R1中</span></span><br><span class="line">SUB R0,R1,R2;<span class="comment">//将R1-R2的值存储在R0中</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>立即寻址</p><ul><li><p>操作码字段后面的地址码部分即是操作数本身，也就是说数据包含在指令当中，取出指令后可以直接使用，这样的数也被称为立即数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SUBS R0,R0,#<span class="number">1</span>;<span class="comment">//R0-1,并且存储在R0中，并且影响标志位</span></span><br><span class="line">MOV R0,#<span class="number">0xFF000</span>;<span class="comment">//将立即数0xFF00 装入R0</span></span><br></pre></td></tr></table></figure><p>前缀<strong>#</strong>表示立即数</p></li></ul></li></ul><ul><li><p>寄存器移位寻址</p><ul><li><p>ARM指令集特有的寻址方式</p></li><li><p>当第二个操作数是寄存器移位方式时，第二个寄存器操作数在于第一个操作数结合之前，选择进行移位操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV R0,R2,LSL # <span class="number">3</span>;<span class="comment">// R0=R2*8</span></span><br><span class="line">ANDS R1,R1,R2,LSL R3;<span class="comment">//R1=R1 AND (R2*2^&#123;R3&#125;) </span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>寄存器间接寻址</p><ul><li><p>寻址指令中的地址码给出的是一个通用寄存器的编号，所需的操作数保存在寄存器指定地址的存储单元中，即寄存器为操作数的地址指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LDR R1,[R2]; <span class="comment">//    将R2指向的存储单元的数据读出，保存在R2中</span></span><br><span class="line">SWP R1,R1,[R2]; <span class="comment">//将寄存器R1的值和R2指定的存储单元进行</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>基址寻址</p><ul><li><p>将基址寄存器的内容与指令中给出的偏移量相加，形成操作数的有效地址，基址寻址用于访问基址附近的存储单元，常用于查表、数组操作、功能部件寄存器访问等</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LDR R2,[R3,#<span class="number">0x0C</span>]; <span class="comment">// R2=R3+#0x0C</span></span><br><span class="line">STR R1,[R0,#<span class="number">-4</span>]!; <span class="comment">// R0-4=R1</span></span><br><span class="line">LDR R1,[R0,R3,LSL,#<span class="number">1</span>]; <span class="comment">// R1=R0+R3*2</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>多寄存器寻址</p><ul><li><p>一次可以传输过个寄存器，允许一条指令传送16个寄存器的任何子集或者所有寄存器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LDMIA R1!,&#123;R2-R7,R12&#125;;<span class="comment">//将R1的数据读到R2-R7,R12中</span></span><br><span class="line">STMIA R0!,&#123;R2-R7,R12&#125;;<span class="comment">//将R2-R7，R12的数据自动保存到R0当中，R0自动加一</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>堆栈寻址</p></li><li><p>相对寻址</p></li></ul><h3 id="ARM指令集"><a href="#ARM指令集" class="headerlink" title="ARM指令集"></a>ARM指令集</h3><ul><li>ASR #n 算术右移n位</li><li>LSL  #n 逻辑左移n位</li><li>LSR #n 逻辑右移n位</li><li>ROR #n 循环右移n位</li><li>RRX 带扩展的循环右移1位</li></ul><h3 id="ARM存储器访问指令"><a href="#ARM存储器访问指令" class="headerlink" title="ARM存储器访问指令"></a>ARM存储器访问指令</h3><ul><li>LDR  {cond} {T} Rd，&lt;地址&gt; 加载指定地址上的数据放到Rd中</li><li>STR  {cond} {T} Rd，&lt;地址&gt;存储数据到指定地址，数据在Rd中</li><li>LDR {cond} B{T} Rd，&lt;地址&gt;加载字节数据，放入Rd中，即Rd最低字节有效</li><li>STR {cond} B{T} Rd，&lt;地址&gt;存储字节数据，数据在Rd中，最低字节有效</li></ul><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="存储器重映射"><a href="#存储器重映射" class="headerlink" title="存储器重映射"></a>存储器重映射</h3><ul><li>存储器映射：为物理存储器分配地址的过程</li><li>存储器重映射：将已经映射的存储器再次映射的过程<ul><li>多个地址指向同一个存储单元</li></ul></li><li>包括<ul><li>Boot Block</li><li>异常向量表的少量存储单元</li></ul></li><li>（引导块）Boot Block<ul><li>系统固化的代码，用户无法删除和修改</li><li>功能<ul><li>判断运行哪个存储器上的程序</li><li>检查用户代码是否加密</li><li>判断芯片是否加密</li><li>芯片的在应用编程（IAP）以及系统编程功能（ISP）</li></ul></li><li>芯片复位后首先运行</li><li>和启动代码区分开来<ul><li>启动代码是用户添加的，Boot Block是系统固化的 系统复位后先运行引导快，再运行启动代码</li></ul></li></ul></li></ul><h3 id="系统启动代码"><a href="#系统启动代码" class="headerlink" title="系统启动代码"></a>系统启动代码</h3><ul><li>主要和Boot Block 区分开来</li></ul><h3 id="系统控制模块"><a href="#系统控制模块" class="headerlink" title="系统控制模块"></a>系统控制模块</h3><ul><li>部分独立工作不会对其他部件产生影响的功能部件：<ul><li>$UART$接口</li><li>$I^{2}C$接口</li></ul></li></ul><h4 id="系统时钟"><a href="#系统时钟" class="headerlink" title="系统时钟"></a>系统时钟</h4><ul><li><p>晶体振荡器</p><ul><li>为系统提供基本的时钟信号，频率为$F_{OSC}$</li><li>从属模式<ul><li>外部时钟源</li></ul></li><li>振荡模式<ul><li>外部晶体和片内振荡电路</li></ul></li></ul></li><li><p>唤醒定时器</p><ul><li>当复位或者系统从掉电模式被唤醒的时候，唤醒定时器需要对于输入的时钟信号做计数延迟，使系统有时间初始化</li></ul></li><li><p>锁相环（PLL）</p><ul><li>提高$F<em>{OSC}$信号到$F</em>{CCLK}$ (符合用户工作需要的时钟频率)</li></ul></li><li><p>VPB分频器</p><ul><li>降低$F_{CCLK}$信号到满足外设部件使用</li></ul></li><li><p>工作频率</p><ul><li>LPC2000系列基于ARM7内核，该内核的工作频率在100MHZ以下，大部分支持最高60MHZ的内核时钟，少部分支持70MHZ的内核时钟</li></ul></li><li><p>功率控制</p><ul><li>空闲模式<ul><li>处理器停止执行指令，但是系统时钟仍然有效，外设可以继续工作</li></ul></li><li>掉电模式<ul><li>振荡器关闭，系统内部没有任何内部时钟</li></ul></li></ul></li></ul><h4 id="复位"><a href="#复位" class="headerlink" title="复位"></a>复位</h4><ul><li>外部复位<ul><li>改变引脚RESET为低电平</li></ul></li><li>看门狗复位<ul><li>ARM内嵌看门狗部件</li></ul></li><li>任何复位都会唤醒定时器，计数定时后处理器开始执行指令</li></ul><h3 id="外部存储器控制器（EMC）"><a href="#外部存储器控制器（EMC）" class="headerlink" title="外部存储器控制器（EMC）"></a>外部存储器控制器（EMC）</h3><ul><li>外部静态存储器控制器是AMBA AHB总线上的一个从模块，它为AHB系统总线和外部存储器提供一个接口</li><li>外部存储器控制器包含4个配置寄存器。每个配置寄存器控制一个外部存储器接口的总线空闲时间、读访问长度、写访问长度、存储器组是否写保护、存储器组的总线宽度的设置等</li></ul><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/12/fuck.png" alt="fuck"></p><ul><li><p>并行串行区分</p><ul><li>并行：$EMC$</li><li>串行：$I^{2}C;SPI;UART$</li></ul></li><li><p>程序题目</p><ul><li><p>向PSRAM中写入16位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uint16 *point16;</span><br><span class="line">uint16 data16=<span class="number">0x00</span>;</span><br><span class="line">point16=(uint1 <span class="number">16</span>*)<span class="number">0x80001020</span>;<span class="comment">//初始地址</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *point16=data16++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>向PSRAM中低地址写入8位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uint8 *point8;</span><br><span class="line">uint8 data8=<span class="number">0x00</span>;</span><br><span class="line">point8=(uint8 *)<span class="number">0x80001020</span>;<span class="comment">//初始地址</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    *point8=data8++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>向PSRAM中高地址写入8位数据</p><ul><li>类比同上</li><li>8位写操作，两者在控制的时候是通过BLS0、BLS1的交替生效而成功的</li><li>16位BLS0、BLS1同时生效</li></ul></li><li><p>向PSRAM中读取8位数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">uint8 RcvData8;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uint8 *point8;</span><br><span class="line">    point8 = (uint *) <span class="number">0x80001010</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)<span class="comment">//循环读取0x80001010--0x80001013</span></span><br><span class="line">    &#123;</span><br><span class="line">        RcvData8 = *point8++;<span class="comment">// 读取0x80001010</span></span><br><span class="line">        RcvData8 = *point8++;<span class="comment">// 读取0x80001011</span></span><br><span class="line">        RcvData8 = *point8++;<span class="comment">// 读取0x80001012</span></span><br><span class="line">        RcvData8 = *point8--;<span class="comment">// 读取0x80001013</span></span><br><span class="line">        *point8--;</span><br><span class="line">        *point8--;</span><br><span class="line">        *point8--;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="引脚连接模块"><a href="#引脚连接模块" class="headerlink" title="引脚连接模块"></a>引脚连接模块</h3><h4 id="GPIO"><a href="#GPIO" class="headerlink" title="GPIO"></a>GPIO</h4><p><img src= "/img/loading.gif" data-lazy-src="http://pic.acist.xn--ses554g/Chevereto-Free-master/images/2020/09/12/image-20200912215329354.png" alt="image-20200912215329354"></p><ul><li>IOxDIR 控制方向（In or Out）</li><li>IOxSET 控制高电平输出</li><li>IOxCLR 控制低电平输出</li><li>IOxPIN 反应引脚当前电平状态</li></ul><h4 id="GPIO应用示例"><a href="#GPIO应用示例" class="headerlink" title="GPIO应用示例"></a>GPIO应用示例</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PINSEL0 &amp;= <span class="number">0xFFFFFFFC</span>; <span class="comment">// 设置引脚连接模块，将P0.0设置为GPIO功能</span></span><br><span class="line">IOxDIR  |= <span class="number">0x00000001</span>; <span class="comment">// 设置P0.0为输出</span></span><br><span class="line">IOxSET = <span class="number">0x00000001</span>;   <span class="comment">// 设置P0.0为高电平</span></span><br></pre></td></tr></table></figure><ul><li>在PINSEL0中每两位二进制对应一个P0.x</li><li>而对于其他的，例如IOxDIR、IOxSET 每一位二进制对于一个P0.x;</li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h3><ul><li>在实时多任务系统中，信号量被广泛用于任务间对共享资源的互斥、任务和中断服务程序的同步以及任务的同步。</li></ul><h3 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h3><ul><li>消息是任务之间的一种通信手段，当同步过程需要传输具体内容的时候就不能使用信号量，这个时候可以选择消息邮箱，即通过内核服务可以给任务发送消息。</li></ul><h3 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h3><ul><li>邮箱用来在任务之间或者中断与任务之间传递一个指针，以便任务可以通过指针发送和接收任意类型的数据。</li></ul><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><ul><li>消息队列就像一个类似于缓冲区的对象，通过消息队列和ISR发送和接收消息，实现数据的通信和同步。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大二下册 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeforcesRound#664(Div.1)</title>
      <link href="/2020/08/12/codeforces/codeforcesround-664-div1/"/>
      <url>/2020/08/12/codeforces/codeforcesround-664-div1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2>]]></content>
      
      
      <categories>
          
          <category> codeforces </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/08/07/zhi-shi-dian-xue-xi/shu-lun/shu-lun/"/>
      <url>/2020/08/07/zhi-shi-dian-xue-xi/shu-lun/shu-lun/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数论知识点"><a href="#数论知识点" class="headerlink" title="数论知识点"></a>数论知识点</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些用到的数论知识和相关总结</p><h2 id="gcd"><a href="#gcd" class="headerlink" title="gcd"></a>gcd</h2><p>$gcd(a,b)=gcd(a-b,b)=gcd(a\%b,b)=gcd(b,a\%b)$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="exgcd"><a href="#exgcd" class="headerlink" title="exgcd"></a>exgcd</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>; y=<span class="number">0</span>; <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> gcd =exgcd(b,a%b,y,x);</span><br><span class="line">    y-=(a/b)*x;</span><br><span class="line">    <span class="keyword">return</span> gcd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll x,ll k,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) res=res*x%p; x=x*x%p; k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bsgs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> s=y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        M[s]=i; <span class="comment">// 为了求得最小值，这里能更新则更新</span></span><br><span class="line">        mul(s,x,p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> xm=ksm(x,m,p); s=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=<span class="number">1l</span>l*s*xm%p;  <span class="comment">// 注意1ll</span></span><br><span class="line">        <span class="keyword">if</span> (M.count(s))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> (i*m-M[s]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="广义二项式定理"><a href="#广义二项式定理" class="headerlink" title="广义二项式定理"></a>广义二项式定理</h2><script type="math/tex; mode=display">G^{n}(x)=\sum_{i=0}^\infty C_{n+k-1}^k x^k</script><h2 id="积性函数"><a href="#积性函数" class="headerlink" title="积性函数"></a>积性函数</h2><ul><li>普通积性函数，对于两个互质的数$n,m,$有$f(n<em>m)=f(n)</em>f(m)$</li><li>完全积性函数，任意两个数$n,m,$有$f(n<em>m)=f(n)</em>f(m)$</li></ul><h2 id="狄利克雷卷积"><a href="#狄利克雷卷积" class="headerlink" title="狄利克雷卷积"></a>狄利克雷卷积</h2><ul><li>$(f<em>g)(x)=\sum_{d|x}f(d)</em>g(x/d)$</li><li>满足交换律和结合律</li><li>两个积性函数的狄利克雷卷积还是积性函数</li></ul><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><h2 id="莫比乌斯函数"><a href="#莫比乌斯函数" class="headerlink" title="莫比乌斯函数"></a>莫比乌斯函数</h2><h3 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h3><ul><li>对于一个函数和1做狄利克雷卷积</li><li>$g=f*1; g(x)=\sum_{d|x}f(d)$</li></ul><h3 id="反演"><a href="#反演" class="headerlink" title="反演"></a>反演</h3><ul><li>$f(x)=g(x)-\sum_{d|x,x\not=d}f(d)$</li><li>利用容斥$f=g<em>\mu$ 也就是$f(x)=\sum_{d|x}g(d)</em>\mu(x/d)$</li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo实操记录</title>
      <link href="/2020/08/07/hexo-bo-ke-xiang-guan/hexo-bo-ke-shi-ji-cao-zuo-ji-lu/"/>
      <url>/2020/08/07/hexo-bo-ke-xiang-guan/hexo-bo-ke-shi-ji-cao-zuo-ji-lu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><ul><li>问题：使用typora编辑时候使用代码高亮标注c++，使得页面&lt;号被错误识别<ul><li>解决：使用c，注意是小写c</li></ul></li></ul><h2 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h2><ul><li><p>问题：不能使用 ” “ 作为markdown文件的文件名，Front-matter也不支持</p><ul><li>解决：不使用</li></ul></li><li><p>问题：存在hexo渲染不能生成index.html文件</p><ul><li>解决：多传了几次似乎就解决了</li></ul></li><li><p>问题：$ /c/Users/14816/AppData/Roaming/npm/hexo: line 12: node: command not found</p><ul><li>因为是我在装其他软件时导致系统路径发生变化</li><li>解决：添加路径<ul><li>C:\Users\zhong\AppData\Roaming\npm</li><li>D:\software\NODEJS</li><li>C:\Users\zhong\AppData\Roaming\npm\node_modules\hexo\bin</li></ul></li></ul></li></ul><h2 id="文章界面"><a href="#文章界面" class="headerlink" title="文章界面"></a>文章界面</h2><ul><li><p>问题：存在文章链接部分过长，超出范围</p><ul><li><p>解决方案：我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@echo</span> <span class="string">off</span></span><br><span class="line"><span class="attr">E:</span></span><br><span class="line"><span class="string">cd</span> <span class="string">E:blog</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">clean&amp;&amp;hexo</span> <span class="string">g&amp;&amp;hexo</span> <span class="string">d</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><ul><li>参见大佬：<a href="https://cloud.tencent.com/developer/article/1577027">https://cloud.tencent.com/developer/article/1577027</a></li></ul><h3 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h3><ul><li><p>首先你得设置SSH密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>入后一直回车，然后在<code>C:/Users/[username]</code>目录下找到名为<code>.ssh</code>的文件夹， 文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本编辑器打开<code>id_rsa.pub</code></p></li><li><p>将其复制到阿里云的服务器的密钥管理中，重启阿里云</p></li><li><p>测试连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T root@你的IP地址</span><br></pre></td></tr></table></figure></li><li><p>其余操作参见博客</p><ul><li><a href="https://yq.aliyun.com/articles/640997?spm=a2c4e.11155472.0.0.30aa2da5Pg73VS">https://yq.aliyun.com/articles/640997?spm=a2c4e.11155472.0.0.30aa2da5Pg73VS</a></li></ul></li></ul><h3 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h3><ul><li>首先通过阿里云控制台申请二级域名</li><li>然后利用小皮面板部署网页</li><li>参考<a href="https://blog.csdn.net/weixin_45682081/article/details/105992591">https://blog.csdn.net/weixin_45682081/article/details/105992591</a></li></ul><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li><p>问题：出现公式部分显示的情况</p><ul><li><p><a href="https://www.cnblogs.com/Ai-heng/p/7282110.html">https://www.cnblogs.com/Ai-heng/p/7282110.html</a></p></li><li><p>因为hexo自带渲染冲突</p></li><li><pre><code>npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save</code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020牛客暑期多校训练营（第七场）</title>
      <link href="/2020/08/07/acm-7-8-yue-xun-lian/2020-niu-ke-duo-xiao/niu-ke-di-qi-chang-ti-jie/"/>
      <url>/2020/08/07/acm-7-8-yue-xun-lian/2020-niu-ke-duo-xiao/niu-ke-di-qi-chang-ti-jie/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h2><h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><script type="math/tex; mode=display">\sum_{i=1}^{n-1} \sum_{j=i+1}^{n}d(i,j)^2=\sum_{i=1}^{n-1} \sum_{j=i+1}^{n}(x_{i}-x_{j})^{2}+(y_{i}-y_{j})^2=\sum_{i=1}^{n} \sum_{j=1}^{n}(x_{i}^2+y_{j}^2)-(x_{i}*x_{j}+y_{i}*y_{j})=n*\sum_{i=1}^{n}(x_{i}^{2}+y_{i}^{2})-(\sum_{i=1}^{n}x_{i})^{2}-(\sum_{i=1}^{n}y_{i})^{2}</script><p>然后DP即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MP make_pair</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span> ,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;&gt; ve;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">9</span>][<span class="number">610</span>][<span class="number">610</span>],ans[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">-33</span>; i&lt;=<span class="number">33</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">-33</span>; j&lt;=<span class="number">33</span>; j++)</span><br><span class="line">            ve.pb(MP(i*i+j*j,MP(i,j)));</span><br><span class="line">    sort(ve.begin(), ve.end());</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">300</span>][<span class="number">300</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">1</span>;r&lt;=<span class="number">30</span>;++r)&#123;</span><br><span class="line">        <span class="keyword">while</span>(ve[s].fi&lt;=r*r)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;++i)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">300</span>-r*i;j&lt;=<span class="number">300</span>+r*i;++j)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">300</span>-r*i;k&lt;=<span class="number">300</span>+r*i;++k)</span><br><span class="line">                        dp[i][j][k]=max(dp[i][j][k],dp[i<span class="number">-1</span>][j-ve[s].se.fi][k-ve[s].se.se]+ve[s].fi);</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">1</span>;n&lt;=<span class="number">8</span>;++n)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">0</span>;h&lt;<span class="number">2</span>*<span class="number">300</span>;++h)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;<span class="number">2</span>*<span class="number">300</span>;++l)</span><br><span class="line">                    <span class="keyword">if</span>(dp[n][h][l]&gt;<span class="number">0</span>)</span><br><span class="line">                        ans[n][r]=max(ans[n][r],n*dp[n][h][l]-((h<span class="number">-300</span>)*(h<span class="number">-300</span>)+(l<span class="number">-300</span>)*(l<span class="number">-300</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    prepare();</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,r;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans[n][r]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="I题"><a href="#I题" class="headerlink" title="I题"></a>I题</h2><h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><ul><li>prufer序列</li><li>组合数</li></ul><blockquote><p>prufer序列的性质：</p><ul><li>序列与无根树一一对应</li><li>度数为x的节点会在序列中出现x-1次</li><li>一个n个节点的完全图的生成树的个数为$n^{n-2}$</li></ul><p>更多性质参考：<a href="https://www.cnblogs.com/chenxiaoran666/p/prufer.html">https://www.cnblogs.com/chenxiaoran666/p/prufer.html</a></p></blockquote><h3 id="具体推导"><a href="#具体推导" class="headerlink" title="具体推导"></a>具体推导</h3><ul><li><p>$dp[i]$ 代表森林中有$i$个节点的方案数</p></li><li><p>$f[i]$代表有$i$个节点的无根树的度数平方和</p></li><li><p>$ans[i]$代表有$i$个节点的无根树森林的度数平方和</p></li><li><script type="math/tex; mode=display">dp[i]=\sum_{j=1}^{i}dp[i-j]*j^{j-2}*C_{i-1}^{j-1}</script></li><li><script type="math/tex; mode=display">f[i]=i*\sum_{j=1}^{i-1}j^{2}*C_{i-2}^{j-1}*(i-1)^{i-2-(j-1)}</script></li><li><script type="math/tex; mode=display">ans[i]=\sum_{j=1}^{i}(ans[i-j]*j^{j-2}+f[j]*dp[i-j])*C_{i-1}^{j-1}</script></li></ul><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define N 5000</span></span><br><span class="line">using namespace std;</span><br><span class="line">int mod;</span><br><span class="line">long long ans[N+5],f[N+5],dp[N+5],c[N+5][N+5],vis[N+5][N+5];</span><br><span class="line">ll ksm(ll x,ll k,ll p)</span><br><span class="line">&#123;</span><br><span class="line">    //cout&lt;&lt;<span class="string">&quot;       &quot;</span>&lt;&lt;x&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt;k&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;vis[x][k]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">if</span> (k&lt;=0) <span class="built_in">return</span> 1;</span><br><span class="line">    <span class="keyword">if</span> (vis[x][k]) <span class="built_in">return</span> vis[x][k];</span><br><span class="line"></span><br><span class="line">    ll res=1;</span><br><span class="line">    //cout&lt;&lt;<span class="string">&quot;                   &quot;</span>&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    int tmpx=x,tmpk=k;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;1) res=res*x%p; x=x*x%p; k&gt;&gt;=1;</span><br><span class="line">       // cout&lt;&lt;<span class="string">&quot; AAA &quot;</span>&lt;&lt;k&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vis[tmpx][tmpk]=res;</span><br><span class="line">    //cout&lt;&lt;<span class="string">&quot;                  &quot;</span>&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int T;</span><br><span class="line">    cin&gt;&gt;T&gt;&gt;mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i=0; i&lt;=N; i++)</span><br><span class="line">        c[i][0]=c[i][i]=1;</span><br><span class="line">    <span class="keyword">for</span> (int i=2; i&lt;=N; i++)</span><br><span class="line">        <span class="keyword">for</span> (int j=1; j&lt;i; j++)</span><br><span class="line">            c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;</span><br><span class="line">   // cout&lt;&lt;<span class="string">&quot;A&quot;</span>&lt;&lt;endl;</span><br><span class="line">    dp[0]=1;</span><br><span class="line">    <span class="keyword">for</span> (int i=1; i&lt;=N; i++)</span><br><span class="line">        <span class="keyword">for</span> (int j=1; j&lt;=i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            //cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">            dp[i]=(dp[i]+dp[i-j]*ksm(j,j-2,mod)%mod*c[i-1][j-1]%mod)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">   // cout&lt;&lt;<span class="string">&quot;B&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (int i=1; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (int j=1; j&lt;=i-1; j++)</span><br><span class="line">            f[i]=(f[i]+j*j%mod*c[i-2][j-1]%mod*ksm(i-1,i-j-1,mod)%mod)%mod;</span><br><span class="line">        f[i]=f[i]*i%mod;</span><br><span class="line">    &#125;</span><br><span class="line">   // cout&lt;&lt;<span class="string">&quot;C&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (int i=1; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (int j=1; j&lt;=i; j++)</span><br><span class="line">            ans[i]=(ans[i]+(ans[i-j]*ksm(j,j-2,mod)%mod+f[j]*dp[i-j]%mod)%mod*c[i-1][j-1]%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    //cout&lt;&lt;<span class="string">&quot;D&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>  (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        int n;</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans[n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="J题"><a href="#J题" class="headerlink" title="J题"></a>J题</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>英语阅读题，理解题目意思后模拟即可</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">300</span>][<span class="number">30</span>],b[<span class="number">300</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">30</span>][<span class="number">30</span>],cnt[<span class="number">30</span>][<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> l,<span class="keyword">char</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l&lt;=x &amp;&amp; x&lt;=r) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">char</span> x,<span class="keyword">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s = %s&quot;</span>,a[i]+<span class="number">1</span>,b[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;a[i]+1&lt;&lt;&quot; &quot;&lt;&lt;b[i]+1&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cirtime=n;</span><br><span class="line">    <span class="keyword">while</span> (cirtime--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> lena=<span class="built_in">strlen</span>(a[i]+<span class="number">1</span>),lenb=<span class="built_in">strlen</span>(b[i]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> A,B,f;</span><br><span class="line">            <span class="keyword">if</span> (lena==lenb  &amp;&amp; lena==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (check(b[i][<span class="number">1</span>],<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;z&#x27;</span>)) <span class="comment">// A=x</span></span><br><span class="line">                &#123;</span><br><span class="line">                    A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                    ans[A][B]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">// A=B</span></span><br><span class="line">                &#123;</span><br><span class="line">                    A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            ans[A][j]|=ans[B][j];</span><br><span class="line">                           <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;A&lt;&lt;&quot; &quot;&lt;&lt;B&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;&#x27;o&#x27;-&#x27;a&#x27;&lt;&lt;&quot; &quot;&lt;&lt;ans[A][j]&lt;&lt;endl;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (lena==<span class="number">3</span>) <span class="comment">// A.f=B</span></span><br><span class="line">            &#123;</span><br><span class="line">                A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); f=get(a[i][<span class="number">3</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (ans[A][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">26</span>; k++)</span><br><span class="line">                            cnt[j][f][k]|=ans[B][k];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (lenb==<span class="number">3</span>) <span class="comment">// A=B.f</span></span><br><span class="line">            &#123;</span><br><span class="line">                 A=get(a[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); B=get(b[i][<span class="number">1</span>],<span class="string">&#x27;A&#x27;</span>); f=get(b[i][<span class="number">3</span>],<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (ans[B][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">26</span>; k++)</span><br><span class="line">                            ans[A][k]|=cnt[j][f][k];</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;cnt[&#x27;o&#x27;-&#x27;a&#x27;][&#x27;f&#x27;-&#x27;a&#x27;][&#x27;o&#x27;-&#x27;a&#x27;]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c: &quot;</span>,i+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">26</span>; j++) <span class="keyword">if</span> (ans[i][j]) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j+<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020牛客多校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 套题题解 </tag>
            
            <tag> prufer定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020 Multi-University Training Contest 6</title>
      <link href="/2020/08/07/acm-7-8-yue-xun-lian/2020-hang-dian-duo-xiao/2020-multi-university-training-contest-6/"/>
      <url>/2020/08/07/acm-7-8-yue-xun-lian/2020-hang-dian-duo-xiao/2020-multi-university-training-contest-6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1006"><a href="#1006" class="headerlink" title="1006"></a>1006</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给你一个点数为$n$,边数为$m$的无向联通图，其中第$i$条边的权值为$2^{i}$,每个点有个点权为$0$或者$1$,求所有$01$点对的最短路径和</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>考虑$2^{i}=2^{i-1}+2^{i-2}+……+2^{0}$ 那么意味着如果前面的边已经使得两点联通，再添加一条边这条边的边权不可能去更新最短路径</p><p>于是考虑先并查集建立出一颗最短路径树，之后在书上树形DP记录答案即可</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,sum0,sum1,ans;</span><br><span class="line"><span class="keyword">int</span> fa[N],a[N],sum[N][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> tot,pre[N*<span class="number">2</span>],now[N],v[N*<span class="number">2</span>],val[N*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ++tot; pre[tot]=now[x]; now[x]=tot; v[tot]=y; val[tot]=w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==fa[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span> fa[x]=fd(fa[x]);</span><br><span class="line">    <span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> father)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum[x][a[x]]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p=now[x]; p; p=pre[p])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> son=v[p];</span><br><span class="line">        <span class="keyword">if</span> (son==father) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(son,x);</span><br><span class="line">        sum[x][<span class="number">0</span>]+=sum[son][<span class="number">0</span>];</span><br><span class="line">        sum[x][<span class="number">1</span>]+=sum[son][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        ans=(ans+<span class="number">1l</span>l*(sum0-sum[son][<span class="number">0</span>])*sum[son][<span class="number">1</span>]%mod*val[p]%mod)%mod;</span><br><span class="line">        ans=(ans+<span class="number">1l</span>l*(sum1-sum[son][<span class="number">1</span>])*sum[son][<span class="number">0</span>]%mod*val[p]%mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fa[i]=i; now[i]=<span class="number">0</span>; sum[i][<span class="number">0</span>]=sum[i][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tot=<span class="number">0</span>; sum0=sum1=<span class="number">0</span>; ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span> (a[i]==<span class="number">0</span>) sum0++;</span><br><span class="line">            <span class="keyword">else</span> sum1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> val=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            val=<span class="number">1l</span>l*val*<span class="number">2</span>%mod;</span><br><span class="line">            <span class="keyword">int</span> x,y,fx,fy;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">            fx=fd(x); fy=fd(y);</span><br><span class="line">            <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fa[fx]=fy;</span><br><span class="line">                ins(x,y,val);</span><br><span class="line">                ins(y,x,val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1010"><a href="#1010" class="headerlink" title="1010"></a>1010</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>给你一个有边权无向图，其中一个生成树的权值为所有边权的与操作，求期望的生成树权值是多少</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><ul><li>生成树计数，通过<strong>Matrix-Tree 定理</strong>可以知道生成树的个数</li><li>可以参考<a href="https://blog.csdn.net/u011815404/article/details/99679527">https://blog.csdn.net/u011815404/article/details/99679527</a></li><li>因为我们是要求与操作的边权和，于是我们可以按位操作，根据每一位做一次生成树计数</li></ul><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 105</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">LL K[N][N],ans[N];</span><br><span class="line"><span class="keyword">int</span> bin[<span class="number">40</span>],A[N][N][N];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function">LL <span class="title">gauss</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//求矩阵K的n-1阶顺序主子式</span></span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;<span class="comment">//枚举主对角线上第i个元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n<span class="number">-1</span>;j++)&#123;<span class="comment">//枚举剩下的行</span></span><br><span class="line">            <span class="keyword">while</span>(K[j][i])&#123;<span class="comment">//辗转相除</span></span><br><span class="line">                <span class="keyword">int</span> t=K[i][i]/K[j][i];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=n<span class="number">-1</span>;k++)<span class="comment">//转为倒三角</span></span><br><span class="line">                    K[i][k]=(K[i][k]-t*K[j][k]+MOD)%MOD;</span><br><span class="line">                swap(K[i],K[j]);<span class="comment">//交换i、j两行</span></span><br><span class="line">                res=-res;<span class="comment">//取负</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res=(res*K[i][i])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (res+MOD)%MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll x,ll k,ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) res=res*x%p; x=x*x%p; k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    bin[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">30</span>; i++) bin[i]=bin[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;bin[30]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)  A[i][j][k]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x,y,val;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;val);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">29</span>; j++) <span class="keyword">if</span> ((val&amp;bin[j])==bin[j])</span><br><span class="line">            &#123;</span><br><span class="line">                A[j][x][x]++;</span><br><span class="line">                A[j][y][y]++;</span><br><span class="line">                A[j][x][y]--;</span><br><span class="line">                A[j][y][x]--;</span><br><span class="line">            &#125;</span><br><span class="line">            A[<span class="number">30</span>][x][x]++;</span><br><span class="line">            A[<span class="number">30</span>][y][y]++;</span><br><span class="line">            A[<span class="number">30</span>][x][y]--;</span><br><span class="line">            A[<span class="number">30</span>][y][x]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++) K[j][k]=A[i][j][k];</span><br><span class="line">            ans[i]=gauss(n);c</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;            &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;ans[i]&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ll res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">29</span>; i++)</span><br><span class="line">            res=(res+<span class="number">1l</span>l*bin[i]*ans[i]%MOD)%MOD;</span><br><span class="line">        res=res*ksm(ans[<span class="number">30</span>],MOD<span class="number">-2</span>,MOD)%MOD;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020杭电多校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 套题题解 </tag>
            
            <tag> 并查集 </tag>
            
            <tag> 生成树计数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round#638(Div. 2)</title>
      <link href="/2020/08/07/acm-5-yue-xun-lian/codeforces-round-638-div.2/"/>
      <url>/2020/08/07/acm-5-yue-xun-lian/codeforces-round-638-div.2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>有一个很好的特性就是:</p><script type="math/tex; mode=display">2^n=2^{n-1}+2^{n-2}+...+2^{0}+2^{0}</script><p>于是我们给一组分配一个最大的+几个最小的即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        ll a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k=n/<span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">        ll sum=<span class="number">0</span>,tmp=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">1l</span>l&lt;&lt;i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;k; i++)</span><br><span class="line">            tmp+=<span class="number">1l</span>l&lt;&lt;i;</span><br><span class="line">        tmp+=<span class="number">1l</span>l&lt;&lt;n;</span><br><span class="line">        sum=sum-tmp;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">abs</span>(tmp-sum)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>因为不限制长度，于是我们统计一下出现过的数字，然后重复长度n次输出即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],ans[N*<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>,las;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">            <span class="keyword">if</span> (!vis[a[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                tot++;</span><br><span class="line">                ans[++cnt]=a[i]; las=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tot&gt;k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=cnt+<span class="number">1</span>; i&lt;=k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[++cnt]=las;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;n*k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=k; j++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>这道题目我觉得出的很好，很容易发现没有显然的贪心策略。</p><p>所以我刚开始的时候想的是F(i,j,k)代表前i个剩下j个red和k个blue没匹配，然后发现时间复杂度是n^4</p><p>于是我们考虑一下优化，我们想想red和blue的关系</p><p>我们会发现：</p><ul><li>假设我们知道有x个red没有在任何一种篮子里面，我们也就可以推出有多少blue没在任何一种篮子里面，即有（sumred-x+sumblue）%k个blue没在任何一种篮子里面。于是我们用一个二维的即可</li><li>假设我们知道有x个red是杂匹配的，我们也可以推出有多少个blue也是杂匹配的，于是也可以将三维优化为二维的</li></ul><p>方法一：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> dp[N][N];<span class="comment">// 剩下红色浆果的数量</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> suma,sumb;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]),suma+=a[i],sumb+=b[i];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[i<span class="number">-1</span>][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i][(j+a[i]%k)%k]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">0</span>; l&lt;=min(k<span class="number">-1</span>,a[i]); l++)</span><br><span class="line">            <span class="keyword">if</span> (((a[i]-l)%k+b[i])&gt;=k)</span><br><span class="line">                dp[i][(l+j)%k]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">        <span class="keyword">if</span> (dp[n][i]) ans=max(ans,(suma+sumb-i)/k);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">bool</span> dp[N][N];<span class="comment">// 前i个里面有j个红果子是异构篮子里面的</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> suma,sumb;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]),suma+=a[i],sumb+=b[i];</span><br><span class="line">        <span class="comment">//if (n==125 &amp;&amp; i&gt;=73) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;&lt;&lt;b[i]&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dp[i<span class="number">-1</span>][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">// (0&lt;=x&lt;=a[i]   0&lt;=k-x&lt;=b[i]  == k&gt;=x&gt;=k-b[i])</span></span><br><span class="line">            <span class="comment">// (</span></span><br><span class="line">          <span class="comment">//  cout&lt;&lt;&quot; &quot;&lt;&lt;max((k-b[i])%k,0)&lt;&lt;&quot; &quot;&lt;&lt;min(a[i],k)&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x=max(k-b[i],<span class="number">0</span>); x&lt;=min(a[i],k); x++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                dp[i][(j+x)%k]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    <span class="keyword">if</span> (dp[n][i])</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot;          &quot;&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        ans=max(ans,min(i,<span class="number">1</span>)+(suma-i)/k+(sumb-(k-i)%k)/k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020湖南多校线上第三场 CERC2014</title>
      <link href="/2020/08/07/acm-5-yue-xun-lian/cerc14/"/>
      <url>/2020/08/07/acm-5-yue-xun-lian/cerc14/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>比赛平台：codeforces</p><p>Rank：57</p><p>现场AC：5</p><p>补题：2    </p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>队友AC</p><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>队友AC</p><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>待补题</p><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>DP</p><p>f[i] [j] [k]代表前i个状态为j,k的方案数</p><p>j=1 代表s[1]=s[2]  j=0 代表 s[1]&lt;s[2]</p><p>k=1代表s[2]=s[3] k=0 代表 s[2]&lt;s[3]</p><p>起初我在统计转移方法的时候是利用if判断，后面想到可以刚开始枚举所有情况预处理一下</p><p>具体转移方程见代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">4</span>][N];</span><br><span class="line"><span class="keyword">int</span> n[<span class="number">5</span>],mn,mn12,mn23;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  f[N][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  g[<span class="number">10</span>][<span class="number">30</span>][<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">2</span>]+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s[<span class="number">3</span>]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    n[<span class="number">1</span>]=<span class="built_in">strlen</span>(s[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">    n[<span class="number">2</span>]=<span class="built_in">strlen</span>(s[<span class="number">2</span>]+<span class="number">1</span>);</span><br><span class="line">    n[<span class="number">3</span>]=<span class="built_in">strlen</span>(s[<span class="number">3</span>]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    n[<span class="number">0</span>]=max(n[<span class="number">1</span>],max(n[<span class="number">2</span>],n[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n[<span class="number">0</span>]; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">1</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">1</span>; k++)</span><br><span class="line">            f[i][j][k]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// if (i==1 &amp;&amp; j==2 &amp;&amp; k==3) cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (i==j &amp;&amp; j==k &amp;&amp; i==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    g[x][i][j][k]++;</span><br><span class="line">   <span class="comment">// if (x== 9 &amp;&amp; j==2 &amp;&amp; k==3) cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;k&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span>) g[x][<span class="number">27</span>][j][k]++;</span><br><span class="line">    <span class="keyword">if</span> (j!=<span class="number">0</span>) g[x][i][<span class="number">27</span>][k]++;</span><br><span class="line">    <span class="keyword">if</span> (k!=<span class="number">0</span>) g[x][i][j][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span>) g[x][<span class="number">27</span>][<span class="number">27</span>][k]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][<span class="number">27</span>][j][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (j!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][i][<span class="number">27</span>][<span class="number">27</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (i!=<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) g[x][<span class="number">27</span>][<span class="number">27</span>][<span class="number">27</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">26</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">26</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">26</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i==j &amp;&amp; j==k)  <span class="comment">// i==j==k</span></span><br><span class="line">                &#123;</span><br><span class="line">                    up(<span class="number">1</span>,i,j,k);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i&lt;j &amp;&amp; j==k) <span class="comment">//i&lt;j==k</span></span><br><span class="line">                &#123;</span><br><span class="line">                    up(<span class="number">2</span>,i,j,k);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (j==k) up(<span class="number">3</span>,i,j,k); <span class="comment">// j==k</span></span><br><span class="line">                <span class="keyword">if</span> (i==j &amp;&amp; j&lt;k) up(<span class="number">4</span>,i,j,k); <span class="comment">// i==j&lt;k</span></span><br><span class="line">                <span class="keyword">if</span> (i==j) up(<span class="number">5</span>,i,j,k); <span class="comment">// i==j</span></span><br><span class="line">                <span class="keyword">if</span> (j&lt;k) up(<span class="number">6</span>,i,j,k); <span class="comment">// j&lt;k</span></span><br><span class="line">                <span class="keyword">if</span> (i&lt;j) up(<span class="number">7</span>,i,j,k); <span class="comment">// i&lt;j</span></span><br><span class="line">                up(<span class="number">8</span>,i,j,k); <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (i&lt;j &amp;&amp; j&lt;k) up(<span class="number">9</span>,i,j,k); <span class="comment">// i&lt;j&lt;k</span></span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;n[x]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s[x][i]==<span class="string">&#x27;?&#x27;</span>) <span class="keyword">return</span> <span class="number">27</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (s[x][i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    prepare();</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n[<span class="number">0</span>]; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a,b,c;</span><br><span class="line"></span><br><span class="line">            a=get(<span class="number">1</span>,i);</span><br><span class="line">            b=get(<span class="number">2</span>,i);</span><br><span class="line">            c=get(<span class="number">3</span>,i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">1</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">1</span>][a][b][c]%mod; <span class="comment">// a==b==c</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">1</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">2</span>][a][b][c]%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">1</span>]=(f[i][<span class="number">0</span>][<span class="number">1</span>]+f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]*g[<span class="number">3</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">4</span>][a][b][c]%mod; <span class="comment">// a==b</span></span><br><span class="line">            f[i][<span class="number">1</span>][<span class="number">0</span>]=(f[i][<span class="number">1</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>]*g[<span class="number">5</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]*g[<span class="number">6</span>][a][b][c]%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>]*g[<span class="number">7</span>][a][b][c]%mod)%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">0</span>]*g[<span class="number">8</span>][a][b][c]%mod)%mod;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=(f[i][<span class="number">0</span>][<span class="number">0</span>]+f[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]*g[<span class="number">9</span>][a][b][c]%mod)%mod;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;g[9][a][b][c]&lt;&lt;&quot; &quot;&lt;&lt;a&lt;&lt;&quot; &quot;&lt;&lt;b&lt;&lt;&quot; &quot;&lt;&lt;c&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[n[<span class="number">0</span>]][<span class="number">0</span>][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">?heoret?cal</span></span><br><span class="line"><span class="comment">c?mputer</span></span><br><span class="line"><span class="comment">?cience</span></span><br><span class="line"><span class="comment">jagiellonian</span></span><br><span class="line"><span class="comment">?niversity</span></span><br><span class="line"><span class="comment">kra?ow</span></span><br><span class="line"><span class="comment">?</span></span><br><span class="line"><span class="comment">b</span></span><br><span class="line"><span class="comment">c</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>直接暴力出所有的情况</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> sum,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sum&gt;<span class="number">400</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="comment">//if (vis[sum]) return ;</span></span><br><span class="line">    <span class="comment">//if (sum==30 ) cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (d&gt;<span class="number">6</span>) <span class="keyword">return</span> ;</span><br><span class="line">    vis[sum]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[x+<span class="number">1</span>][y]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dfs(x+<span class="number">1</span>,y,sum*<span class="number">10</span>+a[x+<span class="number">1</span>][y],d+<span class="number">1</span>);</span><br><span class="line">        dfs(x+<span class="number">1</span>,y,sum,d+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[x][y+<span class="number">1</span>]!=<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dfs(x,y+<span class="number">1</span>,sum*<span class="number">10</span>+a[x][y+<span class="number">1</span>],d+<span class="number">1</span>);</span><br><span class="line">        dfs(x,y+<span class="number">1</span>,sum,d+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(x,y,sum*<span class="number">10</span>+a[x][y],d+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">    a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">3</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">4</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">5</span>;</span><br><span class="line">    a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">6</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">7</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">8</span>;</span><br><span class="line">    a[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">9</span>;</span><br><span class="line">    a[<span class="number">4</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k,x=<span class="number">-1</span>,y=<span class="number">-1</span>,ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) &#123;x=i; <span class="keyword">break</span>;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k; i&lt;=k+<span class="number">1000</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) &#123;y=i; <span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span> (x!=<span class="number">-1</span>) ans=x;</span><br><span class="line">        <span class="keyword">if</span> (y!=<span class="number">-1</span> &amp;&amp; (<span class="built_in">abs</span>(ans-k)&gt;<span class="built_in">abs</span>(y-k) || x==<span class="number">-1</span>))</span><br><span class="line">            ans=y;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>队友AC</p><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>补题</p><p>博弈DP</p><p>首先我们设f[i] [j] 代表前i个商品，还剩j次魔法的最大收益</p><p>根据博弈的性质我们可以列出这个方程</p><script type="math/tex; mode=display">f[i][j]=max(f[i-1][j],min(a[i].x-a[i].y,f[i-1][j-1]-a[i].y));</script><p>我需要对利益从大到小排序，但是我到目前为止，还是不能非常理解，只能说懂个大概？到时候理解了补上吧</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span>  f[<span class="number">150005</span>][<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;a[<span class="number">150005</span>];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a,Node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">        sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][<span class="number">0</span>]=max(f[i<span class="number">-1</span>][<span class="number">0</span>],a[i].x-a[i].y);</span><br><span class="line">            <span class="comment">//cout&lt;&lt;f[i][0]&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=k; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=max(f[i<span class="number">-1</span>][j],min(a[i].x-a[i].y,f[i<span class="number">-1</span>][j<span class="number">-1</span>]-a[i].y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[n][k]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>赛中AC</p><p>我们考虑对于每个时间段进行离散化，然后进行区间DP即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 605</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],c[N],d[N],posa[N],posb[N];</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a[i],&amp;b[i],&amp;d[i]);</span><br><span class="line">            c[++t]=a[i];</span><br><span class="line">            c[++t]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;A&quot;&lt;&lt;endl;</span></span><br><span class="line">        sort(c+<span class="number">1</span>,c+t+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> m=unique(c+<span class="number">1</span>,c+t+<span class="number">1</span>)-(c+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">        <span class="comment">//cout&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">//for (int i=1; i&lt;=m; i++) cout&lt;&lt;c[i]&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            posa[i]=lower_bound(c+<span class="number">1</span>,c+m+<span class="number">1</span>,a[i])-c;</span><br><span class="line">            posb[i]=lower_bound(c+<span class="number">1</span>,c+m+<span class="number">1</span>,b[i])-c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> len=<span class="number">1</span>; len&lt;=m; len++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i+len<span class="number">-1</span>&lt;=m; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">int</span> pos=<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i&lt;=posa[k] &amp;&amp; posb[k]&lt;=j &amp;&amp; d[k]&gt;d[pos]) pos=k;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (pos==<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[i][j]=<span class="number">0</span>; <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=posa[pos]; k&lt;=posb[pos]; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    f[i][j]=min(f[i][j],f[i][k<span class="number">-1</span>]+f[k+<span class="number">1</span>][j]+d[pos]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[<span class="number">1</span>][m]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科大讯飞杯第18届上海大学程序设计联赛春季赛暨高校网络友谊赛</title>
      <link href="/2020/08/07/acm-4-yue-xun-lian/ke-da-xun-fei-bei-shang-hai-da-xue-18th/"/>
      <url>/2020/08/07/acm-4-yue-xun-lian/ke-da-xun-fei-bei-shang-hai-da-xue-18th/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>比赛平台：牛客</p><p>Rank：29</p><p>现场AC：8</p><p>补题：0    </p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>水题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=a[<span class="number">1</span>]+a[i];</span><br><span class="line">        <span class="keyword">int</span> y=sum-x;</span><br><span class="line">        ans=min(ans,<span class="built_in">abs</span>(x-y));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>结构体自定义排序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 105</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">double</span> z;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">friend</span> <span class="keyword">operator</span> &lt; (Node a,Node b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a.x==b.x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a.z==b.z)</span><br><span class="line">                <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> a.z&gt;b.z;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="keyword">double</span> z;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        <span class="keyword">if</span> (z&gt;=<span class="number">38</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ++tot; a[tot].x=x; a[tot].y=y;</span><br><span class="line">            a[tot].z=z;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+tot+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;tot&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=tot; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %.1f\n&quot;</span>,a[i].x,a[i].y,a[i].z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>发现只有完全相等才是-1，否则就是最长得那个字符串</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">strlen</span>(b+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (n==m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> bo=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) <span class="keyword">if</span> (a[i]!=b[i]) bo=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (bo) <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;max(n,m)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>构造题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;11\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=t; j++) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">            t++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>每一个都会被吃，于是直接计算答案即可，不存在什么最优策略，结果都一样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span>  x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line">        ans=ans+x;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans<span class="number">-1l</span>l*(n)*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>模拟一下，用java写应该会更加快，太久没写java了，下次可以补一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="comment">//2000.5.1 周一</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> y,m,d;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;y,&amp;m,&amp;d);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2001</span>;i&lt;=y;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; i%<span class="number">100</span>!=<span class="number">0</span>) || (i%<span class="number">400</span>==<span class="number">0</span>))sum=(sum+<span class="number">366</span>)%<span class="number">7</span>;</span><br><span class="line">            <span class="keyword">else</span> sum=(sum+<span class="number">365</span>)%<span class="number">7</span>;</span><br><span class="line">            <span class="comment">//printf(&quot;%d\n&quot;,sum);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">if</span>(!sum)tmp=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-sum+<span class="number">1</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">5</span> || (m==<span class="number">5</span> &amp;&amp; d&lt;tmp))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Mother&#x27;s Day: May %d&quot;</span>,tmp);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp=(sum+<span class="number">31</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(!tmp)tmp=<span class="number">15</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-tmp+<span class="number">1</span>+<span class="number">14</span>;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;<span class="number">6</span> || (m==<span class="number">6</span> &amp;&amp; d&lt;tmp))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Father&#x27;s Day: June %d&quot;</span>,tmp);</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        y++;</span><br><span class="line">        <span class="keyword">if</span>((y%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; y%<span class="number">100</span>!=<span class="number">0</span>) || (y%<span class="number">400</span>==<span class="number">0</span>))sum=(sum+<span class="number">366</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">else</span> sum=(sum+<span class="number">365</span>)%<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span>(!sum)tmp=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp=<span class="number">7</span>-sum+<span class="number">1</span>+<span class="number">7</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Mother&#x27;s Day: May %d&quot;</span>,tmp);</span><br><span class="line">        <span class="keyword">if</span>(tmp==<span class="number">1</span> || tmp==<span class="number">21</span> || tmp==<span class="number">31</span>)<span class="built_in">printf</span>(<span class="string">&quot;st&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">2</span> || tmp==<span class="number">22</span>)<span class="built_in">printf</span>(<span class="string">&quot;nd&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp==<span class="number">3</span> || tmp==<span class="number">23</span>)<span class="built_in">printf</span>(<span class="string">&quot;rd&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;, %d\n&quot;</span>,y);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>补题</p><ul><li>tag ：虚树+DP</li><li>考虑不同deep不会影响，于是直接DP即可</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,root;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,nxt;</span><br><span class="line">&#125;E[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot,head[N];</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">dfn_t</span>,dfn[N],max_deep,deep[N];</span><br><span class="line"><span class="keyword">int</span> f[N][<span class="number">22</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[N],top;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[N];</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dfn[x]&lt;dfn[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ++tot; E[tot]=(Edge)&#123;u,v,head[u]&#125;; head[u]=tot;</span><br><span class="line">    ++tot; E[tot]=(Edge)&#123;v,u,head[v]&#125;; head[v]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">    v[x].push_back(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    deep[x]=deep[fa]+<span class="number">1</span>;</span><br><span class="line">    max_deep=max(max_deep,deep[x]);</span><br><span class="line">    dfn[x]=<span class="keyword">dfn_t</span>++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; (<span class="number">1</span>&lt;&lt;i)&lt;=deep[x]; i++)</span><br><span class="line">        f[x][i]=f[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p=head[x]; p; p=E[p].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> son=E[p].v;</span><br><span class="line">        <span class="keyword">if</span> (son==fa) <span class="keyword">continue</span>;</span><br><span class="line">        f[son][<span class="number">0</span>]=x;</span><br><span class="line"></span><br><span class="line">        dfs(son,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (deep[x]&lt;deep[y]) swap(x,y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (deep[f[x][i]]&gt;=deep[y]) x=f[x][i];</span><br><span class="line">    <span class="keyword">if</span> (x==y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x&gt;<span class="number">1</span>) <span class="keyword">return</span> x<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span>  <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (v[x].size()==<span class="number">0</span>) <span class="keyword">return</span> a[x];</span><br><span class="line">    <span class="keyword">int</span> sz=v[x].size();</span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> y=v[x][i];</span><br><span class="line">        ll d=deep[y]-deep[x];</span><br><span class="line">        ll tmp=dp(y);</span><br><span class="line">        <span class="keyword">if</span> (tmp&gt;<span class="number">1</span>) res=res+max(<span class="number">1l</span>l,tmp-d);</span><br><span class="line">        <span class="keyword">else</span> res=res+tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    v[x].clear();</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot;              &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (top==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[++top]=x; <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> lca=LCA(s[top],x);</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; insert &quot;&lt;&lt;lca&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span> (top&gt;<span class="number">1</span> &amp;&amp; dfn[s[top<span class="number">-1</span>]]&gt;dfn[lca])</span><br><span class="line">    &#123;</span><br><span class="line">        ins2(s[top<span class="number">-1</span>],s[top]); top--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dfn[lca]&lt;dfn[s[top]]) ins2(lca,s[top--]);</span><br><span class="line">    <span class="keyword">if</span> (!top || s[top]!=lca) s[++top]=lca;</span><br><span class="line">    s[++top]=x;</span><br><span class="line">    <span class="comment">/*if (top==1) &#123;s[++top]=x; return ;&#125;</span></span><br><span class="line"><span class="comment">    int lca=LCA(x,s[top]);</span></span><br><span class="line"><span class="comment">    if (lca==s[top]) return ;</span></span><br><span class="line"><span class="comment">    while (top&gt;1 &amp;&amp; dfn[s[top-1]]&gt;dfn[lca])</span></span><br><span class="line"><span class="comment">        ins2(s[top-1],s[top]),top--;</span></span><br><span class="line"><span class="comment">    if (dfn[lca]&lt;dfn[s[top]]) ins2(lca,s[top--]);</span></span><br><span class="line"><span class="comment">    if (!top || (s[top]!=lca)) s[++top]=lca;</span></span><br><span class="line"><span class="comment">    s[++top]=x;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        ins(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dfn_t</span>=<span class="number">0</span>;</span><br><span class="line">    dfs(root,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[deep[i]].push_back(i);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;i&lt;&lt;&quot;   &quot;&lt;&lt;deep[i]&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=max_deep; i++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;dsds&quot;&lt;&lt;endl;</span></span><br><span class="line">         sort(b[i].begin(),b[i].end(),cmp);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">int</span> sz=b[i].size();</span><br><span class="line"></span><br><span class="line">         s[top=<span class="number">1</span>]=root;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;                 &quot;&lt;&lt;sz&lt;&lt;endl;</span></span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;sz; j++)</span><br><span class="line">         &#123;</span><br><span class="line">             insert(b[i][j]);</span><br><span class="line">             <span class="comment">//cout&lt;&lt;&quot;          &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;b[i][j]&lt;&lt;endl;</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span> (top&gt;<span class="number">1</span>) ins2(s[top<span class="number">-1</span>],s[top]),top--;</span><br><span class="line">         ll tt=dp(root);</span><br><span class="line">         <span class="comment">//cout&lt;&lt;&quot;                                    &quot;&lt;&lt;tt&lt;&lt;endl;</span></span><br><span class="line">         <span class="keyword">if</span> (tt) sum+=max(<span class="number">1l</span>l,tt<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;a[root]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (a[root]) sum+=max(<span class="number">1</span>,a[root]<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><ul><li>考虑贪心，枚举每一位，从大到小选择</li><li>如果当前位选择X，之前得余数为pre，目前相加余数为y，仍然有余数为0a张，余数为1的b张，余数为2的c张。</li><li>我们先从a，b，c中挑选最小组合和y匹配到余数为0，假设当前还剩余x位需要匹配，余数为0a张，余数为1b张，余数为2c张</li><li>我们用一个pb函数验证一下，我们可以枚举余数为1和余数为2的组合，不难发现最优解肯定在min（b，c）的一个范围内。于是时间复杂度不会很大。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> A,<span class="keyword">int</span> B,<span class="keyword">int</span> C)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot;                &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;A&lt;&lt;&quot; &quot;&lt;&lt;B&lt;&lt;&quot; &quot;&lt;&lt;C&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (x&lt;<span class="number">0</span> || A&lt;<span class="number">0</span> || B&lt;<span class="number">0</span> || C&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tmp=min(x/<span class="number">2</span>,min(B,C));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=tmp; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> xx=x<span class="number">-2</span>*i;</span><br><span class="line">        <span class="keyword">int</span> BB=B-i,CC=C-i;</span><br><span class="line">        BB=BB/<span class="number">3</span>; CC=CC/<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t1=xx/<span class="number">3</span>,t2=xx%<span class="number">3</span>;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;tmp&lt;&lt;&quot; &quot;&lt;&lt;t1&lt;&lt;&quot; &quot;&lt;&lt;t2&lt;&lt;endl;</span></span><br><span class="line">        t1=(t1-min(t1,BB+CC))*<span class="number">3</span>+t2;</span><br><span class="line">        <span class="keyword">if</span> (t1&lt;=A) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">9</span>; i++) a[i]=b[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">        n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            a[x]++;</span><br><span class="line">            b[x%<span class="number">3</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">9</span>;</span><br><span class="line">        <span class="keyword">bool</span> bo=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[i]=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (ans[i]==<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x&gt;=<span class="number">0</span> &amp;&amp; a[x]&lt;=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x--; <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (x==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">int</span> tmp=(sum+x)%<span class="number">3</span>;</span><br><span class="line">                <span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">                b[x%<span class="number">3</span>]--;</span><br><span class="line">               <span class="comment">// cout&lt;&lt;tmp&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span> (tmp==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (tmp==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;&quot; fuck &quot;&lt;&lt;endl;</span></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-1</span>,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>]<span class="number">-1</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-2</span>,b[<span class="number">0</span>],b[<span class="number">1</span>]<span class="number">-2</span>,b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (tmp==<span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;&quot;        fuck  &quot;&lt;&lt;endl;</span></span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-1</span>,b[<span class="number">0</span>],b[<span class="number">1</span>]<span class="number">-1</span>,b[<span class="number">2</span>])) flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (pd(k-i<span class="number">-2</span>,b[<span class="number">0</span>],b[<span class="number">1</span>],b[<span class="number">2</span>]<span class="number">-2</span>)) flag=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                b[x%<span class="number">3</span>]++;</span><br><span class="line">               <span class="comment">// cout&lt;&lt;&quot; flag == &quot;&lt;&lt;flag&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span> (flag)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans[i]=x; a[x]--; b[x%<span class="number">3</span>]--;</span><br><span class="line">                    sum=(sum+x)%<span class="number">3</span>;</span><br><span class="line">                   <span class="comment">// cout&lt;&lt;&quot;             &quot;&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>  x--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ans[i]==<span class="number">-1</span> || (i&gt;=<span class="number">2</span> &amp;&amp; ans[<span class="number">1</span>]==<span class="number">0</span> &amp;&amp; ans[<span class="number">2</span>]==<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                bo=<span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!bo) <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans[i]);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">9695863108 9</span></span><br><span class="line"><span class="comment">998866530</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3317358949 9</span></span><br><span class="line"><span class="comment">3264898906 1</span></span><br><span class="line"><span class="comment">3909403429 6</span></span><br><span class="line"><span class="comment">9874469304 2</span></span><br><span class="line"><span class="comment">5780072001 9</span></span><br><span class="line"><span class="comment">9695863108 9</span></span><br><span class="line"><span class="comment">5105937054 1</span></span><br><span class="line"><span class="comment">8306007864 3</span></span><br><span class="line"><span class="comment">0600837437 2</span></span><br><span class="line"><span class="comment">3598543576 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>待补</p><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>待补</p><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>待补</p><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>二分加网络流即可</p><ul><li>考虑二分答案</li><li>于是我们可以知道对于每一天可以完成多少事件</li><li>于是我们如下建图<ul><li>源点向每个事件连容量为c[i]的边</li><li>每个事件向对应的天数连容量为INF的边</li><li>每天向源点连容量为  每天可以完成多少事件的容量</li></ul></li><li>跑最大流验证即可</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">ll sum;</span><br><span class="line"><span class="keyword">int</span> n,e;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1005</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ll tol,head[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll to,next,w;</span><br><span class="line">&#125;a[maxn*<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">    tol=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(ll u,ll v,ll w)</span></span>&#123;</span><br><span class="line">    a[++tol]=(edge)&#123;v,head[u],w&#125;;head[u]=tol;</span><br><span class="line">    a[++tol]=(edge)&#123;u,head[v],<span class="number">0</span>&#125;;head[v]=tol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll dep[<span class="number">10010</span>],cur[<span class="number">10010</span>];</span><br><span class="line"><span class="built_in">queue</span>&lt;ll&gt;q;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">bfs</span><span class="params">(ll s,ll t)</span></span>&#123;</span><br><span class="line">    ll i,u,v;</span><br><span class="line">    <span class="keyword">for</span>(i=s;i&lt;=t;i++) dep[i]=<span class="number">-1</span>,cur[i]=head[i];</span><br><span class="line">    q.push(s);dep[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u=q.front();q.pop();</span><br><span class="line">        <span class="keyword">for</span>(i=head[u];~i;i=a[i].next)&#123;</span><br><span class="line">            v=a[i].to;<span class="keyword">if</span>(~dep[v]||!a[i].w) <span class="keyword">continue</span>;</span><br><span class="line">            dep[v]=dep[u]+<span class="number">1</span>;q.push(v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~dep[t];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll u,ll t,ll lim)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(u==t||!lim) <span class="keyword">return</span> lim;</span><br><span class="line">    ll i,v,f,flow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=cur[u];~i;i=a[i].next)&#123;</span><br><span class="line">        v=a[i].to;cur[u]=i;</span><br><span class="line">        <span class="keyword">if</span>((dep[v]==dep[u]+<span class="number">1</span>)&amp;&amp;(f=dfs(v,t,min(lim,a[i].w))))&#123;</span><br><span class="line">            a[i].w-=f;a[i^<span class="number">1</span>].w+=f;</span><br><span class="line">            flow+=f;lim-=f;</span><br><span class="line">            <span class="keyword">if</span>(!lim) <span class="keyword">return</span> flow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">dinic</span><span class="params">(ll s,ll t)</span></span>&#123;</span><br><span class="line">    ll re=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(bfs(s,t)) re+=dfs(s,t,INF);</span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>,t=n+<span class="number">7</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        add(s,i,c[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m[i][<span class="number">0</span>]; j++)</span><br><span class="line">            add(i,m[i][j]+n,INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll tmp=x/<span class="number">7</span>;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;=x%<span class="number">7</span>) tmp++;</span><br><span class="line">        tmp=tmp*e;</span><br><span class="line">        add(n+i,t,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dinic(s,t)==sum) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;e);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i]); sum+=c[i];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m[i][<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m[i][<span class="number">0</span>]; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (pd(mid)) ans=mid,r=mid<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020湖南多校round1-NWERC2014</title>
      <link href="/2020/08/07/acm-4-yue-xun-lian/2020-hu-nan-duo-xiao-round1-nwerc2014/"/>
      <url>/2020/08/07/acm-4-yue-xun-lian/2020-hu-nan-duo-xiao-round1-nwerc2014/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="比赛情况"><a href="#比赛情况" class="headerlink" title="比赛情况"></a>比赛情况</h2><p>虚拟测试：rank8</p><p>AC：7</p><p>补题：1</p><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>简单DP</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1ll&lt;&lt;32</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line">ll sum[N];</span><br><span class="line">ll f[N][<span class="number">22</span>];</span><br><span class="line"><span class="function">ll <span class="title">get</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll tmp=sum[j]-sum[i];</span><br><span class="line">    ll ans=tmp/<span class="number">10</span>*<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (tmp%<span class="number">10</span>&gt;=<span class="number">5</span>) ans+=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+(<span class="keyword">long</span> <span class="keyword">long</span> )a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=m+<span class="number">1</span>; j++)</span><br><span class="line">        f[i][j]=inf;</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m+<span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;i; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=min(f[i][j],f[k][j<span class="number">-1</span>]+get(k,i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;f[n][m+<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>队友YZ补题AC</p><p>拓扑排序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> state[maxn];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> du[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">char</span> op;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> ( op==<span class="string">&#x27;R&#x27;</span> ) state[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( op==<span class="string">&#x27;L&#x27;</span> ) state[i] = <span class="number">1</span>;</span><br><span class="line">        G[i].push_back(l);</span><br><span class="line">        G[i].push_back(r);</span><br><span class="line">        du[l]++; du[r]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">    num[<span class="number">1</span>] = m;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) <span class="keyword">if</span> ( du[i]==<span class="number">0</span> ) Q.push(i);</span><br><span class="line">    <span class="keyword">while</span> ( !Q.empty() ) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = Q.front(); Q.pop();</span><br><span class="line">        <span class="keyword">int</span> t = num[x]/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> ( num[x]%<span class="number">2</span>==<span class="number">1</span> ) t ++;</span><br><span class="line">        <span class="keyword">int</span> d = num[x]/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> ( state[x]==<span class="number">0</span> ) &#123;</span><br><span class="line">            num[ G[x][<span class="number">0</span>] ] += d;</span><br><span class="line">            num[ G[x][<span class="number">1</span>] ] += t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( state[x]==<span class="number">1</span> ) &#123;</span><br><span class="line">            num[ G[x][<span class="number">0</span>] ] += t;</span><br><span class="line">            num[ G[x][<span class="number">1</span>] ] += d;</span><br><span class="line">        &#125;</span><br><span class="line">        du[ G[x][<span class="number">0</span>] ] --;</span><br><span class="line">        <span class="keyword">if</span> ( G[x][<span class="number">0</span>]!=<span class="number">0</span> &amp;&amp; du[ G[x][<span class="number">0</span>] ]==<span class="number">0</span> ) Q.push( G[x][<span class="number">0</span>] );</span><br><span class="line">        du[ G[x][<span class="number">1</span>] ] --;</span><br><span class="line">        <span class="keyword">if</span> ( G[x][<span class="number">1</span>]!=<span class="number">0</span> &amp;&amp; du[ G[x][<span class="number">1</span>] ]==<span class="number">0</span> ) Q.push( G[x][<span class="number">1</span>] );</span><br><span class="line">        state[x] = ( state[x] + num[x]%<span class="number">2</span> )%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( state[i]==<span class="number">0</span> ) <span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;R&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;L&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>英语阅读题+三分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> n,p,s,v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-7</span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n*<span class="built_in">pow</span>(log2(n),c*<span class="built_in">sqrt</span>(<span class="number">2.0</span>))/(p*<span class="number">1e9</span>)+(<span class="number">1</span>+<span class="number">1.0</span>/c)*s/v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>,&amp;n,&amp;p,&amp;s,&amp;v);</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">while</span> (r-l&gt;eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> lmid=(r+l)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">double</span> rmid=(lmid+r)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">if</span> (calc(lmid)&lt;=calc(rmid)) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">// cout&lt;&lt;l&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.9f %.9f\n&quot;</span>,calc(l),l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll ;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> abs(x)  (((x)&gt;0)?(x):-(x))</span></span><br><span class="line"><span class="keyword">const</span> ll INF = <span class="number">1e18</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    ll x, y;</span><br><span class="line">    Point(ll x=<span class="number">0</span>, ll y=<span class="number">0</span>):x(x),y(y) &#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function">mt19937 <span class="title">mrand</span><span class="params">(time(<span class="number">0</span>))</span></span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;Point&gt; Polygon;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>+ (Vector A, Vector B) &#123; <span class="keyword">return</span> Vector(A.x + B.x, A.y + B.y); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>- (Point A, Point B) &#123; <span class="keyword">return</span> Vector(A.x - B.x, A.y - B.y); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>* (Vector A, ll p) &#123; <span class="keyword">return</span> Vector(A.x * p, A.y * p); &#125;</span><br><span class="line"><span class="keyword">inline</span> Vector <span class="keyword">operator</span>/ (Vector A, ll p) &#123; <span class="keyword">return</span> Vector(A.x / p, A.y / p); &#125;</span><br><span class="line"><span class="function">ll <span class="title">Cross3</span><span class="params">(Point p0,Point p1,Point p2)</span>  </span>&#123;<span class="keyword">return</span> (p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);&#125;</span><br><span class="line"><span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    ll n,p,tim=<span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;p);</span><br><span class="line">    p=ceill(n*p*<span class="number">1.0</span>/<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i].read();</span><br><span class="line">    <span class="keyword">while</span>(!fg&amp;&amp;tim--) &#123;</span><br><span class="line">        <span class="keyword">int</span> x=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> y=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(x==y) y=mrand()%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(Cross3(a[i],a[x],a[y])==<span class="number">0</span>) tot++;</span><br><span class="line">        <span class="keyword">if</span>(tot&gt;=p) fg=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fg) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>补题</p><ul><li>tag： 曼哈顿距离转切比雪夫距离之后三分套三分</li><li>注意事项<ul><li>整数三分的时候需要注意边界问题</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1ll&lt;&lt;60</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line">ll x[N],y[N];</span><br><span class="line">ll sumx[N],sumy[N];</span><br><span class="line">ll up,down,lef,rig;</span><br><span class="line">ll ans=inf;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将一个点(x,y)的坐标变为(x+y,x−y)后,原坐标系中的曼哈顿距离 = 新坐标系中的切比雪夫距离</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">将一个点(x,y)的坐标变为(x+y)/2,(x−y)/2) 后,原坐标系中的切比雪夫距离 = 新坐标系中的曼哈顿距离</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">ll <span class="title">getans2</span><span class="params">(ll X,ll Y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//  cout&lt;&lt;&quot;       &quot;&lt;&lt;X&lt;&lt;&quot; &quot;&lt;&lt;Y&lt;&lt;endl;</span></span><br><span class="line">    ll res=<span class="number">0</span>;</span><br><span class="line">    ll pos;</span><br><span class="line">    pos=lower_bound(x+<span class="number">1</span>,x+n+<span class="number">1</span>,X)-x<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    res+=X*pos-sumx[pos];</span><br><span class="line">    res+=sumx[n]-sumx[pos]-X*(n-pos);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;X&lt;&lt;&quot; &quot;&lt;&lt;pos&lt;&lt;endl;</span></span><br><span class="line">    pos=lower_bound(y+<span class="number">1</span>,y+n+<span class="number">1</span>,Y)-y<span class="number">-1</span>;</span><br><span class="line">    res+=Y*pos-sumy[pos];</span><br><span class="line">    res+=sumy[n]-sumy[pos]-Y*(n-pos);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// ll ress=0;</span></span><br><span class="line">    <span class="comment">//for (int i=1; i&lt;=n; i++) ress=ress+abs(X-x[i])+abs(Y-y[i]);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;ress&lt;&lt;&quot; &quot;&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getans</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ll r=min(x-down,rig-x),l=max(x-up,lef-x);</span><br><span class="line"></span><br><span class="line">    ll res=inf;</span><br><span class="line">    <span class="keyword">while</span> (l+<span class="number">2</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        ll lmid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        ll rmid=(lmid+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;               &quot;&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;&quot; &quot;&lt;&lt;lmid&lt;&lt;&quot; &quot;&lt;&lt;rmid&lt;&lt;endl;</span></span><br><span class="line">        ll anslmid=getans2(x,lmid);</span><br><span class="line">        ll ansrmid=getans2(x,rmid);</span><br><span class="line">        res=min(res,min(anslmid,ansrmid));</span><br><span class="line">        <span class="keyword">if</span> (anslmid&lt;ansrmid) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=l; i&lt;=r; i++) res=min(res,getans2(x,i));</span><br><span class="line">    ans=min(ans,res);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;m);</span><br><span class="line">    up=rig=inf;</span><br><span class="line">    down=lef=-inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        up=min(up,x[i]-y[i]+m);</span><br><span class="line">        down=max(down,x[i]-y[i]-m);</span><br><span class="line"></span><br><span class="line">        rig=min(rig,x[i]+y[i]+m);</span><br><span class="line">        lef=max(lef,x[i]+y[i]-m);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(x+<span class="number">1</span>,x+n+<span class="number">1</span>);</span><br><span class="line">    sort(y+<span class="number">1</span>,y+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        sumx[i]=sumx[i<span class="number">-1</span>]+x[i],sumy[i]=sumy[i<span class="number">-1</span>]+y[i];</span><br><span class="line">    <span class="keyword">if</span> (down&gt;up || lef&gt;rig)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll l=(lef+down)/<span class="number">2</span>,r=(rig+up)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (l+<span class="number">2</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot; &quot;&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl;</span></span><br><span class="line">        ll lmid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        ll rmid=(lmid+r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (getans(lmid)&lt;getans(rmid)) r=rmid;</span><br><span class="line">        <span class="keyword">else</span> l=lmid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=l; i&lt;=r; i++) getans(i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Property %d: This property will begin eroding in year %d.\n&quot;</span>, i, cy(X,Y));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,l=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> to[N&lt;&lt;<span class="number">1</span>],h[N&lt;&lt;<span class="number">1</span>],s[N],a[N],b[N],d[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hah</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    to[++l]=y,h[l]=s[x],s[x]=l;</span><br><span class="line">    to[++l]=x,h[l]=s[y],s[y]=l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> Fa)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!Fa)&#123;</span><br><span class="line">        a[x]=++tot;</span><br><span class="line">        b[x]=++tot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> b[x]=++tot;</span><br><span class="line">    <span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=s[x];i;i=h[i])&#123;</span><br><span class="line">        <span class="keyword">if</span>(to[i]!=Fa)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!Fa &amp;&amp; !fg)&#123;</span><br><span class="line">                a[to[i]]=a[x];</span><br><span class="line">                fg=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> a[to[i]]=b[x];</span><br><span class="line">            dfs(to[i],x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1 2\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1 2\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        hah(x,y);</span><br><span class="line">        d[x]++,d[y]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            dfs(i,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,a[i],b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>折半搜索</p><p>时间复杂度C(N,2)*(N/2)!</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll m;</span><br><span class="line">ll a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> bin[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">3</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> ,<span class="keyword">int</span> &gt;f[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">bool</span> bo;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x&amp;bin[i]) res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (res==n/<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> nowsta,ll tot,<span class="keyword">int</span> type,<span class="keyword">int</span> res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bo) <span class="keyword">return</span> ;</span><br><span class="line">    nowsta|=bin[x];</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;                    &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;nowsta&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;&quot; &quot;&lt;&lt;type&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span> (res==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot; &quot;&lt;&lt;nowsta&lt;&lt;&quot; &quot;&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;&quot; &quot;&lt;&lt;type&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (type==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((s[type]&amp;bin[i])) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (f[i][m-tot-a[x][i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    bo=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            f[x][tot]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nowsta&amp;bin[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(s[type]&amp;bin[i])) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(i,nowsta,tot+a[x][i],type,res<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bo=<span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i][j]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>][<span class="number">1</span>]*<span class="number">2</span>==m) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;dsds&quot;&lt;&lt;endl;</span></span><br><span class="line">    bin[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bin[i]=bin[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sta=(bin[n]<span class="number">-1</span><span class="number">-1</span>);<span class="comment">// cout&lt;&lt;sta&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=sta<span class="number">-1</span>; i; i=((i<span class="number">-1</span>)&amp;sta))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//  cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (pd(i)) <span class="keyword">continue</span>;</span><br><span class="line">       <span class="comment">// cout&lt;&lt;&quot;         &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;((i-1)&amp;sta)&lt;&lt;endl;</span></span><br><span class="line">        s[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        s[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (bin[j]&amp;i) s[<span class="number">1</span>]|=bin[j];</span><br><span class="line">            <span class="keyword">else</span> s[<span class="number">2</span>]|=bin[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;         &quot;&lt;&lt;s[1]&lt;&lt;&quot; &quot;&lt;&lt;s[2]&lt;&lt;endl;</span></span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,n/<span class="number">2</span>);</span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,n<span class="number">-1</span>-n/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (bo) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) f[j].clear();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (bo) <span class="built_in">puts</span>(<span class="string">&quot;possible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="built_in">string</span> b[N],a[N];</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="built_in">string</span>&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m,t,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i],s.insert(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">if</span>(s.find(b[i])!=s.end()) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            s.erase(s.lower_bound(b[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p>队友赛中AC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2010</span>;</span><br><span class="line">ll a[N];ll n,s,t;</span><br><span class="line"><span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;vis;</span><br><span class="line"><span class="built_in">multiset</span>&lt;ll&gt;st;</span><br><span class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll x)</span> </span>&#123;</span><br><span class="line">    ll cost=<span class="number">0</span>;</span><br><span class="line">    st.clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) st.insert(a[i]);</span><br><span class="line">    <span class="keyword">while</span>(!st.empty()) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st.lower_bound(x)==st.end()) &#123;</span><br><span class="line">            cost+=s-x;x=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">auto</span> p=st.lower_bound(x);</span><br><span class="line">            cost+=((*p)-x);</span><br><span class="line">            cost+=t;</span><br><span class="line">            x=((*p)+t)%s;</span><br><span class="line">            st.erase(p);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf(&quot;x:%d cost:%d take%d\n&quot;,x,cost,take);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll mn=<span class="number">4e18</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//枚举起点</span></span><br><span class="line">        mn=min(mn,cal(a[i]));</span><br><span class="line">    <span class="keyword">return</span> mn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mx</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll mx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//枚举起点</span></span><br><span class="line">        mx=max(mx,cal((a[i]+<span class="number">1</span>)%s));</span><br><span class="line">    <span class="keyword">return</span> mx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>), <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    a[n+<span class="number">1</span>]=a[<span class="number">1</span>]+s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n+<span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        ll pre=cal(a[i]);</span><br><span class="line">        sum+=pre*(a[i]-a[i<span class="number">-1</span>])+<span class="number">1l</span>l*(a[i]-a[i<span class="number">-1</span>])*(a[i]-a[i<span class="number">-1</span>]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=__gcd(sum,s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n%lld\n%lld/%lld\n&quot;</span>,mn(),mx(),sum/gcd,s/gcd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2020.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
